!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	.\glm\gtx\simd_vec4.hpp	/^		A = 3,$/;"	e	enum:glm::comp
AUDIODEVICE_H	.\src\AudioDevice.h	2;"	d
AUDIOENGINE_H	.\src\AudioEngine.h	2;"	d
Accept	.\tinyxml\tinyxml.cpp	/^bool TiXmlComment::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlComment
Accept	.\tinyxml\tinyxml.cpp	/^bool TiXmlDeclaration::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlDeclaration
Accept	.\tinyxml\tinyxml.cpp	/^bool TiXmlDocument::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlDocument
Accept	.\tinyxml\tinyxml.cpp	/^bool TiXmlElement::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlElement
Accept	.\tinyxml\tinyxml.cpp	/^bool TiXmlText::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlText
Accept	.\tinyxml\tinyxml.cpp	/^bool TiXmlUnknown::Accept( TiXmlVisitor* visitor ) const$/;"	f	class:TiXmlUnknown
Add	.\tinyxml\tinyxml.cpp	/^void TiXmlAttributeSet::Add( TiXmlAttribute* addMe )$/;"	f	class:TiXmlAttributeSet
Attribute	.\tinyxml\tinyxml.cpp	/^const char* TiXmlElement::Attribute( const char* name ) const$/;"	f	class:TiXmlElement
Attribute	.\tinyxml\tinyxml.cpp	/^const char* TiXmlElement::Attribute( const char* name, double* d ) const$/;"	f	class:TiXmlElement
Attribute	.\tinyxml\tinyxml.cpp	/^const char* TiXmlElement::Attribute( const char* name, int* i ) const$/;"	f	class:TiXmlElement
Attribute	.\tinyxml\tinyxml.cpp	/^const std::string* TiXmlElement::Attribute( const std::string& name ) const$/;"	f	class:TiXmlElement
Attribute	.\tinyxml\tinyxml.cpp	/^const std::string* TiXmlElement::Attribute( const std::string& name, double* d ) const$/;"	f	class:TiXmlElement
Attribute	.\tinyxml\tinyxml.cpp	/^const std::string* TiXmlElement::Attribute( const std::string& name, int* i ) const$/;"	f	class:TiXmlElement
AudioDevice	.\src\AudioDevice.cpp	/^AudioDevice::AudioDevice() : _audioDevice(NULL), _audioContext(NULL)$/;"	f	class:AudioDevice
AudioDevice	.\src\AudioDevice.h	/^class AudioDevice$/;"	c
AudioEngine	.\src\AudioEngine.cpp	/^AudioEngine::AudioEngine()$/;"	f	class:AudioEngine
AudioEngine	.\src\AudioEngine.h	/^class AudioEngine$/;"	c
B	.\glm\gtx\simd_vec4.hpp	/^		B = 2,$/;"	e	enum:glm::comp
Blank	.\tinyxml\tinyxmlparser.cpp	/^bool TiXmlText::Blank() const$/;"	f	class:TiXmlText
CDATA	.\tinyxml\tinyxml.h	/^	bool CDATA() const				{ return cdata; }$/;"	f	class:TiXmlText
CStr	.\tinyxml\tinyxml.h	/^	const char* CStr()								{ return buffer.c_str(); }$/;"	f	class:TiXmlPrinter
Child	.\tinyxml\tinyxml.cpp	/^TiXmlHandle TiXmlHandle::Child( const char* value, int count ) const$/;"	f	class:TiXmlHandle
Child	.\tinyxml\tinyxml.cpp	/^TiXmlHandle TiXmlHandle::Child( int count ) const$/;"	f	class:TiXmlHandle
Child	.\tinyxml\tinyxml.h	/^	TiXmlHandle Child( const std::string& _value, int index ) const			{ return Child( _value.c_str(), index ); }$/;"	f	class:TiXmlHandle
ChildElement	.\tinyxml\tinyxml.cpp	/^TiXmlHandle TiXmlHandle::ChildElement( const char* value, int count ) const$/;"	f	class:TiXmlHandle
ChildElement	.\tinyxml\tinyxml.cpp	/^TiXmlHandle TiXmlHandle::ChildElement( int count ) const$/;"	f	class:TiXmlHandle
ChildElement	.\tinyxml\tinyxml.h	/^	TiXmlHandle ChildElement( const std::string& _value, int index ) const	{ return ChildElement( _value.c_str(), index ); }$/;"	f	class:TiXmlHandle
Clear	.\tinyxml\tinyxml.cpp	/^void TiXmlNode::Clear()$/;"	f	class:TiXmlNode
Clear	.\tinyxml\tinyxml.h	/^	void Clear()		{ row = col = -1; }$/;"	f	struct:TiXmlCursor
ClearError	.\tinyxml\tinyxml.h	/^	void ClearError()						{	error = false;$/;"	f	class:TiXmlDocument
ClearThis	.\tinyxml\tinyxml.cpp	/^void TiXmlElement::ClearThis()$/;"	f	class:TiXmlElement
Clone	.\tinyxml\tinyxml.cpp	/^TiXmlNode* TiXmlComment::Clone() const$/;"	f	class:TiXmlComment
Clone	.\tinyxml\tinyxml.cpp	/^TiXmlNode* TiXmlDeclaration::Clone() const$/;"	f	class:TiXmlDeclaration
Clone	.\tinyxml\tinyxml.cpp	/^TiXmlNode* TiXmlDocument::Clone() const$/;"	f	class:TiXmlDocument
Clone	.\tinyxml\tinyxml.cpp	/^TiXmlNode* TiXmlElement::Clone() const$/;"	f	class:TiXmlElement
Clone	.\tinyxml\tinyxml.cpp	/^TiXmlNode* TiXmlText::Clone() const$/;"	f	class:TiXmlText
Clone	.\tinyxml\tinyxml.cpp	/^TiXmlNode* TiXmlUnknown::Clone() const$/;"	f	class:TiXmlUnknown
Column	.\tinyxml\tinyxml.h	/^	int Column() const		{ return location.col + 1; }	\/\/\/< See Row()$/;"	f	class:TiXmlBase
ConvertUTF32ToUTF8	.\tinyxml\tinyxmlparser.cpp	/^void TiXmlBase::ConvertUTF32ToUTF8( unsigned long input, char* output, int* length )$/;"	f	class:TiXmlBase
CopyTo	.\tinyxml\tinyxml.cpp	/^void TiXmlComment::CopyTo( TiXmlComment* target ) const$/;"	f	class:TiXmlComment
CopyTo	.\tinyxml\tinyxml.cpp	/^void TiXmlDeclaration::CopyTo( TiXmlDeclaration* target ) const$/;"	f	class:TiXmlDeclaration
CopyTo	.\tinyxml\tinyxml.cpp	/^void TiXmlDocument::CopyTo( TiXmlDocument* target ) const$/;"	f	class:TiXmlDocument
CopyTo	.\tinyxml\tinyxml.cpp	/^void TiXmlElement::CopyTo( TiXmlElement* target ) const$/;"	f	class:TiXmlElement
CopyTo	.\tinyxml\tinyxml.cpp	/^void TiXmlNode::CopyTo( TiXmlNode* target ) const$/;"	f	class:TiXmlNode
CopyTo	.\tinyxml\tinyxml.cpp	/^void TiXmlText::CopyTo( TiXmlText* target ) const$/;"	f	class:TiXmlText
CopyTo	.\tinyxml\tinyxml.cpp	/^void TiXmlUnknown::CopyTo( TiXmlUnknown* target ) const$/;"	f	class:TiXmlUnknown
Cursor	.\tinyxml\tinyxmlparser.cpp	/^	const TiXmlCursor& Cursor() const	{ return cursor; }$/;"	f	class:TiXmlParsingData
DEBUG	.\tinyxml\tinyxml.h	45;"	d
DoIndent	.\tinyxml\tinyxml.h	/^	void DoIndent()	{$/;"	f	class:TiXmlPrinter
DoLineBreak	.\tinyxml\tinyxml.h	/^	void DoLineBreak() {$/;"	f	class:TiXmlPrinter
DoubleValue	.\tinyxml\tinyxml.cpp	/^double  TiXmlAttribute::DoubleValue() const$/;"	f	class:TiXmlAttribute
Element	.\tinyxml\tinyxml.h	/^	TiXmlElement* Element() const	{ return ToElement(); }$/;"	f	class:TiXmlHandle
EncodeString	.\tinyxml\tinyxml.cpp	/^void TiXmlBase::EncodeString( const TIXML_STRING& str, TIXML_STRING* outString )$/;"	f	class:TiXmlBase
Encoding	.\tinyxml\tinyxml.h	/^	const char *Encoding() const		{ return encoding.c_str (); }$/;"	f	class:TiXmlDeclaration
Entity	.\tinyxml\tinyxml.h	/^	struct Entity$/;"	s	class:TiXmlBase
Error	.\tinyxml\tinyxml.h	/^	bool Error() const						{ return error; }$/;"	f	class:TiXmlDocument
ErrorCol	.\tinyxml\tinyxml.h	/^	int ErrorCol() const	{ return errorLocation.col+1; }	\/\/\/< The column where the error occured. See ErrorRow()$/;"	f	class:TiXmlDocument
ErrorDesc	.\tinyxml\tinyxml.h	/^	const char * ErrorDesc() const	{ return errorDesc.c_str (); }$/;"	f	class:TiXmlDocument
ErrorId	.\tinyxml\tinyxml.h	/^	int ErrorId()	const				{ return errorId; }$/;"	f	class:TiXmlDocument
ErrorRow	.\tinyxml\tinyxml.h	/^	int ErrorRow() const	{ return errorLocation.row+1; }$/;"	f	class:TiXmlDocument
FileReader	.\util\FileReader.h	/^namespace FileReader$/;"	n
Find	.\tinyxml\tinyxml.cpp	/^TiXmlAttribute* TiXmlAttributeSet::Find( const char* name ) const$/;"	f	class:TiXmlAttributeSet
Find	.\tinyxml\tinyxml.cpp	/^TiXmlAttribute* TiXmlAttributeSet::Find( const std::string& name ) const$/;"	f	class:TiXmlAttributeSet
FindOrCreate	.\tinyxml\tinyxml.cpp	/^TiXmlAttribute* TiXmlAttributeSet::FindOrCreate( const char* _name )$/;"	f	class:TiXmlAttributeSet
FindOrCreate	.\tinyxml\tinyxml.cpp	/^TiXmlAttribute* TiXmlAttributeSet::FindOrCreate( const std::string& _name )$/;"	f	class:TiXmlAttributeSet
First	.\tinyxml\tinyxml.h	/^	TiXmlAttribute* First()					{ return ( sentinel.next == &sentinel ) ? 0 : sentinel.next; }$/;"	f	class:TiXmlAttributeSet
First	.\tinyxml\tinyxml.h	/^	const TiXmlAttribute* First()	const	{ return ( sentinel.next == &sentinel ) ? 0 : sentinel.next; }$/;"	f	class:TiXmlAttributeSet
FirstAttribute	.\tinyxml\tinyxml.h	/^	TiXmlAttribute* FirstAttribute() 				{ return attributeSet.First(); }$/;"	f	class:TiXmlElement
FirstAttribute	.\tinyxml\tinyxml.h	/^	const TiXmlAttribute* FirstAttribute() const	{ return attributeSet.First(); }		\/\/\/< Access the first attribute in this element.$/;"	f	class:TiXmlElement
FirstChild	.\tinyxml\tinyxml.cpp	/^TiXmlHandle TiXmlHandle::FirstChild( const char * value ) const$/;"	f	class:TiXmlHandle
FirstChild	.\tinyxml\tinyxml.cpp	/^TiXmlHandle TiXmlHandle::FirstChild() const$/;"	f	class:TiXmlHandle
FirstChild	.\tinyxml\tinyxml.cpp	/^const TiXmlNode* TiXmlNode::FirstChild( const char * _value ) const$/;"	f	class:TiXmlNode
FirstChild	.\tinyxml\tinyxml.h	/^	TiXmlHandle FirstChild( const std::string& _value ) const				{ return FirstChild( _value.c_str() ); }$/;"	f	class:TiXmlHandle
FirstChild	.\tinyxml\tinyxml.h	/^	TiXmlNode* FirstChild( const char * _value ) {$/;"	f	class:TiXmlNode
FirstChild	.\tinyxml\tinyxml.h	/^	TiXmlNode* FirstChild( const std::string& _value )				{	return FirstChild (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
FirstChild	.\tinyxml\tinyxml.h	/^	TiXmlNode* FirstChild()						{ return firstChild; }$/;"	f	class:TiXmlNode
FirstChild	.\tinyxml\tinyxml.h	/^	const TiXmlNode* FirstChild( const std::string& _value ) const	{	return FirstChild (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
FirstChild	.\tinyxml\tinyxml.h	/^	const TiXmlNode* FirstChild()	const		{ return firstChild; }	\/\/\/< The first child of this node. Will be null if there are no children.$/;"	f	class:TiXmlNode
FirstChildElement	.\tinyxml\tinyxml.cpp	/^TiXmlHandle TiXmlHandle::FirstChildElement( const char * value ) const$/;"	f	class:TiXmlHandle
FirstChildElement	.\tinyxml\tinyxml.cpp	/^TiXmlHandle TiXmlHandle::FirstChildElement() const$/;"	f	class:TiXmlHandle
FirstChildElement	.\tinyxml\tinyxml.cpp	/^const TiXmlElement* TiXmlNode::FirstChildElement( const char * _value ) const$/;"	f	class:TiXmlNode
FirstChildElement	.\tinyxml\tinyxml.cpp	/^const TiXmlElement* TiXmlNode::FirstChildElement() const$/;"	f	class:TiXmlNode
FirstChildElement	.\tinyxml\tinyxml.h	/^	TiXmlElement* FirstChildElement( const char * _value ) {$/;"	f	class:TiXmlNode
FirstChildElement	.\tinyxml\tinyxml.h	/^	TiXmlElement* FirstChildElement( const std::string& _value )				{	return FirstChildElement (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
FirstChildElement	.\tinyxml\tinyxml.h	/^	TiXmlElement* FirstChildElement() {$/;"	f	class:TiXmlNode
FirstChildElement	.\tinyxml\tinyxml.h	/^	TiXmlHandle FirstChildElement( const std::string& _value ) const		{ return FirstChildElement( _value.c_str() ); }$/;"	f	class:TiXmlHandle
FirstChildElement	.\tinyxml\tinyxml.h	/^	const TiXmlElement* FirstChildElement( const std::string& _value ) const	{	return FirstChildElement (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
G	.\glm\gtx\simd_vec4.hpp	/^		G = 1,$/;"	e	enum:glm::comp
GAME_H	.\src\Game.h	2;"	d
GLEW_STATIC	.\src\GraphicsDevice.h	4;"	d
GLM_ALIGN	.\glm\detail\setup.hpp	685;"	d
GLM_ALIGN	.\glm\detail\setup.hpp	697;"	d
GLM_ALIGN	.\glm\detail\setup.hpp	713;"	d
GLM_ALIGN	.\glm\detail\setup.hpp	721;"	d
GLM_ALIGNED_STORAGE_TYPE_STRUCT	.\glm\detail\type_vec.hpp	20;"	d
GLM_ALIGNED_STRUCT	.\glm\detail\setup.hpp	686;"	d
GLM_ALIGNED_STRUCT	.\glm\detail\setup.hpp	698;"	d
GLM_ALIGNED_STRUCT	.\glm\detail\setup.hpp	714;"	d
GLM_ALIGNED_STRUCT	.\glm\detail\setup.hpp	722;"	d
GLM_ALIGNED_TYPEDEF	.\glm\detail\setup.hpp	687;"	d
GLM_ALIGNED_TYPEDEF	.\glm\detail\setup.hpp	699;"	d
GLM_ALIGNED_TYPEDEF	.\glm\detail\setup.hpp	715;"	d
GLM_ALIGNED_TYPEDEF	.\glm\detail\setup.hpp	723;"	d
GLM_ARCH	.\glm\simd\platform.h	335;"	d
GLM_ARCH	.\glm\simd\platform.h	337;"	d
GLM_ARCH	.\glm\simd\platform.h	339;"	d
GLM_ARCH	.\glm\simd\platform.h	341;"	d
GLM_ARCH	.\glm\simd\platform.h	343;"	d
GLM_ARCH	.\glm\simd\platform.h	345;"	d
GLM_ARCH	.\glm\simd\platform.h	347;"	d
GLM_ARCH	.\glm\simd\platform.h	349;"	d
GLM_ARCH	.\glm\simd\platform.h	351;"	d
GLM_ARCH	.\glm\simd\platform.h	353;"	d
GLM_ARCH	.\glm\simd\platform.h	355;"	d
GLM_ARCH	.\glm\simd\platform.h	357;"	d
GLM_ARCH	.\glm\simd\platform.h	361;"	d
GLM_ARCH	.\glm\simd\platform.h	363;"	d
GLM_ARCH	.\glm\simd\platform.h	365;"	d
GLM_ARCH	.\glm\simd\platform.h	367;"	d
GLM_ARCH	.\glm\simd\platform.h	369;"	d
GLM_ARCH	.\glm\simd\platform.h	371;"	d
GLM_ARCH	.\glm\simd\platform.h	373;"	d
GLM_ARCH	.\glm\simd\platform.h	375;"	d
GLM_ARCH	.\glm\simd\platform.h	377;"	d
GLM_ARCH	.\glm\simd\platform.h	379;"	d
GLM_ARCH	.\glm\simd\platform.h	381;"	d
GLM_ARCH	.\glm\simd\platform.h	383;"	d
GLM_ARCH	.\glm\simd\platform.h	385;"	d
GLM_ARCH	.\glm\simd\platform.h	387;"	d
GLM_ARCH	.\glm\simd\platform.h	391;"	d
GLM_ARCH	.\glm\simd\platform.h	393;"	d
GLM_ARCH	.\glm\simd\platform.h	395;"	d
GLM_ARCH	.\glm\simd\platform.h	397;"	d
GLM_ARCH	.\glm\simd\platform.h	400;"	d
GLM_ARCH	.\glm\simd\platform.h	402;"	d
GLM_ARCH	.\glm\simd\platform.h	405;"	d
GLM_ARCH	.\glm\simd\platform.h	407;"	d
GLM_ARCH	.\glm\simd\platform.h	410;"	d
GLM_ARCH_ARM	.\glm\simd\platform.h	329;"	d
GLM_ARCH_ARM_BIT	.\glm\simd\platform.h	314;"	d
GLM_ARCH_AVX	.\glm\simd\platform.h	326;"	d
GLM_ARCH_AVX2	.\glm\simd\platform.h	327;"	d
GLM_ARCH_AVX2_BIT	.\glm\simd\platform.h	312;"	d
GLM_ARCH_AVX512	.\glm\simd\platform.h	328;"	d
GLM_ARCH_AVX512_BIT	.\glm\simd\platform.h	313;"	d
GLM_ARCH_AVX_BIT	.\glm\simd\platform.h	311;"	d
GLM_ARCH_MIPS	.\glm\simd\platform.h	331;"	d
GLM_ARCH_MIPS_BIT	.\glm\simd\platform.h	316;"	d
GLM_ARCH_NEON	.\glm\simd\platform.h	330;"	d
GLM_ARCH_NEON_BIT	.\glm\simd\platform.h	315;"	d
GLM_ARCH_PPC	.\glm\simd\platform.h	332;"	d
GLM_ARCH_PPC_BIT	.\glm\simd\platform.h	317;"	d
GLM_ARCH_PURE	.\glm\simd\platform.h	319;"	d
GLM_ARCH_SSE2	.\glm\simd\platform.h	321;"	d
GLM_ARCH_SSE2_BIT	.\glm\simd\platform.h	306;"	d
GLM_ARCH_SSE3	.\glm\simd\platform.h	322;"	d
GLM_ARCH_SSE3_BIT	.\glm\simd\platform.h	307;"	d
GLM_ARCH_SSE41	.\glm\simd\platform.h	324;"	d
GLM_ARCH_SSE41_BIT	.\glm\simd\platform.h	309;"	d
GLM_ARCH_SSE42	.\glm\simd\platform.h	325;"	d
GLM_ARCH_SSE42_BIT	.\glm\simd\platform.h	310;"	d
GLM_ARCH_SSSE3	.\glm\simd\platform.h	323;"	d
GLM_ARCH_SSSE3_BIT	.\glm\simd\platform.h	308;"	d
GLM_ARCH_X86	.\glm\simd\platform.h	320;"	d
GLM_ARCH_X86_BIT	.\glm\simd\platform.h	305;"	d
GLM_COMPILER	.\glm\simd\platform.h	148;"	d
GLM_COMPILER	.\glm\simd\platform.h	152;"	d
GLM_COMPILER	.\glm\simd\platform.h	154;"	d
GLM_COMPILER	.\glm\simd\platform.h	156;"	d
GLM_COMPILER	.\glm\simd\platform.h	158;"	d
GLM_COMPILER	.\glm\simd\platform.h	160;"	d
GLM_COMPILER	.\glm\simd\platform.h	162;"	d
GLM_COMPILER	.\glm\simd\platform.h	164;"	d
GLM_COMPILER	.\glm\simd\platform.h	175;"	d
GLM_COMPILER	.\glm\simd\platform.h	182;"	d
GLM_COMPILER	.\glm\simd\platform.h	184;"	d
GLM_COMPILER	.\glm\simd\platform.h	186;"	d
GLM_COMPILER	.\glm\simd\platform.h	188;"	d
GLM_COMPILER	.\glm\simd\platform.h	190;"	d
GLM_COMPILER	.\glm\simd\platform.h	192;"	d
GLM_COMPILER	.\glm\simd\platform.h	196;"	d
GLM_COMPILER	.\glm\simd\platform.h	198;"	d
GLM_COMPILER	.\glm\simd\platform.h	200;"	d
GLM_COMPILER	.\glm\simd\platform.h	202;"	d
GLM_COMPILER	.\glm\simd\platform.h	204;"	d
GLM_COMPILER	.\glm\simd\platform.h	206;"	d
GLM_COMPILER	.\glm\simd\platform.h	208;"	d
GLM_COMPILER	.\glm\simd\platform.h	210;"	d
GLM_COMPILER	.\glm\simd\platform.h	212;"	d
GLM_COMPILER	.\glm\simd\platform.h	214;"	d
GLM_COMPILER	.\glm\simd\platform.h	216;"	d
GLM_COMPILER	.\glm\simd\platform.h	218;"	d
GLM_COMPILER	.\glm\simd\platform.h	220;"	d
GLM_COMPILER	.\glm\simd\platform.h	222;"	d
GLM_COMPILER	.\glm\simd\platform.h	224;"	d
GLM_COMPILER	.\glm\simd\platform.h	233;"	d
GLM_COMPILER	.\glm\simd\platform.h	235;"	d
GLM_COMPILER	.\glm\simd\platform.h	237;"	d
GLM_COMPILER	.\glm\simd\platform.h	239;"	d
GLM_COMPILER	.\glm\simd\platform.h	241;"	d
GLM_COMPILER	.\glm\simd\platform.h	243;"	d
GLM_COMPILER	.\glm\simd\platform.h	249;"	d
GLM_COMPILER	.\glm\simd\platform.h	251;"	d
GLM_COMPILER	.\glm\simd\platform.h	253;"	d
GLM_COMPILER	.\glm\simd\platform.h	255;"	d
GLM_COMPILER	.\glm\simd\platform.h	257;"	d
GLM_COMPILER	.\glm\simd\platform.h	259;"	d
GLM_COMPILER	.\glm\simd\platform.h	261;"	d
GLM_COMPILER	.\glm\simd\platform.h	263;"	d
GLM_COMPILER	.\glm\simd\platform.h	265;"	d
GLM_COMPILER	.\glm\simd\platform.h	267;"	d
GLM_COMPILER	.\glm\simd\platform.h	269;"	d
GLM_COMPILER	.\glm\simd\platform.h	271;"	d
GLM_COMPILER	.\glm\simd\platform.h	273;"	d
GLM_COMPILER	.\glm\simd\platform.h	275;"	d
GLM_COMPILER	.\glm\simd\platform.h	277;"	d
GLM_COMPILER	.\glm\simd\platform.h	279;"	d
GLM_COMPILER	.\glm\simd\platform.h	281;"	d
GLM_COMPILER	.\glm\simd\platform.h	283;"	d
GLM_COMPILER	.\glm\simd\platform.h	285;"	d
GLM_COMPILER	.\glm\simd\platform.h	287;"	d
GLM_COMPILER	.\glm\simd\platform.h	289;"	d
GLM_COMPILER	.\glm\simd\platform.h	293;"	d
GLM_COMPILER_CLANG	.\glm\simd\platform.h	129;"	d
GLM_COMPILER_CLANG32	.\glm\simd\platform.h	130;"	d
GLM_COMPILER_CLANG33	.\glm\simd\platform.h	131;"	d
GLM_COMPILER_CLANG34	.\glm\simd\platform.h	132;"	d
GLM_COMPILER_CLANG35	.\glm\simd\platform.h	133;"	d
GLM_COMPILER_CLANG36	.\glm\simd\platform.h	134;"	d
GLM_COMPILER_CLANG37	.\glm\simd\platform.h	135;"	d
GLM_COMPILER_CLANG38	.\glm\simd\platform.h	136;"	d
GLM_COMPILER_CLANG39	.\glm\simd\platform.h	137;"	d
GLM_COMPILER_CLANG40	.\glm\simd\platform.h	138;"	d
GLM_COMPILER_CLANG41	.\glm\simd\platform.h	139;"	d
GLM_COMPILER_CLANG42	.\glm\simd\platform.h	140;"	d
GLM_COMPILER_CUDA	.\glm\simd\platform.h	117;"	d
GLM_COMPILER_CUDA40	.\glm\simd\platform.h	118;"	d
GLM_COMPILER_CUDA41	.\glm\simd\platform.h	119;"	d
GLM_COMPILER_CUDA42	.\glm\simd\platform.h	120;"	d
GLM_COMPILER_CUDA50	.\glm\simd\platform.h	121;"	d
GLM_COMPILER_CUDA60	.\glm\simd\platform.h	122;"	d
GLM_COMPILER_CUDA65	.\glm\simd\platform.h	123;"	d
GLM_COMPILER_CUDA70	.\glm\simd\platform.h	124;"	d
GLM_COMPILER_CUDA75	.\glm\simd\platform.h	125;"	d
GLM_COMPILER_CUDA80	.\glm\simd\platform.h	126;"	d
GLM_COMPILER_GCC	.\glm\simd\platform.h	96;"	d
GLM_COMPILER_GCC44	.\glm\simd\platform.h	97;"	d
GLM_COMPILER_GCC45	.\glm\simd\platform.h	98;"	d
GLM_COMPILER_GCC46	.\glm\simd\platform.h	99;"	d
GLM_COMPILER_GCC47	.\glm\simd\platform.h	100;"	d
GLM_COMPILER_GCC48	.\glm\simd\platform.h	101;"	d
GLM_COMPILER_GCC49	.\glm\simd\platform.h	102;"	d
GLM_COMPILER_GCC50	.\glm\simd\platform.h	103;"	d
GLM_COMPILER_GCC51	.\glm\simd\platform.h	104;"	d
GLM_COMPILER_GCC52	.\glm\simd\platform.h	105;"	d
GLM_COMPILER_GCC53	.\glm\simd\platform.h	106;"	d
GLM_COMPILER_GCC54	.\glm\simd\platform.h	107;"	d
GLM_COMPILER_GCC60	.\glm\simd\platform.h	108;"	d
GLM_COMPILER_GCC61	.\glm\simd\platform.h	109;"	d
GLM_COMPILER_GCC62	.\glm\simd\platform.h	110;"	d
GLM_COMPILER_GCC70	.\glm\simd\platform.h	111;"	d
GLM_COMPILER_GCC71	.\glm\simd\platform.h	112;"	d
GLM_COMPILER_GCC72	.\glm\simd\platform.h	113;"	d
GLM_COMPILER_GCC80	.\glm\simd\platform.h	114;"	d
GLM_COMPILER_INTEL	.\glm\simd\platform.h	79;"	d
GLM_COMPILER_INTEL12	.\glm\simd\platform.h	80;"	d
GLM_COMPILER_INTEL12_1	.\glm\simd\platform.h	81;"	d
GLM_COMPILER_INTEL13	.\glm\simd\platform.h	82;"	d
GLM_COMPILER_INTEL14	.\glm\simd\platform.h	83;"	d
GLM_COMPILER_INTEL15	.\glm\simd\platform.h	84;"	d
GLM_COMPILER_INTEL16	.\glm\simd\platform.h	85;"	d
GLM_COMPILER_UNKNOWN	.\glm\simd\platform.h	76;"	d
GLM_COMPILER_VC	.\glm\simd\platform.h	88;"	d
GLM_COMPILER_VC10	.\glm\simd\platform.h	89;"	d
GLM_COMPILER_VC11	.\glm\simd\platform.h	90;"	d
GLM_COMPILER_VC12	.\glm\simd\platform.h	91;"	d
GLM_COMPILER_VC14	.\glm\simd\platform.h	92;"	d
GLM_COMPILER_VC15	.\glm\simd\platform.h	93;"	d
GLM_CONSTEXPR	.\glm\detail\setup.hpp	742;"	d
GLM_CONSTEXPR	.\glm\detail\setup.hpp	749;"	d
GLM_CONSTEXPR_CTOR	.\glm\detail\setup.hpp	744;"	d
GLM_CONSTEXPR_CTOR	.\glm\detail\setup.hpp	746;"	d
GLM_CONSTEXPR_CTOR	.\glm\detail\setup.hpp	750;"	d
GLM_CONSTEXPR_SIMD	.\glm\detail\setup.hpp	760;"	d
GLM_CONSTEXPR_SIMD	.\glm\detail\setup.hpp	762;"	d
GLM_COORDINATE_SYSTEM	.\glm\detail\setup.hpp	666;"	d
GLM_COORDINATE_SYSTEM	.\glm\detail\setup.hpp	668;"	d
GLM_COUNTOF	.\glm\detail\setup.hpp	815;"	d
GLM_CUDA_FUNC_DECL	.\glm\detail\setup.hpp	548;"	d
GLM_CUDA_FUNC_DECL	.\glm\detail\setup.hpp	551;"	d
GLM_CUDA_FUNC_DEF	.\glm\detail\setup.hpp	547;"	d
GLM_CUDA_FUNC_DEF	.\glm\detail\setup.hpp	550;"	d
GLM_CXX11_ACCESS_CONTROL_SFINAE	.\glm\detail\_features.hpp	268;"	d
GLM_CXX11_ALIAS_TEMPLATE	.\glm\detail\_features.hpp	272;"	d
GLM_CXX11_ALIGNAS	.\glm\detail\_features.hpp	276;"	d
GLM_CXX11_ATTRIBUTES	.\glm\detail\_features.hpp	280;"	d
GLM_CXX11_AUTO_TYPE	.\glm\detail\_features.hpp	372;"	d
GLM_CXX11_CONSTEXPR	.\glm\detail\_features.hpp	284;"	d
GLM_CXX11_DECLTYPE	.\glm\detail\_features.hpp	288;"	d
GLM_CXX11_DEFAULTED_FUNCTIONS	.\glm\detail\_features.hpp	296;"	d
GLM_CXX11_DEFAULT_FUNCTION_TEMPLATE_ARGS	.\glm\detail\_features.hpp	292;"	d
GLM_CXX11_DELEGATING_CONSTRUCTORS	.\glm\detail\_features.hpp	300;"	d
GLM_CXX11_DELETED_FUNCTIONS	.\glm\detail\_features.hpp	304;"	d
GLM_CXX11_EXPLICIT_CONVERSIONS	.\glm\detail\_features.hpp	308;"	d
GLM_CXX11_GENERALIZED_INITIALIZERS	.\glm\detail\_features.hpp	312;"	d
GLM_CXX11_IMPLICIT_MOVES	.\glm\detail\_features.hpp	316;"	d
GLM_CXX11_INHERITING_CONSTRUCTORS	.\glm\detail\_features.hpp	320;"	d
GLM_CXX11_INLINE_NAMESPACES	.\glm\detail\_features.hpp	324;"	d
GLM_CXX11_LAMBDAS	.\glm\detail\_features.hpp	328;"	d
GLM_CXX11_LOCAL_TYPE_TEMPLATE_ARGS	.\glm\detail\_features.hpp	332;"	d
GLM_CXX11_NOEXCEPT	.\glm\detail\_features.hpp	336;"	d
GLM_CXX11_NONSTATIC_MEMBER_INIT	.\glm\detail\_features.hpp	340;"	d
GLM_CXX11_NULLPTR	.\glm\detail\_features.hpp	344;"	d
GLM_CXX11_OVERRIDE_CONTROL	.\glm\detail\_features.hpp	348;"	d
GLM_CXX11_RANGE_FOR	.\glm\detail\_features.hpp	356;"	d
GLM_CXX11_RAW_STRING_LITERALS	.\glm\detail\_features.hpp	360;"	d
GLM_CXX11_REFERENCE_QUALIFIED_FUNCTIONS	.\glm\detail\_features.hpp	352;"	d
GLM_CXX11_RVALUE_REFERENCES	.\glm\detail\_features.hpp	364;"	d
GLM_CXX11_STATIC_ASSERT	.\glm\detail\_features.hpp	255;"	d
GLM_CXX11_STATIC_ASSERT	.\glm\detail\_features.hpp	368;"	d
GLM_CXX11_STRONG_ENUMS	.\glm\detail\_features.hpp	376;"	d
GLM_CXX11_TRAILING_RETURN	.\glm\detail\_features.hpp	380;"	d
GLM_CXX11_UNICODE_LITERALS	.\glm\detail\_features.hpp	384;"	d
GLM_CXX11_UNRESTRICTED_UNIONS	.\glm\detail\_features.hpp	388;"	d
GLM_CXX11_USER_LITERALS	.\glm\detail\_features.hpp	392;"	d
GLM_CXX11_VARIADIC_TEMPLATES	.\glm\detail\_features.hpp	396;"	d
GLM_CXX98_EXCEPTIONS	.\glm\detail\_features.hpp	260;"	d
GLM_CXX98_RTTI	.\glm\detail\_features.hpp	264;"	d
GLM_DEFAULT	.\glm\detail\setup.hpp	730;"	d
GLM_DEFAULT	.\glm\detail\setup.hpp	737;"	d
GLM_DEFAULT	.\glm\detail\type_mat2x2.hpp	/^		GLM_FUNC_DECL tmat2x2(tmat2x2<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat2x2
GLM_DEFAULT	.\glm\detail\type_mat2x2.hpp	/^		GLM_FUNC_DECL tmat2x2<T, P> & operator=(tmat2x2<T, P> const & v) GLM_DEFAULT;$/;"	m	struct:glm::tmat2x2
GLM_DEFAULT	.\glm\detail\type_mat2x3.hpp	/^		GLM_FUNC_DECL tmat2x3(tmat2x3<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat2x3
GLM_DEFAULT	.\glm\detail\type_mat2x3.hpp	/^		GLM_FUNC_DECL tmat2x3<T, P> & operator=(tmat2x3<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat2x3
GLM_DEFAULT	.\glm\detail\type_mat2x4.hpp	/^		GLM_FUNC_DECL tmat2x4(tmat2x4<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat2x4
GLM_DEFAULT	.\glm\detail\type_mat2x4.hpp	/^		GLM_FUNC_DECL tmat2x4<T, P> & operator=(tmat2x4<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat2x4
GLM_DEFAULT	.\glm\detail\type_mat3x2.hpp	/^		GLM_FUNC_DECL tmat3x2(tmat3x2<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat3x2
GLM_DEFAULT	.\glm\detail\type_mat3x2.hpp	/^		GLM_FUNC_DECL tmat3x2<T, P> & operator=(tmat3x2<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat3x2
GLM_DEFAULT	.\glm\detail\type_mat3x3.hpp	/^		GLM_FUNC_DECL tmat3x3(tmat3x3<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat3x3
GLM_DEFAULT	.\glm\detail\type_mat3x3.hpp	/^		GLM_FUNC_DECL tmat3x3<T, P> & operator=(tmat3x3<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat3x3
GLM_DEFAULT	.\glm\detail\type_mat3x4.hpp	/^		GLM_FUNC_DECL tmat3x4(tmat3x4<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat3x4
GLM_DEFAULT	.\glm\detail\type_mat3x4.hpp	/^		GLM_FUNC_DECL tmat3x4<T, P> & operator=(tmat3x4<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat3x4
GLM_DEFAULT	.\glm\detail\type_mat4x2.hpp	/^		GLM_FUNC_DECL tmat4x2(tmat4x2<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat4x2
GLM_DEFAULT	.\glm\detail\type_mat4x2.hpp	/^		GLM_FUNC_DECL tmat4x2<T, P> & operator=(tmat4x2<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat4x2
GLM_DEFAULT	.\glm\detail\type_mat4x3.hpp	/^		GLM_FUNC_DECL tmat4x3(tmat4x3<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat4x3
GLM_DEFAULT	.\glm\detail\type_mat4x3.hpp	/^		GLM_FUNC_DECL tmat4x3<T, P> & operator=(tmat4x3<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat4x3
GLM_DEFAULT	.\glm\detail\type_mat4x4.hpp	/^		GLM_FUNC_DECL tmat4x4(tmat4x4<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat4x4
GLM_DEFAULT	.\glm\detail\type_mat4x4.hpp	/^		GLM_FUNC_DECL tmat4x4<T, P> & operator=(tmat4x4<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tmat4x4
GLM_DEFAULT	.\glm\detail\type_vec1.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR_CTOR tvec1(tvec1<T, P> const & v) GLM_DEFAULT;$/;"	m	struct:glm::tvec1
GLM_DEFAULT	.\glm\detail\type_vec1.hpp	/^		GLM_FUNC_DECL tvec1<T, P> & operator=(tvec1<T, P> const & v) GLM_DEFAULT;$/;"	m	struct:glm::tvec1
GLM_DEFAULT	.\glm\detail\type_vec2.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR_CTOR tvec2(tvec2<T, P> const& v) GLM_DEFAULT;$/;"	m	struct:glm::tvec2
GLM_DEFAULT	.\glm\detail\type_vec2.hpp	/^		GLM_FUNC_DECL tvec2<T, P>& operator=(tvec2<T, P> const & v) GLM_DEFAULT;$/;"	m	struct:glm::tvec2
GLM_DEFAULT	.\glm\detail\type_vec3.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR_CTOR tvec3(tvec3<T, P> const & v) GLM_DEFAULT;$/;"	m	struct:glm::tvec3
GLM_DEFAULT	.\glm\detail\type_vec3.hpp	/^		GLM_FUNC_DECL tvec3<T, P> & operator=(tvec3<T, P> const & v) GLM_DEFAULT;$/;"	m	struct:glm::tvec3
GLM_DEFAULT	.\glm\detail\type_vec4.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR_SIMD tvec4(tvec4<T, P> const& v) GLM_DEFAULT;$/;"	m	struct:glm::tvec4
GLM_DEFAULT	.\glm\detail\type_vec4.hpp	/^		GLM_FUNC_DECL tvec4<T, P> & operator=(tvec4<T, P> const & v) GLM_DEFAULT;$/;"	m	struct:glm::tvec4
GLM_DEFAULT	.\glm\gtc\quaternion.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR tquat(tquat<T, P> const & q) GLM_DEFAULT;$/;"	m	struct:glm::tquat
GLM_DEFAULT	.\glm\gtc\quaternion.hpp	/^		GLM_FUNC_DECL tquat<T, P> & operator=(tquat<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tquat
GLM_DEFAULT	.\glm\gtx\dual_quaternion.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR tdualquat(tdualquat<T, P> const & d) GLM_DEFAULT;$/;"	m	struct:glm::tdualquat
GLM_DEFAULT	.\glm\gtx\dual_quaternion.hpp	/^		GLM_FUNC_DECL tdualquat<T, P> & operator=(tdualquat<T, P> const & m) GLM_DEFAULT;$/;"	m	struct:glm::tdualquat
GLM_DEFAULT_CTOR	.\glm\detail\setup.hpp	732;"	d
GLM_DEFAULT_CTOR	.\glm\detail\setup.hpp	734;"	d
GLM_DEFAULT_CTOR	.\glm\detail\setup.hpp	738;"	d
GLM_DEFAULT_CTOR	.\glm\detail\type_mat2x2.hpp	/^		GLM_FUNC_DECL tmat2x2() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tmat2x2
GLM_DEFAULT_CTOR	.\glm\detail\type_mat2x3.hpp	/^		GLM_FUNC_DECL tmat2x3() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tmat2x3
GLM_DEFAULT_CTOR	.\glm\detail\type_mat2x4.hpp	/^		GLM_FUNC_DECL tmat2x4() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tmat2x4
GLM_DEFAULT_CTOR	.\glm\detail\type_mat3x2.hpp	/^		GLM_FUNC_DECL tmat3x2() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tmat3x2
GLM_DEFAULT_CTOR	.\glm\detail\type_mat3x3.hpp	/^		GLM_FUNC_DECL tmat3x3() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tmat3x3
GLM_DEFAULT_CTOR	.\glm\detail\type_mat3x4.hpp	/^		GLM_FUNC_DECL tmat3x4() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tmat3x4
GLM_DEFAULT_CTOR	.\glm\detail\type_mat4x2.hpp	/^		GLM_FUNC_DECL tmat4x2() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tmat4x2
GLM_DEFAULT_CTOR	.\glm\detail\type_mat4x3.hpp	/^		GLM_FUNC_DECL tmat4x3() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tmat4x3
GLM_DEFAULT_CTOR	.\glm\detail\type_mat4x4.hpp	/^		GLM_FUNC_DECL tmat4x4() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tmat4x4
GLM_DEFAULT_CTOR	.\glm\detail\type_vec1.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR_CTOR tvec1() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tvec1
GLM_DEFAULT_CTOR	.\glm\detail\type_vec2.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR_CTOR tvec2() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tvec2
GLM_DEFAULT_CTOR	.\glm\detail\type_vec3.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR_CTOR tvec3() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tvec3
GLM_DEFAULT_CTOR	.\glm\detail\type_vec4.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR_SIMD tvec4() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tvec4
GLM_DEFAULT_CTOR	.\glm\gtc\quaternion.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR tquat() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tquat
GLM_DEFAULT_CTOR	.\glm\gtx\dual_quaternion.hpp	/^		GLM_FUNC_DECL GLM_CONSTEXPR tdualquat() GLM_DEFAULT_CTOR;$/;"	m	struct:glm::tdualquat
GLM_DEPRECATED	.\glm\detail\setup.hpp	684;"	d
GLM_DEPRECATED	.\glm\detail\setup.hpp	696;"	d
GLM_DEPRECATED	.\glm\detail\setup.hpp	712;"	d
GLM_DEPRECATED	.\glm\detail\setup.hpp	720;"	d
GLM_DEPTH_CLIP_SPACE	.\glm\detail\setup.hpp	640;"	d
GLM_DEPTH_CLIP_SPACE	.\glm\detail\setup.hpp	642;"	d
GLM_DEPTH_NEGATIVE_ONE_TO_ONE	.\glm\detail\setup.hpp	637;"	d
GLM_DEPTH_ZERO_TO_ONE	.\glm\detail\setup.hpp	636;"	d
GLM_EXPLICIT	.\glm\detail\setup.hpp	766;"	d
GLM_EXPLICIT	.\glm\detail\setup.hpp	768;"	d
GLM_FORCE_PURE	.\glm\detail\setup.hpp	260;"	d
GLM_FUNC_DECL	.\glm\detail\setup.hpp	579;"	d
GLM_FUNC_QUALIFIER	.\glm\detail\setup.hpp	580;"	d
GLM_HAS_ALIGNED_TYPE	.\glm\detail\setup.hpp	773;"	d
GLM_HAS_ALIGNOF	.\glm\detail\setup.hpp	443;"	d
GLM_HAS_ALIGNOF	.\glm\detail\setup.hpp	445;"	d
GLM_HAS_ALIGNOF	.\glm\detail\setup.hpp	447;"	d
GLM_HAS_ASSIGNABLE	.\glm\detail\setup.hpp	461;"	d
GLM_HAS_ASSIGNABLE	.\glm\detail\setup.hpp	463;"	d
GLM_HAS_BITSCAN_WINDOWS	.\glm\detail\setup.hpp	481;"	d
GLM_HAS_BITSCAN_WINDOWS	.\glm\detail\setup.hpp	483;"	d
GLM_HAS_CONSTEXPR	.\glm\detail\setup.hpp	339;"	d
GLM_HAS_CONSTEXPR	.\glm\detail\setup.hpp	342;"	d
GLM_HAS_CONSTEXPR	.\glm\detail\setup.hpp	345;"	d
GLM_HAS_CONSTEXPR_PARTIAL	.\glm\detail\setup.hpp	340;"	d
GLM_HAS_CONSTEXPR_PARTIAL	.\glm\detail\setup.hpp	343;"	d
GLM_HAS_CONSTEXPR_PARTIAL	.\glm\detail\setup.hpp	348;"	d
GLM_HAS_CXX11_STL	.\glm\detail\setup.hpp	300;"	d
GLM_HAS_CXX11_STL	.\glm\detail\setup.hpp	303;"	d
GLM_HAS_CXX11_STL	.\glm\detail\setup.hpp	305;"	d
GLM_HAS_CXX11_STL	.\glm\detail\setup.hpp	308;"	d
GLM_HAS_DEFAULTED_FUNCTIONS	.\glm\detail\setup.hpp	377;"	d
GLM_HAS_DEFAULTED_FUNCTIONS	.\glm\detail\setup.hpp	379;"	d
GLM_HAS_DEFAULTED_FUNCTIONS	.\glm\detail\setup.hpp	381;"	d
GLM_HAS_DEFAULTED_FUNCTIONS	.\glm\detail\setup.hpp	383;"	d
GLM_HAS_EXPLICIT_CONVERSION_OPERATORS	.\glm\detail\setup.hpp	404;"	d
GLM_HAS_EXPLICIT_CONVERSION_OPERATORS	.\glm\detail\setup.hpp	406;"	d
GLM_HAS_EXPLICIT_CONVERSION_OPERATORS	.\glm\detail\setup.hpp	408;"	d
GLM_HAS_EXTENDED_INTEGER_TYPE	.\glm\detail\setup.hpp	328;"	d
GLM_HAS_EXTENDED_INTEGER_TYPE	.\glm\detail\setup.hpp	330;"	d
GLM_HAS_INITIALIZER_LISTS	.\glm\detail\setup.hpp	353;"	d
GLM_HAS_INITIALIZER_LISTS	.\glm\detail\setup.hpp	355;"	d
GLM_HAS_INITIALIZER_LISTS	.\glm\detail\setup.hpp	357;"	d
GLM_HAS_MAKE_SIGNED	.\glm\detail\setup.hpp	473;"	d
GLM_HAS_MAKE_SIGNED	.\glm\detail\setup.hpp	475;"	d
GLM_HAS_ONLY_XYZW	.\glm\detail\setup.hpp	454;"	d
GLM_HAS_OPENMP	.\glm\detail\setup.hpp	492;"	d
GLM_HAS_OPENMP	.\glm\detail\setup.hpp	494;"	d
GLM_HAS_OPENMP	.\glm\detail\setup.hpp	496;"	d
GLM_HAS_OPENMP	.\glm\detail\setup.hpp	498;"	d
GLM_HAS_OPENMP	.\glm\detail\setup.hpp	500;"	d
GLM_HAS_OPENMP	.\glm\detail\setup.hpp	502;"	d
GLM_HAS_OPENMP	.\glm\detail\setup.hpp	506;"	d
GLM_HAS_OPENMP	.\glm\detail\setup.hpp	508;"	d
GLM_HAS_OPENMP	.\glm\detail\setup.hpp	512;"	d
GLM_HAS_OPENMP	.\glm\detail\setup.hpp	514;"	d
GLM_HAS_OPENMP	.\glm\detail\setup.hpp	518;"	d
GLM_HAS_OPENMP	.\glm\detail\setup.hpp	520;"	d
GLM_HAS_OPENMP	.\glm\detail\setup.hpp	522;"	d
GLM_HAS_OPENMP	.\glm\detail\setup.hpp	525;"	d
GLM_HAS_RANGE_FOR	.\glm\detail\setup.hpp	430;"	d
GLM_HAS_RANGE_FOR	.\glm\detail\setup.hpp	432;"	d
GLM_HAS_RANGE_FOR	.\glm\detail\setup.hpp	434;"	d
GLM_HAS_RVALUE_REFERENCES	.\glm\detail\setup.hpp	392;"	d
GLM_HAS_RVALUE_REFERENCES	.\glm\detail\setup.hpp	394;"	d
GLM_HAS_RVALUE_REFERENCES	.\glm\detail\setup.hpp	396;"	d
GLM_HAS_STATIC_ASSERT	.\glm\detail\setup.hpp	316;"	d
GLM_HAS_STATIC_ASSERT	.\glm\detail\setup.hpp	318;"	d
GLM_HAS_STATIC_ASSERT	.\glm\detail\setup.hpp	320;"	d
GLM_HAS_TEMPLATE_ALIASES	.\glm\detail\setup.hpp	417;"	d
GLM_HAS_TEMPLATE_ALIASES	.\glm\detail\setup.hpp	419;"	d
GLM_HAS_TEMPLATE_ALIASES	.\glm\detail\setup.hpp	421;"	d
GLM_HAS_TRIVIAL_QUERIES	.\glm\detail\setup.hpp	469;"	d
GLM_HAS_UNRESTRICTED_UNIONS	.\glm\detail\setup.hpp	365;"	d
GLM_HAS_UNRESTRICTED_UNIONS	.\glm\detail\setup.hpp	367;"	d
GLM_HAS_UNRESTRICTED_UNIONS	.\glm\detail\setup.hpp	369;"	d
GLM_IMPLEMENT_SCAL_MULT	.\glm\gtx\scalar_multiplication.hpp	35;"	d
GLM_IMPLEMENT_SCAL_MULT	.\glm\gtx\scalar_multiplication.hpp	68;"	d
GLM_INLINE	.\glm\detail\setup.hpp	562;"	d
GLM_INLINE	.\glm\detail\setup.hpp	565;"	d
GLM_INLINE	.\glm\detail\setup.hpp	568;"	d
GLM_INLINE	.\glm\detail\setup.hpp	571;"	d
GLM_INLINE	.\glm\detail\setup.hpp	575;"	d
GLM_LANG	.\glm\detail\setup.hpp	152;"	d
GLM_LANG	.\glm\detail\setup.hpp	162;"	d
GLM_LANG	.\glm\detail\setup.hpp	165;"	d
GLM_LANG	.\glm\detail\setup.hpp	167;"	d
GLM_LANG	.\glm\detail\setup.hpp	171;"	d
GLM_LANG	.\glm\detail\setup.hpp	173;"	d
GLM_LANG	.\glm\detail\setup.hpp	175;"	d
GLM_LANG	.\glm\detail\setup.hpp	177;"	d
GLM_LANG	.\glm\detail\setup.hpp	179;"	d
GLM_LANG	.\glm\detail\setup.hpp	181;"	d
GLM_LANG	.\glm\detail\setup.hpp	185;"	d
GLM_LANG	.\glm\detail\setup.hpp	187;"	d
GLM_LANG	.\glm\detail\setup.hpp	189;"	d
GLM_LANG	.\glm\detail\setup.hpp	191;"	d
GLM_LANG	.\glm\detail\setup.hpp	196;"	d
GLM_LANG	.\glm\detail\setup.hpp	200;"	d
GLM_LANG	.\glm\detail\setup.hpp	202;"	d
GLM_LANG	.\glm\detail\setup.hpp	204;"	d
GLM_LANG	.\glm\detail\setup.hpp	206;"	d
GLM_LANG	.\glm\detail\setup.hpp	210;"	d
GLM_LANG	.\glm\detail\setup.hpp	212;"	d
GLM_LANG	.\glm\detail\setup.hpp	214;"	d
GLM_LANG	.\glm\detail\setup.hpp	216;"	d
GLM_LANG	.\glm\detail\setup.hpp	218;"	d
GLM_LANG	.\glm\detail\setup.hpp	228;"	d
GLM_LANG	.\glm\detail\setup.hpp	230;"	d
GLM_LANG	.\glm\detail\setup.hpp	232;"	d
GLM_LANG	.\glm\detail\setup.hpp	234;"	d
GLM_LANG	.\glm\detail\setup.hpp	236;"	d
GLM_LANG	.\glm\detail\setup.hpp	245;"	d
GLM_LANG	.\glm\detail\setup.hpp	247;"	d
GLM_LANG	.\glm\detail\setup.hpp	251;"	d
GLM_LANG	.\glm\detail\setup.hpp	253;"	d
GLM_LANG	.\glm\detail\setup.hpp	255;"	d
GLM_LANG	.\glm\detail\setup.hpp	257;"	d
GLM_LANG_CXX03	.\glm\detail\setup.hpp	135;"	d
GLM_LANG_CXX03_FLAG	.\glm\detail\setup.hpp	125;"	d
GLM_LANG_CXX0X	.\glm\detail\setup.hpp	136;"	d
GLM_LANG_CXX0X_FLAG	.\glm\detail\setup.hpp	126;"	d
GLM_LANG_CXX11	.\glm\detail\setup.hpp	137;"	d
GLM_LANG_CXX11_FLAG	.\glm\detail\setup.hpp	127;"	d
GLM_LANG_CXX14	.\glm\detail\setup.hpp	139;"	d
GLM_LANG_CXX14_FLAG	.\glm\detail\setup.hpp	129;"	d
GLM_LANG_CXX1Y	.\glm\detail\setup.hpp	138;"	d
GLM_LANG_CXX1Y_FLAG	.\glm\detail\setup.hpp	128;"	d
GLM_LANG_CXX1Z	.\glm\detail\setup.hpp	140;"	d
GLM_LANG_CXX1Z_FLAG	.\glm\detail\setup.hpp	130;"	d
GLM_LANG_CXX98	.\glm\detail\setup.hpp	134;"	d
GLM_LANG_CXX98_FLAG	.\glm\detail\setup.hpp	124;"	d
GLM_LANG_CXXGNU	.\glm\detail\setup.hpp	142;"	d
GLM_LANG_CXXGNU_FLAG	.\glm\detail\setup.hpp	132;"	d
GLM_LANG_CXXMS	.\glm\detail\setup.hpp	141;"	d
GLM_LANG_CXXMS_FLAG	.\glm\detail\setup.hpp	131;"	d
GLM_LANG_STL11_FORCED	.\glm\detail\setup.hpp	153;"	d
GLM_LANG_STL11_FORCED	.\glm\detail\setup.hpp	163;"	d
GLM_LEFT_HANDED	.\glm\detail\setup.hpp	662;"	d
GLM_MESSAGES	.\glm\detail\setup.hpp	21;"	d
GLM_MESSAGES	.\glm\detail\setup.hpp	22;"	d
GLM_MESSAGES	.\glm\detail\setup.hpp	24;"	d
GLM_MESSAGES	.\glm\detail\setup.hpp	25;"	d
GLM_MESSAGES_DISABLE	.\glm\detail\setup.hpp	18;"	d
GLM_MESSAGES_ENABLED	.\glm\detail\setup.hpp	17;"	d
GLM_MESSAGE_ARCH_DISPLAYED	.\glm\detail\setup.hpp	89;"	d
GLM_MESSAGE_COMPILER_DISPLAYED	.\glm\detail\setup.hpp	48;"	d
GLM_MESSAGE_CORE_INCLUDED_DISPLAYED	.\glm\glm.hpp	64;"	d
GLM_MESSAGE_DEPTH_DISPLAYED	.\glm\detail\setup.hpp	646;"	d
GLM_MESSAGE_EXT_INCLUDED_DISPLAYED	.\glm\ext.hpp	33;"	d
GLM_MESSAGE_FORCE_SIZE_T_LENGTH	.\glm\detail\setup.hpp	791;"	d
GLM_MESSAGE_HANDED_DISPLAYED	.\glm\detail\setup.hpp	672;"	d
GLM_MESSAGE_LANG_DISPLAYED	.\glm\detail\setup.hpp	266;"	d
GLM_MESSAGE_MODEL_DISPLAYED	.\glm\detail\setup.hpp	80;"	d
GLM_MESSAGE_PLATFORM_DISPLAYED	.\glm\simd\platform.h	47;"	d
GLM_MESSAGE_SWIZZLE_DISPLAYED	.\glm\detail\setup.hpp	603;"	d
GLM_MESSAGE_UNRESTRICTED_GENTYPE_DISPLAYED	.\glm\detail\setup.hpp	623;"	d
GLM_MESSAGE_VERSION_DISPLAYED	.\glm\detail\setup.hpp	42;"	d
GLM_MODEL	.\glm\detail\setup.hpp	68;"	d
GLM_MODEL	.\glm\detail\setup.hpp	70;"	d
GLM_MODEL	.\glm\detail\setup.hpp	72;"	d
GLM_MODEL_32	.\glm\simd\platform.h	143;"	d
GLM_MODEL_64	.\glm\simd\platform.h	144;"	d
GLM_MSC_EXT	.\glm\detail\setup.hpp	223;"	d
GLM_MSC_EXT	.\glm\detail\setup.hpp	225;"	d
GLM_MSC_EXT	.\glm\detail\setup.hpp	240;"	d
GLM_MSC_EXT	.\glm\detail\setup.hpp	242;"	d
GLM_MUTABLE	.\glm\detail\_swizzle_func.hpp	45;"	d
GLM_NEVER_INLINE	.\glm\detail\setup.hpp	563;"	d
GLM_NEVER_INLINE	.\glm\detail\setup.hpp	566;"	d
GLM_NEVER_INLINE	.\glm\detail\setup.hpp	569;"	d
GLM_NEVER_INLINE	.\glm\detail\setup.hpp	572;"	d
GLM_NEVER_INLINE	.\glm\detail\setup.hpp	576;"	d
GLM_PLATFORM	.\glm\simd\platform.h	22;"	d
GLM_PLATFORM	.\glm\simd\platform.h	24;"	d
GLM_PLATFORM	.\glm\simd\platform.h	26;"	d
GLM_PLATFORM	.\glm\simd\platform.h	28;"	d
GLM_PLATFORM	.\glm\simd\platform.h	30;"	d
GLM_PLATFORM	.\glm\simd\platform.h	32;"	d
GLM_PLATFORM	.\glm\simd\platform.h	34;"	d
GLM_PLATFORM	.\glm\simd\platform.h	36;"	d
GLM_PLATFORM	.\glm\simd\platform.h	38;"	d
GLM_PLATFORM	.\glm\simd\platform.h	40;"	d
GLM_PLATFORM	.\glm\simd\platform.h	42;"	d
GLM_PLATFORM_ANDROID	.\glm\simd\platform.h	14;"	d
GLM_PLATFORM_APPLE	.\glm\simd\platform.h	12;"	d
GLM_PLATFORM_CHROME_NACL	.\glm\simd\platform.h	15;"	d
GLM_PLATFORM_CYGWIN	.\glm\simd\platform.h	19;"	d
GLM_PLATFORM_LINUX	.\glm\simd\platform.h	11;"	d
GLM_PLATFORM_QNXNTO	.\glm\simd\platform.h	17;"	d
GLM_PLATFORM_UNIX	.\glm\simd\platform.h	16;"	d
GLM_PLATFORM_UNKNOWN	.\glm\simd\platform.h	9;"	d
GLM_PLATFORM_WINCE	.\glm\simd\platform.h	18;"	d
GLM_PLATFORM_WINDOWS	.\glm\simd\platform.h	10;"	d
GLM_RELAXED_CONSTEXPR	.\glm\detail\setup.hpp	754;"	d
GLM_RELAXED_CONSTEXPR	.\glm\detail\setup.hpp	756;"	d
GLM_RESTRICT	.\glm\detail\setup.hpp	689;"	d
GLM_RESTRICT	.\glm\detail\setup.hpp	701;"	d
GLM_RESTRICT	.\glm\detail\setup.hpp	717;"	d
GLM_RESTRICT	.\glm\detail\setup.hpp	725;"	d
GLM_RESTRICT_FUNC	.\glm\detail\setup.hpp	688;"	d
GLM_RESTRICT_FUNC	.\glm\detail\setup.hpp	700;"	d
GLM_RESTRICT_FUNC	.\glm\detail\setup.hpp	716;"	d
GLM_RESTRICT_FUNC	.\glm\detail\setup.hpp	724;"	d
GLM_RIGHT_HANDED	.\glm\detail\setup.hpp	663;"	d
GLM_STATIC_ASSERT	.\glm\detail\setup.hpp	533;"	d
GLM_STATIC_ASSERT	.\glm\detail\setup.hpp	535;"	d
GLM_STATIC_ASSERT	.\glm\detail\setup.hpp	537;"	d
GLM_STATIC_ASSERT	.\glm\detail\setup.hpp	539;"	d
GLM_STATIC_ASSERT_NULL	.\glm\detail\setup.hpp	540;"	d
GLM_SWIZZLE	.\glm\detail\setup.hpp	595;"	d
GLM_SWIZZLE	.\glm\detail\setup.hpp	596;"	d
GLM_SWIZZLE	.\glm\detail\setup.hpp	598;"	d
GLM_SWIZZLE	.\glm\detail\setup.hpp	599;"	d
GLM_SWIZZLE_DISABLE	.\glm\detail\setup.hpp	592;"	d
GLM_SWIZZLE_ENABLED	.\glm\detail\setup.hpp	591;"	d
GLM_SWIZZLE_GEN_REF2_FROM_VEC2_SWIZZLE	.\glm\detail\_swizzle_func.hpp	47;"	d
GLM_SWIZZLE_GEN_REF2_FROM_VEC3_SWIZZLE	.\glm\detail\_swizzle_func.hpp	58;"	d
GLM_SWIZZLE_GEN_REF2_FROM_VEC4_SWIZZLE	.\glm\detail\_swizzle_func.hpp	85;"	d
GLM_SWIZZLE_GEN_REF3_FROM_VEC3_SWIZZLE	.\glm\detail\_swizzle_func.hpp	66;"	d
GLM_SWIZZLE_GEN_REF3_FROM_VEC4_SWIZZLE	.\glm\detail\_swizzle_func.hpp	99;"	d
GLM_SWIZZLE_GEN_REF4_FROM_VEC4_SWIZZLE	.\glm\detail\_swizzle_func.hpp	125;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC2	.\glm\detail\_swizzle_func.hpp	51;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC3	.\glm\detail\_swizzle_func.hpp	78;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC3_COMP	.\glm\detail\_swizzle_func.hpp	74;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC4	.\glm\detail\_swizzle_func.hpp	156;"	d
GLM_SWIZZLE_GEN_REF_FROM_VEC4_COMP	.\glm\detail\_swizzle_func.hpp	151;"	d
GLM_SWIZZLE_GEN_VEC2_ENTRY	.\glm\detail\_swizzle_func.hpp	6;"	d
GLM_SWIZZLE_GEN_VEC2_ENTRY_DEF	.\glm\detail\_swizzle_func.hpp	24;"	d
GLM_SWIZZLE_GEN_VEC2_FROM_VEC2_SWIZZLE	.\glm\detail\_swizzle_func.hpp	163;"	d
GLM_SWIZZLE_GEN_VEC2_FROM_VEC3_SWIZZLE	.\glm\detail\_swizzle_func.hpp	209;"	d
GLM_SWIZZLE_GEN_VEC2_FROM_VEC4_SWIZZLE	.\glm\detail\_swizzle_func.hpp	344;"	d
GLM_SWIZZLE_GEN_VEC3_ENTRY	.\glm\detail\_swizzle_func.hpp	12;"	d
GLM_SWIZZLE_GEN_VEC3_ENTRY_DEF	.\glm\detail\_swizzle_func.hpp	31;"	d
GLM_SWIZZLE_GEN_VEC3_FROM_VEC2_SWIZZLE	.\glm\detail\_swizzle_func.hpp	169;"	d
GLM_SWIZZLE_GEN_VEC3_FROM_VEC3_SWIZZLE	.\glm\detail\_swizzle_func.hpp	220;"	d
GLM_SWIZZLE_GEN_VEC3_FROM_VEC4_SWIZZLE	.\glm\detail\_swizzle_func.hpp	362;"	d
GLM_SWIZZLE_GEN_VEC4_ENTRY	.\glm\detail\_swizzle_func.hpp	18;"	d
GLM_SWIZZLE_GEN_VEC4_ENTRY_DEF	.\glm\detail\_swizzle_func.hpp	38;"	d
GLM_SWIZZLE_GEN_VEC4_FROM_VEC2_SWIZZLE	.\glm\detail\_swizzle_func.hpp	179;"	d
GLM_SWIZZLE_GEN_VEC4_FROM_VEC3_SWIZZLE	.\glm\detail\_swizzle_func.hpp	249;"	d
GLM_SWIZZLE_GEN_VEC4_FROM_VEC4_SWIZZLE	.\glm\detail\_swizzle_func.hpp	428;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC2	.\glm\detail\_swizzle_func.hpp	202;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC2_COMP	.\glm\detail\_swizzle_func.hpp	197;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC3	.\glm\detail\_swizzle_func.hpp	337;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC3_COMP	.\glm\detail\_swizzle_func.hpp	332;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC4	.\glm\detail\_swizzle_func.hpp	691;"	d
GLM_SWIZZLE_GEN_VEC_FROM_VEC4_COMP	.\glm\detail\_swizzle_func.hpp	686;"	d
GLM_UNRESTRICTED_GENTYPE	.\glm\detail\setup.hpp	617;"	d
GLM_UNRESTRICTED_GENTYPE	.\glm\detail\setup.hpp	619;"	d
GLM_VAR_USED	.\glm\detail\setup.hpp	555;"	d
GLM_VAR_USED	.\glm\detail\setup.hpp	557;"	d
GLM_VECTOR_CALL	.\glm\detail\setup.hpp	691;"	d
GLM_VECTOR_CALL	.\glm\detail\setup.hpp	693;"	d
GLM_VECTOR_CALL	.\glm\detail\setup.hpp	704;"	d
GLM_VECTOR_CALL	.\glm\detail\setup.hpp	706;"	d
GLM_VECTOR_CALL	.\glm\detail\setup.hpp	709;"	d
GLM_VECTOR_CALL	.\glm\detail\setup.hpp	718;"	d
GLM_VECTOR_CALL	.\glm\detail\setup.hpp	726;"	d
GLM_VERSION	.\glm\detail\setup.hpp	35;"	d
GLM_VERSION_MAJOR	.\glm\detail\setup.hpp	36;"	d
GLM_VERSION_MINOR	.\glm\detail\setup.hpp	37;"	d
GLM_VERSION_PATCH	.\glm\detail\setup.hpp	38;"	d
GLM_VERSION_REVISION	.\glm\detail\setup.hpp	39;"	d
GRAPHICENGINE_H	.\src\GraphicEngine.h	2;"	d
GRAPHICSDEVICE_H	.\src\GraphicsDevice.h	2;"	d
Game	.\backup\previous\Game.cpp	/^Game::Game(const char* windowTitle, unsigned int windowWidth, unsigned int windowHeight, unsigned int glMajorVersion, unsigned int glMinorVersion, bool fullscreen, bool vsync)$/;"	f	class:Game
Game	.\src\Game.cpp	/^Game::Game(const char* windowTitle, unsigned int windowWidth, unsigned int windowHeight, unsigned int glMajorVersion, unsigned int glMinorVersion, bool fullscreen, bool vsync)$/;"	f	class:Game
Game	.\src\Game.h	/^class Game$/;"	c
GameObject	.\src\GameObject.h	/^class GameObject$/;"	c
GameState	.\GameState.h	/^class GameState$/;"	c
GetChar	.\tinyxml\tinyxml.h	/^	inline static const char* GetChar( const char* p, char* _value, int* length, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase
GetDocument	.\tinyxml\tinyxml.cpp	/^const TiXmlDocument* TiXmlNode::GetDocument() const$/;"	f	class:TiXmlNode
GetDocument	.\tinyxml\tinyxml.h	/^	TiXmlDocument* GetDocument() {$/;"	f	class:TiXmlNode
GetEntity	.\tinyxml\tinyxmlparser.cpp	/^const char* TiXmlBase::GetEntity( const char* p, char* value, int* length, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase
GetText	.\tinyxml\tinyxml.cpp	/^const char* TiXmlElement::GetText() const$/;"	f	class:TiXmlElement
GetUserData	.\tinyxml\tinyxml.h	/^	const void* GetUserData() const 		{ return userData; }	\/\/\/< Get a pointer to arbitrary user data.$/;"	f	class:TiXmlBase
GetUserData	.\tinyxml\tinyxml.h	/^	void* GetUserData()						{ return userData; }	\/\/\/< Get a pointer to arbitrary user data.$/;"	f	class:TiXmlBase
GraphicEngine	.\src\GraphicEngine.cpp	/^GraphicEngine::GraphicEngine()$/;"	f	class:GraphicEngine
GraphicEngine	.\src\GraphicEngine.h	/^class GraphicEngine$/;"	c
GraphicsDevice	.\src\GraphicsDevice.cpp	/^GraphicsDevice::GraphicsDevice(const char* title, int windowWidth, int windowHeight, int glMajorVersion, int glMinorVersion, bool fullscreen, bool vsync)$/;"	f	class:GraphicsDevice
GraphicsDevice	.\src\GraphicsDevice.h	/^class GraphicsDevice$/;"	c
HERO_H	.\src\Player.h	2;"	d
Player	.\src\Player.cpp	/^Player::Player(const char* textureFilePath, int width, int height, Shader* shader,  float framesw, float framesh) : _width(width), _height(height)$/;"	f	class:Player
Player	.\src\Player.h	/^class Player : public GameObject$/;"	c
INPUTHANDLER_H	.\src\InputHandler.h	2;"	d
Identify	.\tinyxml\tinyxmlparser.cpp	/^TiXmlNode* TiXmlNode::Identify( const char* p, TiXmlEncoding encoding )$/;"	f	class:TiXmlNode
Indent	.\tinyxml\tinyxml.h	/^	const char* Indent()							{ return indent.c_str(); }$/;"	f	class:TiXmlPrinter
InputHandler	.\src\InputHandler.cpp	/^InputHandler::InputHandler()$/;"	f	class:InputHandler
InputHandler	.\src\InputHandler.h	/^class InputHandler$/;"	c
InsertAfterChild	.\tinyxml\tinyxml.cpp	/^TiXmlNode* TiXmlNode::InsertAfterChild( TiXmlNode* afterThis, const TiXmlNode& addThis )$/;"	f	class:TiXmlNode
InsertBeforeChild	.\tinyxml\tinyxml.cpp	/^TiXmlNode* TiXmlNode::InsertBeforeChild( TiXmlNode* beforeThis, const TiXmlNode& addThis )$/;"	f	class:TiXmlNode
InsertEndChild	.\tinyxml\tinyxml.cpp	/^TiXmlNode* TiXmlNode::InsertEndChild( const TiXmlNode& addThis )$/;"	f	class:TiXmlNode
IntValue	.\tinyxml\tinyxml.cpp	/^int TiXmlAttribute::IntValue() const$/;"	f	class:TiXmlAttribute
IsAlpha	.\tinyxml\tinyxmlparser.cpp	/^\/*static*\/ int TiXmlBase::IsAlpha( unsigned char anyByte, TiXmlEncoding \/*encoding*\/ )$/;"	f	class:TiXmlBase
IsAlphaNum	.\tinyxml\tinyxmlparser.cpp	/^\/*static*\/ int TiXmlBase::IsAlphaNum( unsigned char anyByte, TiXmlEncoding \/*encoding*\/ )$/;"	f	class:TiXmlBase
IsWhiteSpace	.\tinyxml\tinyxml.h	/^	inline static bool IsWhiteSpace( char c )$/;"	f	class:TiXmlBase
IsWhiteSpace	.\tinyxml\tinyxml.h	/^	inline static bool IsWhiteSpace( int c )$/;"	f	class:TiXmlBase
IsWhiteSpaceCondensed	.\tinyxml\tinyxml.h	/^	static bool IsWhiteSpaceCondensed()						{ return condenseWhiteSpace; }$/;"	f	class:TiXmlBase
IterateChildren	.\tinyxml\tinyxml.cpp	/^const TiXmlNode* TiXmlNode::IterateChildren( const TiXmlNode* previous ) const$/;"	f	class:TiXmlNode
IterateChildren	.\tinyxml\tinyxml.cpp	/^const TiXmlNode* TiXmlNode::IterateChildren( const char * val, const TiXmlNode* previous ) const$/;"	f	class:TiXmlNode
IterateChildren	.\tinyxml\tinyxml.h	/^	TiXmlNode* IterateChildren( const TiXmlNode* previous ) {$/;"	f	class:TiXmlNode
IterateChildren	.\tinyxml\tinyxml.h	/^	TiXmlNode* IterateChildren( const char * _value, const TiXmlNode* previous ) {$/;"	f	class:TiXmlNode
IterateChildren	.\tinyxml\tinyxml.h	/^	TiXmlNode* IterateChildren( const std::string& _value, const TiXmlNode* previous ) {	return IterateChildren (_value.c_str (), previous);	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
IterateChildren	.\tinyxml\tinyxml.h	/^	const TiXmlNode* IterateChildren( const std::string& _value, const TiXmlNode* previous ) const	{	return IterateChildren (_value.c_str (), previous);	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
Last	.\tinyxml\tinyxml.h	/^	TiXmlAttribute* Last()					{ return ( sentinel.prev == &sentinel ) ? 0 : sentinel.prev; }$/;"	f	class:TiXmlAttributeSet
Last	.\tinyxml\tinyxml.h	/^	const TiXmlAttribute* Last() const		{ return ( sentinel.prev == &sentinel ) ? 0 : sentinel.prev; }$/;"	f	class:TiXmlAttributeSet
LastAttribute	.\tinyxml\tinyxml.h	/^	TiXmlAttribute* LastAttribute()					{ return attributeSet.Last(); }$/;"	f	class:TiXmlElement
LastAttribute	.\tinyxml\tinyxml.h	/^	const TiXmlAttribute* LastAttribute()	const 	{ return attributeSet.Last(); }		\/\/\/< Access the last attribute in this element.$/;"	f	class:TiXmlElement
LastChild	.\tinyxml\tinyxml.cpp	/^const TiXmlNode* TiXmlNode::LastChild( const char * _value ) const$/;"	f	class:TiXmlNode
LastChild	.\tinyxml\tinyxml.h	/^	TiXmlNode* LastChild( const char * _value ) {$/;"	f	class:TiXmlNode
LastChild	.\tinyxml\tinyxml.h	/^	TiXmlNode* LastChild( const std::string& _value )				{	return LastChild (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
LastChild	.\tinyxml\tinyxml.h	/^	TiXmlNode* LastChild()	{ return lastChild; }$/;"	f	class:TiXmlNode
LastChild	.\tinyxml\tinyxml.h	/^	const TiXmlNode* LastChild( const std::string& _value ) const	{	return LastChild (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
LastChild	.\tinyxml\tinyxml.h	/^	const TiXmlNode* LastChild() const	{ return lastChild; }		\/\/\/ The last child of this node. Will be null if there are no children.$/;"	f	class:TiXmlNode
LineBreak	.\tinyxml\tinyxml.h	/^	const char* LineBreak()							{ return lineBreak.c_str(); }$/;"	f	class:TiXmlPrinter
LinkEndChild	.\tinyxml\tinyxml.cpp	/^TiXmlNode* TiXmlNode::LinkEndChild( TiXmlNode* node )$/;"	f	class:TiXmlNode
LoadFile	.\tinyxml\tinyxml.cpp	/^bool TiXmlDocument::LoadFile( FILE* file, TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument
LoadFile	.\tinyxml\tinyxml.cpp	/^bool TiXmlDocument::LoadFile( TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument
LoadFile	.\tinyxml\tinyxml.cpp	/^bool TiXmlDocument::LoadFile( const char* _filename, TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument
LoadFile	.\tinyxml\tinyxml.h	/^	bool LoadFile( const std::string& filename, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )			\/\/\/< STL std::string version.$/;"	f	class:TiXmlDocument
MAX_ENTITY_LENGTH	.\tinyxml\tinyxml.h	/^		MAX_ENTITY_LENGTH = 6$/;"	e	enum:TiXmlBase::__anon43
NUM_ENTITY	.\tinyxml\tinyxml.h	/^		NUM_ENTITY = 5,$/;"	e	enum:TiXmlBase::__anon43
Name	.\tinyxml\tinyxml.h	/^	const char*		Name()  const		{ return name.c_str(); }		\/\/\/< Return the name of this attribute.$/;"	f	class:TiXmlAttribute
NameTStr	.\tinyxml\tinyxml.h	/^	const TIXML_STRING& NameTStr() const { return name; }$/;"	f	class:TiXmlAttribute
Next	.\tinyxml\tinyxml.cpp	/^const TiXmlAttribute* TiXmlAttribute::Next() const$/;"	f	class:TiXmlAttribute
Next	.\tinyxml\tinyxml.h	/^	TiXmlAttribute* Next() {$/;"	f	class:TiXmlAttribute
NextSibling	.\tinyxml\tinyxml.cpp	/^const TiXmlNode* TiXmlNode::NextSibling( const char * _value ) const $/;"	f	class:TiXmlNode
NextSibling	.\tinyxml\tinyxml.h	/^	TiXmlNode* NextSibling( const char* _next ) {$/;"	f	class:TiXmlNode
NextSibling	.\tinyxml\tinyxml.h	/^	TiXmlNode* NextSibling( const std::string& _value) 					{	return NextSibling (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
NextSibling	.\tinyxml\tinyxml.h	/^	TiXmlNode* NextSibling()							{ return next; }$/;"	f	class:TiXmlNode
NextSibling	.\tinyxml\tinyxml.h	/^	const TiXmlNode* NextSibling( const std::string& _value) const		{	return NextSibling (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
NextSibling	.\tinyxml\tinyxml.h	/^	const TiXmlNode* NextSibling() const				{ return next; }$/;"	f	class:TiXmlNode
NextSiblingElement	.\tinyxml\tinyxml.cpp	/^const TiXmlElement* TiXmlNode::NextSiblingElement( const char * _value ) const$/;"	f	class:TiXmlNode
NextSiblingElement	.\tinyxml\tinyxml.cpp	/^const TiXmlElement* TiXmlNode::NextSiblingElement() const$/;"	f	class:TiXmlNode
NextSiblingElement	.\tinyxml\tinyxml.h	/^	TiXmlElement* NextSiblingElement( const char *_next ) {$/;"	f	class:TiXmlNode
NextSiblingElement	.\tinyxml\tinyxml.h	/^	TiXmlElement* NextSiblingElement( const std::string& _value)				{	return NextSiblingElement (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
NextSiblingElement	.\tinyxml\tinyxml.h	/^	TiXmlElement* NextSiblingElement() {$/;"	f	class:TiXmlNode
NextSiblingElement	.\tinyxml\tinyxml.h	/^	const TiXmlElement* NextSiblingElement( const std::string& _value) const	{	return NextSiblingElement (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
NoChildren	.\tinyxml\tinyxml.h	/^	bool NoChildren() const						{ return !firstChild; }$/;"	f	class:TiXmlNode
Node	.\tinyxml\tinyxml.h	/^	TiXmlNode* Node() const			{ return ToNode(); }$/;"	f	class:TiXmlHandle
NodeType	.\tinyxml\tinyxml.h	/^	enum NodeType$/;"	g	class:TiXmlNode
NullLineEndings	.\tinyxml\xmltest.cpp	/^void NullLineEndings( char* p )$/;"	f
P	.\glm\gtx\simd_vec4.hpp	/^		P = 2,$/;"	e	enum:glm::comp
Parent	.\tinyxml\tinyxml.h	/^	TiXmlNode* Parent()							{ return parent; }$/;"	f	class:TiXmlNode
Parent	.\tinyxml\tinyxml.h	/^	const TiXmlNode* Parent() const				{ return parent; }$/;"	f	class:TiXmlNode
Parse	.\tinyxml\tinyxmlparser.cpp	/^const char* TiXmlAttribute::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlAttribute
Parse	.\tinyxml\tinyxmlparser.cpp	/^const char* TiXmlComment::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlComment
Parse	.\tinyxml\tinyxmlparser.cpp	/^const char* TiXmlDeclaration::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding _encoding )$/;"	f	class:TiXmlDeclaration
Parse	.\tinyxml\tinyxmlparser.cpp	/^const char* TiXmlDocument::Parse( const char* p, TiXmlParsingData* prevData, TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument
Parse	.\tinyxml\tinyxmlparser.cpp	/^const char* TiXmlElement::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlElement
Parse	.\tinyxml\tinyxmlparser.cpp	/^const char* TiXmlText::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlText
Parse	.\tinyxml\tinyxmlparser.cpp	/^const char* TiXmlUnknown::Parse( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlUnknown
Previous	.\tinyxml\tinyxml.cpp	/^const TiXmlAttribute* TiXmlAttribute::Previous() const$/;"	f	class:TiXmlAttribute
Previous	.\tinyxml\tinyxml.h	/^	TiXmlAttribute* Previous() {$/;"	f	class:TiXmlAttribute
PreviousSibling	.\tinyxml\tinyxml.cpp	/^const TiXmlNode* TiXmlNode::PreviousSibling( const char * _value ) const$/;"	f	class:TiXmlNode
PreviousSibling	.\tinyxml\tinyxml.h	/^	TiXmlNode* PreviousSibling( const char *_prev ) {$/;"	f	class:TiXmlNode
PreviousSibling	.\tinyxml\tinyxml.h	/^	TiXmlNode* PreviousSibling( const std::string& _value ) 			{	return PreviousSibling (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
PreviousSibling	.\tinyxml\tinyxml.h	/^	TiXmlNode* PreviousSibling()						{ return prev; }$/;"	f	class:TiXmlNode
PreviousSibling	.\tinyxml\tinyxml.h	/^	const TiXmlNode* PreviousSibling( const std::string& _value ) const	{	return PreviousSibling (_value.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlNode
PreviousSibling	.\tinyxml\tinyxml.h	/^	const TiXmlNode* PreviousSibling() const			{ return prev; }$/;"	f	class:TiXmlNode
Print	.\tinyxml\tinyxml.cpp	/^void TiXmlAttribute::Print( FILE* cfile, int \/*depth*\/, TIXML_STRING* str ) const$/;"	f	class:TiXmlAttribute
Print	.\tinyxml\tinyxml.cpp	/^void TiXmlComment::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlComment
Print	.\tinyxml\tinyxml.cpp	/^void TiXmlDeclaration::Print( FILE* cfile, int \/*depth*\/, TIXML_STRING* str ) const$/;"	f	class:TiXmlDeclaration
Print	.\tinyxml\tinyxml.cpp	/^void TiXmlDocument::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlDocument
Print	.\tinyxml\tinyxml.cpp	/^void TiXmlElement::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlElement
Print	.\tinyxml\tinyxml.cpp	/^void TiXmlText::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlText
Print	.\tinyxml\tinyxml.cpp	/^void TiXmlUnknown::Print( FILE* cfile, int depth ) const$/;"	f	class:TiXmlUnknown
Print	.\tinyxml\tinyxml.h	/^	virtual void Print( FILE* cfile, int depth ) const {$/;"	f	class:TiXmlAttribute
Print	.\tinyxml\tinyxml.h	/^	virtual void Print( FILE* cfile, int depth ) const {$/;"	f	class:TiXmlDeclaration
Print	.\tinyxml\tinyxml.h	/^	void Print() const						{ Print( stdout, 0 ); }$/;"	f	class:TiXmlDocument
Q	.\glm\gtx\simd_vec4.hpp	/^		Q = 3$/;"	e	enum:glm::comp
QueryBoolAttribute	.\tinyxml\tinyxml.cpp	/^int TiXmlElement::QueryBoolAttribute( const char* name, bool* bval ) const$/;"	f	class:TiXmlElement
QueryDoubleAttribute	.\tinyxml\tinyxml.cpp	/^int TiXmlElement::QueryDoubleAttribute( const char* name, double* dval ) const$/;"	f	class:TiXmlElement
QueryDoubleAttribute	.\tinyxml\tinyxml.cpp	/^int TiXmlElement::QueryDoubleAttribute( const std::string& name, double* dval ) const$/;"	f	class:TiXmlElement
QueryDoubleValue	.\tinyxml\tinyxml.cpp	/^int TiXmlAttribute::QueryDoubleValue( double* dval ) const$/;"	f	class:TiXmlAttribute
QueryFloatAttribute	.\tinyxml\tinyxml.h	/^	int QueryFloatAttribute( const char* name, float* _value ) const {$/;"	f	class:TiXmlElement
QueryIntAttribute	.\tinyxml\tinyxml.cpp	/^int TiXmlElement::QueryIntAttribute( const char* name, int* ival ) const$/;"	f	class:TiXmlElement
QueryIntAttribute	.\tinyxml\tinyxml.cpp	/^int TiXmlElement::QueryIntAttribute( const std::string& name, int* ival ) const$/;"	f	class:TiXmlElement
QueryIntValue	.\tinyxml\tinyxml.cpp	/^int TiXmlAttribute::QueryIntValue( int* ival ) const$/;"	f	class:TiXmlAttribute
QueryStringAttribute	.\tinyxml\tinyxml.h	/^	int QueryStringAttribute( const char* name, std::string* _value ) const {$/;"	f	class:TiXmlElement
QueryUnsignedAttribute	.\tinyxml\tinyxml.cpp	/^int TiXmlElement::QueryUnsignedAttribute( const char* name, unsigned* value ) const$/;"	f	class:TiXmlElement
QueryValueAttribute	.\tinyxml\tinyxml.h	/^	int QueryValueAttribute( const std::string& name, std::string* outValue ) const$/;"	f	class:TiXmlElement
QueryValueAttribute	.\tinyxml\tinyxml.h	/^	template< typename T > int QueryValueAttribute( const std::string& name, T* outValue ) const$/;"	f	class:TiXmlElement
R	.\glm\gtx\simd_vec4.hpp	/^		R = 0,$/;"	e	enum:glm::comp
ReadName	.\tinyxml\tinyxmlparser.cpp	/^const char* TiXmlBase::ReadName( const char* p, TIXML_STRING * name, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase
ReadText	.\tinyxml\tinyxmlparser.cpp	/^const char* TiXmlBase::ReadText(	const char* p, $/;"	f	class:TiXmlBase
ReadValue	.\tinyxml\tinyxmlparser.cpp	/^const char* TiXmlElement::ReadValue( const char* p, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlElement
Remove	.\tinyxml\tinyxml.cpp	/^void TiXmlAttributeSet::Remove( TiXmlAttribute* removeMe )$/;"	f	class:TiXmlAttributeSet
RemoveAttribute	.\tinyxml\tinyxml.cpp	/^void TiXmlElement::RemoveAttribute( const char * name )$/;"	f	class:TiXmlElement
RemoveAttribute	.\tinyxml\tinyxml.h	/^	void RemoveAttribute( const std::string& name )	{	RemoveAttribute (name.c_str ());	}	\/\/\/< STL std::string form.$/;"	f	class:TiXmlElement
RemoveChild	.\tinyxml\tinyxml.cpp	/^bool TiXmlNode::RemoveChild( TiXmlNode* removeThis )$/;"	f	class:TiXmlNode
Rep	.\tinyxml\tinystr.h	/^	struct Rep$/;"	s	class:TiXmlString
ReplaceChild	.\tinyxml\tinyxml.cpp	/^TiXmlNode* TiXmlNode::ReplaceChild( TiXmlNode* replaceThis, const TiXmlNode& withThis )$/;"	f	class:TiXmlNode
RootElement	.\tinyxml\tinyxml.h	/^	TiXmlElement* RootElement()					{ return FirstChildElement(); }$/;"	f	class:TiXmlDocument
RootElement	.\tinyxml\tinyxml.h	/^	const TiXmlElement* RootElement() const		{ return FirstChildElement(); }$/;"	f	class:TiXmlDocument
Row	.\tinyxml\tinyxml.h	/^	int Row() const			{ return location.row + 1; }$/;"	f	class:TiXmlBase
S	.\glm\gtx\simd_vec4.hpp	/^		S = 0,$/;"	e	enum:glm::comp
SaveFile	.\tinyxml\tinyxml.cpp	/^bool TiXmlDocument::SaveFile( FILE* fp ) const$/;"	f	class:TiXmlDocument
SaveFile	.\tinyxml\tinyxml.cpp	/^bool TiXmlDocument::SaveFile( const char * filename ) const$/;"	f	class:TiXmlDocument
SaveFile	.\tinyxml\tinyxml.cpp	/^bool TiXmlDocument::SaveFile() const$/;"	f	class:TiXmlDocument
SaveFile	.\tinyxml\tinyxml.h	/^	bool SaveFile( const std::string& filename ) const		\/\/\/< STL std::string version.$/;"	f	class:TiXmlDocument
SetAttribute	.\tinyxml\tinyxml.cpp	/^void TiXmlElement::SetAttribute( const char * cname, const char * cvalue )$/;"	f	class:TiXmlElement
SetAttribute	.\tinyxml\tinyxml.cpp	/^void TiXmlElement::SetAttribute( const char * name, int val )$/;"	f	class:TiXmlElement
SetAttribute	.\tinyxml\tinyxml.cpp	/^void TiXmlElement::SetAttribute( const std::string& _name, const std::string& _value )$/;"	f	class:TiXmlElement
SetAttribute	.\tinyxml\tinyxml.cpp	/^void TiXmlElement::SetAttribute( const std::string& name, int val )$/;"	f	class:TiXmlElement
SetCDATA	.\tinyxml\tinyxml.h	/^	void SetCDATA( bool _cdata )	{ cdata = _cdata; }$/;"	f	class:TiXmlText
SetCondenseWhiteSpace	.\tinyxml\tinyxml.h	/^	static void SetCondenseWhiteSpace( bool condense )		{ condenseWhiteSpace = condense; }$/;"	f	class:TiXmlBase
SetDocument	.\tinyxml\tinyxml.h	/^	void SetDocument( TiXmlDocument* doc )	{ document = doc; }$/;"	f	class:TiXmlAttribute
SetDoubleAttribute	.\tinyxml\tinyxml.cpp	/^void TiXmlElement::SetDoubleAttribute( const char * name, double val )$/;"	f	class:TiXmlElement
SetDoubleAttribute	.\tinyxml\tinyxml.cpp	/^void TiXmlElement::SetDoubleAttribute( const std::string& name, double val )$/;"	f	class:TiXmlElement
SetDoubleValue	.\tinyxml\tinyxml.cpp	/^void TiXmlAttribute::SetDoubleValue( double _value )$/;"	f	class:TiXmlAttribute
SetError	.\tinyxml\tinyxmlparser.cpp	/^void TiXmlDocument::SetError( int err, const char* pError, TiXmlParsingData* data, TiXmlEncoding encoding )$/;"	f	class:TiXmlDocument
SetIndent	.\tinyxml\tinyxml.h	/^	void SetIndent( const char* _indent )			{ indent = _indent ? _indent : "" ; }$/;"	f	class:TiXmlPrinter
SetIntValue	.\tinyxml\tinyxml.cpp	/^void TiXmlAttribute::SetIntValue( int _value )$/;"	f	class:TiXmlAttribute
SetLineBreak	.\tinyxml\tinyxml.h	/^	void SetLineBreak( const char* _lineBreak )		{ lineBreak = _lineBreak ? _lineBreak : ""; }$/;"	f	class:TiXmlPrinter
SetName	.\tinyxml\tinyxml.h	/^	void SetName( const char* _name )	{ name = _name; }				\/\/\/< Set the name of this attribute.$/;"	f	class:TiXmlAttribute
SetName	.\tinyxml\tinyxml.h	/^	void SetName( const std::string& _name )	{ name = _name; }$/;"	f	class:TiXmlAttribute
SetStreamPrinting	.\tinyxml\tinyxml.h	/^	void SetStreamPrinting()						{ indent = "";$/;"	f	class:TiXmlPrinter
SetTabSize	.\tinyxml\tinyxml.h	/^	void SetTabSize( int _tabsize )		{ tabsize = _tabsize; }$/;"	f	class:TiXmlDocument
SetUserData	.\tinyxml\tinyxml.h	/^	void  SetUserData( void* user )			{ userData = user; }	\/\/\/< Set a pointer to arbitrary user data.$/;"	f	class:TiXmlBase
SetValue	.\tinyxml\tinyxml.h	/^	void SetValue( const char* _value )	{ value = _value; }				\/\/\/< Set the value.$/;"	f	class:TiXmlAttribute
SetValue	.\tinyxml\tinyxml.h	/^	void SetValue( const std::string& _value )	{ value = _value; }$/;"	f	class:TiXmlAttribute
SetValue	.\tinyxml\tinyxml.h	/^	void SetValue( const std::string& _value )	{ value = _value; }$/;"	f	class:TiXmlNode
SetValue	.\tinyxml\tinyxml.h	/^	void SetValue(const char * _value) { value = _value;}$/;"	f	class:TiXmlNode
Shader	.\src\Shader.cpp	/^Shader::Shader(const char* vertexShaderPath, const char* fragmentShaderPath)$/;"	f	class:Shader
Shader	.\src\Shader.h	/^class Shader$/;"	c
Size	.\tinyxml\tinyxml.h	/^	size_t Size()									{ return buffer.size(); }$/;"	f	class:TiXmlPrinter
SkipWhiteSpace	.\tinyxml\tinyxmlparser.cpp	/^const char* TiXmlBase::SkipWhiteSpace( const char* p, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase
Stamp	.\tinyxml\tinyxmlparser.cpp	/^void TiXmlParsingData::Stamp( const char* now, TiXmlEncoding encoding )$/;"	f	class:TiXmlParsingData
Standalone	.\tinyxml\tinyxml.h	/^	const char *Standalone() const		{ return standalone.c_str (); }$/;"	f	class:TiXmlDeclaration
Str	.\tinyxml\tinyxml.h	/^	const std::string& Str()						{ return buffer; }$/;"	f	class:TiXmlPrinter
StreamIn	.\tinyxml\tinyxmlparser.cpp	/^void TiXmlComment::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlComment
StreamIn	.\tinyxml\tinyxmlparser.cpp	/^void TiXmlDeclaration::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlDeclaration
StreamIn	.\tinyxml\tinyxmlparser.cpp	/^void TiXmlDocument::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlDocument
StreamIn	.\tinyxml\tinyxmlparser.cpp	/^void TiXmlElement::StreamIn (std::istream * in, TIXML_STRING * tag)$/;"	f	class:TiXmlElement
StreamIn	.\tinyxml\tinyxmlparser.cpp	/^void TiXmlText::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlText
StreamIn	.\tinyxml\tinyxmlparser.cpp	/^void TiXmlUnknown::StreamIn( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlUnknown
StreamTo	.\tinyxml\tinyxmlparser.cpp	/^\/*static*\/ bool TiXmlBase::StreamTo( std::istream * in, int character, TIXML_STRING * tag )$/;"	f	class:TiXmlBase
StreamWhiteSpace	.\tinyxml\tinyxmlparser.cpp	/^\/*static*\/ bool TiXmlBase::StreamWhiteSpace( std::istream * in, TIXML_STRING * tag )$/;"	f	class:TiXmlBase
StringEqual	.\tinyxml\tinyxmlparser.cpp	/^bool TiXmlBase::StringEqual( const char* p,$/;"	f	class:TiXmlBase
Stub	.\glm\detail\_swizzle.hpp	/^		struct Stub {};$/;"	s	struct:glm::detail::_swizzle_base2
T	.\glm\gtx\simd_vec4.hpp	/^		T = 1,$/;"	e	enum:glm::comp
TEXTURE_H	.\src\Texture.h	2;"	d
TINYXML_COMMENT	.\tinyxml\tinyxml.h	/^		TINYXML_COMMENT,$/;"	e	enum:TiXmlNode::NodeType
TINYXML_DECLARATION	.\tinyxml\tinyxml.h	/^		TINYXML_DECLARATION,$/;"	e	enum:TiXmlNode::NodeType
TINYXML_DOCUMENT	.\tinyxml\tinyxml.h	/^		TINYXML_DOCUMENT,$/;"	e	enum:TiXmlNode::NodeType
TINYXML_ELEMENT	.\tinyxml\tinyxml.h	/^		TINYXML_ELEMENT,$/;"	e	enum:TiXmlNode::NodeType
TINYXML_INCLUDED	.\tinyxml\tinyxml.h	27;"	d
TINYXML_TEXT	.\tinyxml\tinyxml.h	/^		TINYXML_TEXT,$/;"	e	enum:TiXmlNode::NodeType
TINYXML_TYPECOUNT	.\tinyxml\tinyxml.h	/^		TINYXML_TYPECOUNT$/;"	e	enum:TiXmlNode::NodeType
TINYXML_UNKNOWN	.\tinyxml\tinyxml.h	/^		TINYXML_UNKNOWN,$/;"	e	enum:TiXmlNode::NodeType
TIXML_DEFAULT_ENCODING	.\tinyxml\tinyxml.h	/^const TiXmlEncoding TIXML_DEFAULT_ENCODING = TIXML_ENCODING_UNKNOWN;$/;"	v
TIXML_ENCODING_LEGACY	.\tinyxml\tinyxml.h	/^	TIXML_ENCODING_LEGACY$/;"	e	enum:TiXmlEncoding
TIXML_ENCODING_UNKNOWN	.\tinyxml\tinyxml.h	/^	TIXML_ENCODING_UNKNOWN,$/;"	e	enum:TiXmlEncoding
TIXML_ENCODING_UTF8	.\tinyxml\tinyxml.h	/^	TIXML_ENCODING_UTF8,$/;"	e	enum:TiXmlEncoding
TIXML_ERROR	.\tinyxml\tinyxml.h	/^		TIXML_ERROR,$/;"	e	enum:TiXmlBase::__anon42
TIXML_ERROR_DOCUMENT_EMPTY	.\tinyxml\tinyxml.h	/^		TIXML_ERROR_DOCUMENT_EMPTY,$/;"	e	enum:TiXmlBase::__anon42
TIXML_ERROR_DOCUMENT_TOP_ONLY	.\tinyxml\tinyxml.h	/^		TIXML_ERROR_DOCUMENT_TOP_ONLY,$/;"	e	enum:TiXmlBase::__anon42
TIXML_ERROR_EMBEDDED_NULL	.\tinyxml\tinyxml.h	/^		TIXML_ERROR_EMBEDDED_NULL,$/;"	e	enum:TiXmlBase::__anon42
TIXML_ERROR_FAILED_TO_READ_ELEMENT_NAME	.\tinyxml\tinyxml.h	/^		TIXML_ERROR_FAILED_TO_READ_ELEMENT_NAME,$/;"	e	enum:TiXmlBase::__anon42
TIXML_ERROR_OPENING_FILE	.\tinyxml\tinyxml.h	/^		TIXML_ERROR_OPENING_FILE,$/;"	e	enum:TiXmlBase::__anon42
TIXML_ERROR_PARSING_CDATA	.\tinyxml\tinyxml.h	/^		TIXML_ERROR_PARSING_CDATA,$/;"	e	enum:TiXmlBase::__anon42
TIXML_ERROR_PARSING_COMMENT	.\tinyxml\tinyxml.h	/^		TIXML_ERROR_PARSING_COMMENT,$/;"	e	enum:TiXmlBase::__anon42
TIXML_ERROR_PARSING_DECLARATION	.\tinyxml\tinyxml.h	/^		TIXML_ERROR_PARSING_DECLARATION,$/;"	e	enum:TiXmlBase::__anon42
TIXML_ERROR_PARSING_ELEMENT	.\tinyxml\tinyxml.h	/^		TIXML_ERROR_PARSING_ELEMENT,$/;"	e	enum:TiXmlBase::__anon42
TIXML_ERROR_PARSING_EMPTY	.\tinyxml\tinyxml.h	/^		TIXML_ERROR_PARSING_EMPTY,$/;"	e	enum:TiXmlBase::__anon42
TIXML_ERROR_PARSING_UNKNOWN	.\tinyxml\tinyxml.h	/^		TIXML_ERROR_PARSING_UNKNOWN,$/;"	e	enum:TiXmlBase::__anon42
TIXML_ERROR_READING_ATTRIBUTES	.\tinyxml\tinyxml.h	/^		TIXML_ERROR_READING_ATTRIBUTES,$/;"	e	enum:TiXmlBase::__anon42
TIXML_ERROR_READING_ELEMENT_VALUE	.\tinyxml\tinyxml.h	/^		TIXML_ERROR_READING_ELEMENT_VALUE,$/;"	e	enum:TiXmlBase::__anon42
TIXML_ERROR_READING_END_TAG	.\tinyxml\tinyxml.h	/^		TIXML_ERROR_READING_END_TAG,$/;"	e	enum:TiXmlBase::__anon42
TIXML_ERROR_STRING_COUNT	.\tinyxml\tinyxml.h	/^		TIXML_ERROR_STRING_COUNT$/;"	e	enum:TiXmlBase::__anon42
TIXML_EXPLICIT	.\tinyxml\tinystr.h	39;"	d
TIXML_EXPLICIT	.\tinyxml\tinystr.h	42;"	d
TIXML_EXPLICIT	.\tinyxml\tinystr.h	44;"	d
TIXML_LOG	.\tinyxml\tinyxmlparser.cpp	34;"	d	file:
TIXML_LOG	.\tinyxml\tinyxmlparser.cpp	36;"	d	file:
TIXML_MAJOR_VERSION	.\tinyxml\tinyxml.h	/^const int TIXML_MAJOR_VERSION = 2;$/;"	v
TIXML_MINOR_VERSION	.\tinyxml\tinyxml.h	/^const int TIXML_MINOR_VERSION = 6;$/;"	v
TIXML_NO_ATTRIBUTE	.\tinyxml\tinyxml.h	/^	TIXML_NO_ATTRIBUTE,$/;"	e	enum:__anon41
TIXML_NO_ERROR	.\tinyxml\tinyxml.h	/^		TIXML_NO_ERROR = 0,$/;"	e	enum:TiXmlBase::__anon42
TIXML_PATCH_VERSION	.\tinyxml\tinyxml.h	/^const int TIXML_PATCH_VERSION = 2;$/;"	v
TIXML_SAFE	.\tinyxml\tinyxml.h	62;"	d
TIXML_SNPRINTF	.\tinyxml\tinyxml.h	67;"	d
TIXML_SNPRINTF	.\tinyxml\tinyxml.h	72;"	d
TIXML_SNPRINTF	.\tinyxml\tinyxml.h	77;"	d
TIXML_SNPRINTF	.\tinyxml\tinyxml.h	80;"	d
TIXML_SSCANF	.\tinyxml\tinyxml.h	68;"	d
TIXML_SSCANF	.\tinyxml\tinyxml.h	73;"	d
TIXML_SSCANF	.\tinyxml\tinyxml.h	78;"	d
TIXML_SSCANF	.\tinyxml\tinyxml.h	81;"	d
TIXML_STRING	.\tinyxml\tinyxml.h	52;"	d
TIXML_STRING	.\tinyxml\tinyxml.h	55;"	d
TIXML_STRING_INCLUDED	.\tinyxml\tinystr.h	28;"	d
TIXML_SUCCESS	.\tinyxml\tinyxml.h	/^	TIXML_SUCCESS,$/;"	e	enum:__anon41
TIXML_USE_STL	.\tinyxml\tinyxml.h	29;"	d
TIXML_UTF_LEAD_0	.\tinyxml\tinyxmlparser.cpp	/^const unsigned char TIXML_UTF_LEAD_0 = 0xefU;$/;"	v
TIXML_UTF_LEAD_1	.\tinyxml\tinyxmlparser.cpp	/^const unsigned char TIXML_UTF_LEAD_1 = 0xbbU;$/;"	v
TIXML_UTF_LEAD_2	.\tinyxml\tinyxmlparser.cpp	/^const unsigned char TIXML_UTF_LEAD_2 = 0xbfU;$/;"	v
TIXML_WRONG_TYPE	.\tinyxml\tinyxml.h	/^	TIXML_WRONG_TYPE$/;"	e	enum:__anon41
TabSize	.\tinyxml\tinyxml.h	/^	int TabSize() const	{ return tabsize; }$/;"	f	class:TiXmlDocument
Text	.\tinyxml\tinyxml.h	/^	TiXmlText* Text() const			{ return ToText(); }$/;"	f	class:TiXmlHandle
Texture	.\src\Texture.cpp	/^Texture::Texture(std::string path, std::string internalFormatName, std::string formatName, bool linearFiltering, bool mirrorRepeat)$/;"	f	class:Texture
Texture	.\src\Texture.h	/^class Texture$/;"	c
TiXmlAttribute	.\tinyxml\tinyxml.h	/^	TiXmlAttribute( const char * _name, const char * _value )$/;"	f	class:TiXmlAttribute
TiXmlAttribute	.\tinyxml\tinyxml.h	/^	TiXmlAttribute( const std::string& _name, const std::string& _value )$/;"	f	class:TiXmlAttribute
TiXmlAttribute	.\tinyxml\tinyxml.h	/^	TiXmlAttribute() : TiXmlBase()$/;"	f	class:TiXmlAttribute
TiXmlAttribute	.\tinyxml\tinyxml.h	/^class TiXmlAttribute : public TiXmlBase$/;"	c
TiXmlAttributeSet	.\tinyxml\tinyxml.cpp	/^TiXmlAttributeSet::TiXmlAttributeSet()$/;"	f	class:TiXmlAttributeSet
TiXmlAttributeSet	.\tinyxml\tinyxml.h	/^class TiXmlAttributeSet$/;"	c
TiXmlBase	.\tinyxml\tinyxml.h	/^	TiXmlBase()	:	userData(0)		{}$/;"	f	class:TiXmlBase
TiXmlBase	.\tinyxml\tinyxml.h	/^class TiXmlBase$/;"	c
TiXmlComment	.\tinyxml\tinyxml.cpp	/^TiXmlComment::TiXmlComment( const TiXmlComment& copy ) : TiXmlNode( TiXmlNode::TINYXML_COMMENT )$/;"	f	class:TiXmlComment
TiXmlComment	.\tinyxml\tinyxml.h	/^	TiXmlComment( const char* _value ) : TiXmlNode( TiXmlNode::TINYXML_COMMENT ) {$/;"	f	class:TiXmlComment
TiXmlComment	.\tinyxml\tinyxml.h	/^	TiXmlComment() : TiXmlNode( TiXmlNode::TINYXML_COMMENT ) {}$/;"	f	class:TiXmlComment
TiXmlComment	.\tinyxml\tinyxml.h	/^class TiXmlComment : public TiXmlNode$/;"	c
TiXmlCursor	.\tinyxml\tinyxml.h	/^	TiXmlCursor()		{ Clear(); }$/;"	f	struct:TiXmlCursor
TiXmlCursor	.\tinyxml\tinyxml.h	/^struct TiXmlCursor$/;"	s
TiXmlDeclaration	.\tinyxml\tinyxml.cpp	/^TiXmlDeclaration::TiXmlDeclaration(	const std::string& _version,$/;"	f	class:TiXmlDeclaration
TiXmlDeclaration	.\tinyxml\tinyxml.cpp	/^TiXmlDeclaration::TiXmlDeclaration( const TiXmlDeclaration& copy )$/;"	f	class:TiXmlDeclaration
TiXmlDeclaration	.\tinyxml\tinyxml.cpp	/^TiXmlDeclaration::TiXmlDeclaration( const char * _version,$/;"	f	class:TiXmlDeclaration
TiXmlDeclaration	.\tinyxml\tinyxml.h	/^	TiXmlDeclaration()   : TiXmlNode( TiXmlNode::TINYXML_DECLARATION ) {}$/;"	f	class:TiXmlDeclaration
TiXmlDeclaration	.\tinyxml\tinyxml.h	/^class TiXmlDeclaration : public TiXmlNode$/;"	c
TiXmlDocument	.\tinyxml\tinyxml.cpp	/^TiXmlDocument::TiXmlDocument( const TiXmlDocument& copy ) : TiXmlNode( TiXmlNode::TINYXML_DOCUMENT )$/;"	f	class:TiXmlDocument
TiXmlDocument	.\tinyxml\tinyxml.cpp	/^TiXmlDocument::TiXmlDocument( const char * documentName ) : TiXmlNode( TiXmlNode::TINYXML_DOCUMENT )$/;"	f	class:TiXmlDocument
TiXmlDocument	.\tinyxml\tinyxml.cpp	/^TiXmlDocument::TiXmlDocument( const std::string& documentName ) : TiXmlNode( TiXmlNode::TINYXML_DOCUMENT )$/;"	f	class:TiXmlDocument
TiXmlDocument	.\tinyxml\tinyxml.cpp	/^TiXmlDocument::TiXmlDocument() : TiXmlNode( TiXmlNode::TINYXML_DOCUMENT )$/;"	f	class:TiXmlDocument
TiXmlDocument	.\tinyxml\tinyxml.h	/^class TiXmlDocument : public TiXmlNode$/;"	c
TiXmlElement	.\tinyxml\tinyxml.cpp	/^TiXmlElement::TiXmlElement (const char * _value)$/;"	f	class:TiXmlElement
TiXmlElement	.\tinyxml\tinyxml.cpp	/^TiXmlElement::TiXmlElement( const TiXmlElement& copy)$/;"	f	class:TiXmlElement
TiXmlElement	.\tinyxml\tinyxml.cpp	/^TiXmlElement::TiXmlElement( const std::string& _value ) $/;"	f	class:TiXmlElement
TiXmlElement	.\tinyxml\tinyxml.h	/^class TiXmlElement : public TiXmlNode$/;"	c
TiXmlEncoding	.\tinyxml\tinyxml.h	/^enum TiXmlEncoding$/;"	g
TiXmlFOpen	.\tinyxml\tinyxml.cpp	/^FILE* TiXmlFOpen( const char* filename, const char* mode )$/;"	f
TiXmlHandle	.\tinyxml\tinyxml.h	/^	TiXmlHandle( TiXmlNode* _node )					{ this->node = _node; }$/;"	f	class:TiXmlHandle
TiXmlHandle	.\tinyxml\tinyxml.h	/^	TiXmlHandle( const TiXmlHandle& ref )			{ this->node = ref.node; }$/;"	f	class:TiXmlHandle
TiXmlHandle	.\tinyxml\tinyxml.h	/^class TiXmlHandle$/;"	c
TiXmlNode	.\tinyxml\tinyxml.cpp	/^TiXmlNode::TiXmlNode( NodeType _type ) : TiXmlBase()$/;"	f	class:TiXmlNode
TiXmlNode	.\tinyxml\tinyxml.h	/^class TiXmlNode : public TiXmlBase$/;"	c
TiXmlOutStream	.\tinyxml\tinystr.h	/^class TiXmlOutStream : public TiXmlString$/;"	c
TiXmlParsingData	.\tinyxml\tinyxmlparser.cpp	/^	TiXmlParsingData( const char* start, int _tabsize, int row, int col )$/;"	f	class:TiXmlParsingData	file:
TiXmlParsingData	.\tinyxml\tinyxmlparser.cpp	/^class TiXmlParsingData$/;"	c	file:
TiXmlPrinter	.\tinyxml\tinyxml.h	/^	TiXmlPrinter() : depth( 0 ), simpleTextPrint( false ),$/;"	f	class:TiXmlPrinter
TiXmlPrinter	.\tinyxml\tinyxml.h	/^class TiXmlPrinter : public TiXmlVisitor$/;"	c
TiXmlString	.\tinyxml\tinystr.h	/^	TIXML_EXPLICIT TiXmlString ( const char * copy) : rep_(0)$/;"	f	class:TiXmlString
TiXmlString	.\tinyxml\tinystr.h	/^	TIXML_EXPLICIT TiXmlString ( const char * str, size_type len) : rep_(0)$/;"	f	class:TiXmlString
TiXmlString	.\tinyxml\tinystr.h	/^	TiXmlString ( const TiXmlString & copy) : rep_(0)$/;"	f	class:TiXmlString
TiXmlString	.\tinyxml\tinystr.h	/^	TiXmlString () : rep_(&nullrep_)$/;"	f	class:TiXmlString
TiXmlString	.\tinyxml\tinystr.h	/^class TiXmlString$/;"	c
TiXmlText	.\tinyxml\tinyxml.h	/^	TiXmlText (const char * initValue ) : TiXmlNode (TiXmlNode::TINYXML_TEXT)$/;"	f	class:TiXmlText
TiXmlText	.\tinyxml\tinyxml.h	/^	TiXmlText( const TiXmlText& copy ) : TiXmlNode( TiXmlNode::TINYXML_TEXT )	{ copy.CopyTo( this ); }$/;"	f	class:TiXmlText
TiXmlText	.\tinyxml\tinyxml.h	/^	TiXmlText( const std::string& initValue ) : TiXmlNode (TiXmlNode::TINYXML_TEXT)$/;"	f	class:TiXmlText
TiXmlText	.\tinyxml\tinyxml.h	/^class TiXmlText : public TiXmlNode$/;"	c
TiXmlUnknown	.\tinyxml\tinyxml.h	/^	TiXmlUnknown( const TiXmlUnknown& copy ) : TiXmlNode( TiXmlNode::TINYXML_UNKNOWN )		{ copy.CopyTo( this ); }$/;"	f	class:TiXmlUnknown
TiXmlUnknown	.\tinyxml\tinyxml.h	/^	TiXmlUnknown() : TiXmlNode( TiXmlNode::TINYXML_UNKNOWN )	{}$/;"	f	class:TiXmlUnknown
TiXmlUnknown	.\tinyxml\tinyxml.h	/^class TiXmlUnknown : public TiXmlNode$/;"	c
TiXmlVisitor	.\tinyxml\tinyxml.h	/^class TiXmlVisitor$/;"	c
ToComment	.\tinyxml\tinyxml.h	/^	virtual		  TiXmlComment*  ToComment()		{ return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlComment
ToComment	.\tinyxml\tinyxml.h	/^	virtual TiXmlComment*           ToComment()     { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToComment	.\tinyxml\tinyxml.h	/^	virtual const TiXmlComment*     ToComment()     const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToComment	.\tinyxml\tinyxml.h	/^	virtual const TiXmlComment*  ToComment() const	{ return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlComment
ToDeclaration	.\tinyxml\tinyxml.h	/^	virtual TiXmlDeclaration*       ToDeclaration()       { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlDeclaration
ToDeclaration	.\tinyxml\tinyxml.h	/^	virtual TiXmlDeclaration*       ToDeclaration() { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToDeclaration	.\tinyxml\tinyxml.h	/^	virtual const TiXmlDeclaration* ToDeclaration() const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToDeclaration	.\tinyxml\tinyxml.h	/^	virtual const TiXmlDeclaration* ToDeclaration() const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlDeclaration
ToDocument	.\tinyxml\tinyxml.h	/^	virtual TiXmlDocument*          ToDocument()          { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlDocument
ToDocument	.\tinyxml\tinyxml.h	/^	virtual TiXmlDocument*          ToDocument()    { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToDocument	.\tinyxml\tinyxml.h	/^	virtual const TiXmlDocument*    ToDocument()    const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToDocument	.\tinyxml\tinyxml.h	/^	virtual const TiXmlDocument*    ToDocument()    const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlDocument
ToElement	.\tinyxml\tinyxml.h	/^	TiXmlElement* ToElement() const		{ return ( ( node && node->ToElement() ) ? node->ToElement() : 0 ); }$/;"	f	class:TiXmlHandle
ToElement	.\tinyxml\tinyxml.h	/^	virtual TiXmlElement*           ToElement()	          { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlElement
ToElement	.\tinyxml\tinyxml.h	/^	virtual TiXmlElement*           ToElement()	    { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToElement	.\tinyxml\tinyxml.h	/^	virtual const TiXmlElement*     ToElement()     const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToElement	.\tinyxml\tinyxml.h	/^	virtual const TiXmlElement*     ToElement()     const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlElement
ToLower	.\tinyxml\tinyxml.h	/^	inline static int ToLower( int v, TiXmlEncoding encoding )$/;"	f	class:TiXmlBase
ToNode	.\tinyxml\tinyxml.h	/^	TiXmlNode* ToNode() const			{ return node; }$/;"	f	class:TiXmlHandle
ToText	.\tinyxml\tinyxml.h	/^	TiXmlText* ToText() const			{ return ( ( node && node->ToText() ) ? node->ToText() : 0 ); }$/;"	f	class:TiXmlHandle
ToText	.\tinyxml\tinyxml.h	/^	virtual TiXmlText*	            ToText()        { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToText	.\tinyxml\tinyxml.h	/^	virtual TiXmlText*       ToText()       { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlText
ToText	.\tinyxml\tinyxml.h	/^	virtual const TiXmlText*        ToText()        const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToText	.\tinyxml\tinyxml.h	/^	virtual const TiXmlText* ToText() const { return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlText
ToUnknown	.\tinyxml\tinyxml.h	/^	TiXmlUnknown* ToUnknown() const		{ return ( ( node && node->ToUnknown() ) ? node->ToUnknown() : 0 ); }$/;"	f	class:TiXmlHandle
ToUnknown	.\tinyxml\tinyxml.h	/^	virtual TiXmlUnknown*           ToUnknown()				{ return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlUnknown
ToUnknown	.\tinyxml\tinyxml.h	/^	virtual TiXmlUnknown*           ToUnknown()	    { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
ToUnknown	.\tinyxml\tinyxml.h	/^	virtual const TiXmlUnknown*     ToUnknown()     const	{ return this; } \/\/\/< Cast to a more defined type. Will return null not of the requested type.$/;"	f	class:TiXmlUnknown
ToUnknown	.\tinyxml\tinyxml.h	/^	virtual const TiXmlUnknown*     ToUnknown()     const { return 0; } \/\/\/< Cast to a more defined type. Will return null if not of the requested type.$/;"	f	class:TiXmlNode
Type	.\tinyxml\tinyxml.h	/^	int Type() const	{ return type; }$/;"	f	class:TiXmlNode
Unknown	.\tinyxml\tinyxml.h	/^	TiXmlUnknown* Unknown() const	{ return ToUnknown(); }$/;"	f	class:TiXmlHandle
Value	.\tinyxml\tinyxml.h	/^	const char *Value() const { return value.c_str (); }$/;"	f	class:TiXmlNode
Value	.\tinyxml\tinyxml.h	/^	const char*		Value() const		{ return value.c_str(); }		\/\/\/< Return the value of this attribute.$/;"	f	class:TiXmlAttribute
ValueStr	.\tinyxml\tinyxml.h	/^	const std::string& ValueStr() const	{ return value; }				\/\/\/< Return the value of this attribute.$/;"	f	class:TiXmlAttribute
ValueStr	.\tinyxml\tinyxml.h	/^	const std::string& ValueStr() const { return value; }$/;"	f	class:TiXmlNode
ValueTStr	.\tinyxml\tinyxml.h	/^	const TIXML_STRING& ValueTStr() const { return value; }$/;"	f	class:TiXmlNode
Vector2D	.\util\Vector2.h	/^	Vector2D(float x, float  y) : _x(x), _y(y) {}$/;"	f	class:Vector2D
Vector2D	.\util\Vector2.h	/^class Vector2D$/;"	c
Version	.\tinyxml\tinyxml.h	/^	const char *Version() const			{ return version.c_str (); }$/;"	f	class:TiXmlDeclaration
Visit	.\tinyxml\tinyxml.cpp	/^bool TiXmlPrinter::Visit( const TiXmlComment& comment )$/;"	f	class:TiXmlPrinter
Visit	.\tinyxml\tinyxml.cpp	/^bool TiXmlPrinter::Visit( const TiXmlDeclaration& declaration )$/;"	f	class:TiXmlPrinter
Visit	.\tinyxml\tinyxml.cpp	/^bool TiXmlPrinter::Visit( const TiXmlText& text )$/;"	f	class:TiXmlPrinter
Visit	.\tinyxml\tinyxml.cpp	/^bool TiXmlPrinter::Visit( const TiXmlUnknown& unknown )$/;"	f	class:TiXmlPrinter
Visit	.\tinyxml\tinyxml.h	/^	virtual bool Visit( const TiXmlComment& \/*comment*\/ )			{ return true; }$/;"	f	class:TiXmlVisitor
Visit	.\tinyxml\tinyxml.h	/^	virtual bool Visit( const TiXmlDeclaration& \/*declaration*\/ )	{ return true; }$/;"	f	class:TiXmlVisitor
Visit	.\tinyxml\tinyxml.h	/^	virtual bool Visit( const TiXmlText& \/*text*\/ )					{ return true; }$/;"	f	class:TiXmlVisitor
Visit	.\tinyxml\tinyxml.h	/^	virtual bool Visit( const TiXmlUnknown& \/*unknown*\/ )			{ return true; }$/;"	f	class:TiXmlVisitor
VisitEnter	.\tinyxml\tinyxml.cpp	/^bool TiXmlPrinter::VisitEnter( const TiXmlDocument& )$/;"	f	class:TiXmlPrinter
VisitEnter	.\tinyxml\tinyxml.cpp	/^bool TiXmlPrinter::VisitEnter( const TiXmlElement& element, const TiXmlAttribute* firstAttribute )$/;"	f	class:TiXmlPrinter
VisitEnter	.\tinyxml\tinyxml.h	/^	virtual bool VisitEnter( const TiXmlDocument& \/*doc*\/ )			{ return true; }$/;"	f	class:TiXmlVisitor
VisitEnter	.\tinyxml\tinyxml.h	/^	virtual bool VisitEnter( const TiXmlElement& \/*element*\/, const TiXmlAttribute* \/*firstAttribute*\/ )	{ return true; }$/;"	f	class:TiXmlVisitor
VisitExit	.\tinyxml\tinyxml.cpp	/^bool TiXmlPrinter::VisitExit( const TiXmlDocument& )$/;"	f	class:TiXmlPrinter
VisitExit	.\tinyxml\tinyxml.cpp	/^bool TiXmlPrinter::VisitExit( const TiXmlElement& element )$/;"	f	class:TiXmlPrinter
VisitExit	.\tinyxml\tinyxml.h	/^	virtual bool VisitExit( const TiXmlDocument& \/*doc*\/ )			{ return true; }$/;"	f	class:TiXmlVisitor
VisitExit	.\tinyxml\tinyxml.h	/^	virtual bool VisitExit( const TiXmlElement& \/*element*\/ )		{ return true; }$/;"	f	class:TiXmlVisitor
W	.\glm\gtx\simd_vec4.hpp	/^		W = 3,$/;"	e	enum:glm::comp
X	.\glm\gtx\simd_vec4.hpp	/^		X = 0,$/;"	e	enum:glm::comp
XMLPARSER_H	.\src\XMLParser.h	2;"	d
XMLParser	.\src\XMLParser.h	/^class XMLParser$/;"	c
XmlTest	.\tinyxml\xmltest.cpp	/^bool XmlTest (const char* testString, const char* expected, const char* found, bool noEcho )$/;"	f
XmlTest	.\tinyxml\xmltest.cpp	/^bool XmlTest( const char* testString, int expected, int found, bool noEcho )$/;"	f
Y	.\glm\gtx\simd_vec4.hpp	/^		Y = 1,$/;"	e	enum:glm::comp
Z	.\glm\gtx\simd_vec4.hpp	/^		Z = 2,$/;"	e	enum:glm::comp
_GLM_SWIZZLE2_2_MEMBERS	.\glm\detail\_swizzle.hpp	300;"	d
_GLM_SWIZZLE2_3_MEMBERS	.\glm\detail\_swizzle.hpp	306;"	d
_GLM_SWIZZLE2_4_MEMBERS	.\glm\detail\_swizzle.hpp	316;"	d
_GLM_SWIZZLE3_2_MEMBERS	.\glm\detail\_swizzle.hpp	334;"	d
_GLM_SWIZZLE3_3_MEMBERS	.\glm\detail\_swizzle.hpp	345;"	d
_GLM_SWIZZLE3_4_MEMBERS	.\glm\detail\_swizzle.hpp	374;"	d
_GLM_SWIZZLE4_2_MEMBERS	.\glm\detail\_swizzle.hpp	457;"	d
_GLM_SWIZZLE4_3_MEMBERS	.\glm\detail\_swizzle.hpp	475;"	d
_GLM_SWIZZLE4_4_MEMBERS	.\glm\detail\_swizzle.hpp	541;"	d
_GLM_SWIZZLE_FUNCTION_1_ARGS	.\glm\detail\_swizzle.hpp	206;"	d
_GLM_SWIZZLE_FUNCTION_2_ARGS	.\glm\detail\_swizzle.hpp	216;"	d
_GLM_SWIZZLE_FUNCTION_2_ARGS_SCALAR	.\glm\detail\_swizzle.hpp	241;"	d
_GLM_SWIZZLE_SCALAR_BINARY_OPERATOR_IMPLEMENTATION	.\glm\detail\_swizzle.hpp	191;"	d
_GLM_SWIZZLE_TEMPLATE1	.\glm\detail\_swizzle.hpp	163;"	d
_GLM_SWIZZLE_TEMPLATE2	.\glm\detail\_swizzle.hpp	164;"	d
_GLM_SWIZZLE_TYPE1	.\glm\detail\_swizzle.hpp	165;"	d
_GLM_SWIZZLE_TYPE2	.\glm\detail\_swizzle.hpp	166;"	d
_GLM_SWIZZLE_VECTOR_BINARY_OPERATOR_IMPLEMENTATION	.\glm\detail\_swizzle.hpp	171;"	d
__FILEREADER_H__	.\util\FileReader.h	2;"	d
__GAMEOBJECT_H__	.\src\GameObject.h	2;"	d
__GAMESTATE_H__	.\GameState.h	2;"	d
__SHADER_H__	.\src\Shader.h	2;"	d
__has_feature	.\glm\detail\setup.hpp	803;"	d
_apply_op	.\glm\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void _apply_op(vecType<T, P> const& that, U op)$/;"	f	struct:glm::detail::_swizzle_base2
_audioContext	.\src\AudioDevice.h	/^  ALCcontext* _audioContext;$/;"	m	class:AudioDevice
_audioDevice	.\src\AudioDevice.h	/^  ALCdevice* _audioDevice;$/;"	m	class:AudioDevice
_audioDevice	.\src\Game.h	/^  AudioDevice* _audioDevice;$/;"	m	class:Game
_buffer	.\glm\detail\_swizzle.hpp	/^		char    _buffer[1];$/;"	m	struct:glm::detail::_swizzle_base0
_buffers	.\src\AudioEngine.h	/^  std::vector<ALuint> _buffers;$/;"	m	class:AudioEngine
_closedWindow	.\src\InputHandler.h	/^  bool _closedWindow;$/;"	m	class:InputHandler
_currentShader	.\src\GraphicEngine.h	/^  GLuint _currentShader;$/;"	m	class:GraphicEngine
_details	.\tinyxml\docs\classTiXmlAttribute.html	/^<hr\/><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	.\tinyxml\docs\classTiXmlBase.html	/^<hr\/><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	.\tinyxml\docs\classTiXmlComment.html	/^<hr\/><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	.\tinyxml\docs\classTiXmlDeclaration.html	/^<hr\/><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	.\tinyxml\docs\classTiXmlDocument.html	/^<hr\/><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	.\tinyxml\docs\classTiXmlElement.html	/^<hr\/><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	.\tinyxml\docs\classTiXmlHandle.html	/^<hr\/><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	.\tinyxml\docs\classTiXmlNode.html	/^<hr\/><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	.\tinyxml\docs\classTiXmlPrinter.html	/^<hr\/><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	.\tinyxml\docs\classTiXmlText.html	/^<hr\/><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	.\tinyxml\docs\classTiXmlUnknown.html	/^<hr\/><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_details	.\tinyxml\docs\classTiXmlVisitor.html	/^<hr\/><a name="_details"><\/a><h2>Detailed Description<\/h2>$/;"	a
_ebo	.\src\Player.h	/^  GLuint _ebo;$/;"	m	class:Player
_format	.\src\Texture.h	/^  std::string _format;$/;"	m	class:Texture
_glContext	.\src\GraphicsDevice.h	/^  SDL_GLContext _glContext;$/;"	m	class:GraphicsDevice
_graphicsDevice	.\src\Game.h	/^  GraphicsDevice* _graphicsDevice;$/;"	m	class:Game
_height	.\src\Player.h	/^  unsigned int _height;$/;"	m	class:Player
_height	.\src\Texture.h	/^  int _height;$/;"	m	class:Texture
_id	.\src\Shader.h	/^  GLuint _id;$/;"	m	class:Shader
_id	.\src\Texture.h	/^  GLuint _id;$/;"	m	class:Texture
_initializationStatus	.\src\AudioDevice.h	/^  bool _initializationStatus;$/;"	m	class:AudioDevice
_initializationStatus	.\src\GraphicsDevice.h	/^  bool _initializationStatus;$/;"	m	class:GraphicsDevice
_instance	.\src\AudioEngine.cpp	/^AudioEngine* AudioEngine::_instance = 0;$/;"	m	class:AudioEngine	file:
_instance	.\src\AudioEngine.h	/^  static AudioEngine* _instance;$/;"	m	class:AudioEngine
_instance	.\src\GraphicEngine.cpp	/^GraphicEngine* GraphicEngine::_instance = NULL;$/;"	m	class:GraphicEngine	file:
_instance	.\src\GraphicEngine.h	/^  static GraphicEngine* _instance;$/;"	m	class:GraphicEngine
_instance	.\src\InputHandler.cpp	/^InputHandler* InputHandler::_instance = 0;$/;"	m	class:InputHandler	file:
_instance	.\src\InputHandler.h	/^  static InputHandler* _instance;$/;"	m	class:InputHandler
_instance	.\src\XMLParser.cpp	/^XMLParser* XMLParser::_instance = 0;$/;"	m	class:XMLParser	file:
_instance	.\src\XMLParser.h	/^  static XMLParser* _instance;$/;"	m	class:XMLParser
_internalFormat	.\src\Texture.h	/^  std::string _internalFormat;$/;"	m	class:Texture
_isFullscreen	.\src\GraphicsDevice.h	/^  bool _isFullscreen;$/;"	m	class:GraphicsDevice
_keyUp	.\src\InputHandler.h	/^  bool _keyUp[100];$/;"	m	class:InputHandler
_keyboardState	.\src\InputHandler.h	/^  const Uint8* _keyboardState;$/;"	m	class:InputHandler
_running	.\src\Game.h	/^  bool _running;$/;"	m	class:Game
_shaderType	.\src\Shader.h	/^  GLenum _shaderType;$/;"	m	class:Shader
_sources	.\src\AudioEngine.h	/^  std::vector<ALuint> _sources;$/;"	m	class:AudioEngine
_swizzle	.\glm\detail\_swizzle.hpp	/^	struct _swizzle : public _swizzle_base2<N, T, P, vecType, E0, E1, E2, E3, (E0 == E1 || E0 == E2 || E0 == E3 || E1 == E2 || E1 == E3 || E2 == E3)>$/;"	s	namespace:glm::detail
_swizzle_base0	.\glm\detail\_swizzle.hpp	/^	struct _swizzle_base0$/;"	s	namespace:glm::detail
_swizzle_base1	.\glm\detail\_swizzle.hpp	/^	struct _swizzle_base1 : public _swizzle_base0<T, N>$/;"	s	namespace:glm::detail
_swizzle_base1	.\glm\detail\_swizzle.hpp	/^	struct _swizzle_base1<2, T, P, vecType, E0,E1,-1,-2, Aligned> : public _swizzle_base0<T, 2>$/;"	s	namespace:glm::detail
_swizzle_base1	.\glm\detail\_swizzle.hpp	/^	struct _swizzle_base1<3, T, P, vecType, E0,E1,E2,-1, Aligned> : public _swizzle_base0<T, 3>$/;"	s	namespace:glm::detail
_swizzle_base1	.\glm\detail\_swizzle.hpp	/^	struct _swizzle_base1<4, T, P, vecType, E0,E1,E2,E3, Aligned> : public _swizzle_base0<T, 4>$/;"	s	namespace:glm::detail
_swizzle_base2	.\glm\detail\_swizzle.hpp	/^	struct _swizzle_base2 : public _swizzle_base1<N, T, P, vecType, E0,E1,E2,E3, detail::is_aligned<P>::value>$/;"	s	namespace:glm::detail
_swizzle_base2	.\glm\detail\_swizzle.hpp	/^	struct _swizzle_base2<N, T, P, vecType, E0,E1,E2,E3, 1> : public _swizzle_base1<N, T, P, vecType, E0,E1,E2,E3, detail::is_aligned<P>::value>$/;"	s	namespace:glm::detail
_vao	.\src\Player.h	/^  GLuint _vao;$/;"	m	class:Player
_vbo	.\src\Player.h	/^  GLuint _vbo;$/;"	m	class:Player
_vsync	.\src\GraphicsDevice.h	/^  bool _vsync;$/;"	m	class:GraphicsDevice
_width	.\src\Player.h	/^  unsigned int _width;$/;"	m	class:Player
_width	.\src\Texture.h	/^  int _width;$/;"	m	class:Texture
_window	.\src\GraphicsDevice.h	/^  SDL_Window* _window;$/;"	m	class:GraphicsDevice
_windowHeight	.\src\GraphicsDevice.h	/^  unsigned int _windowHeight;$/;"	m	class:GraphicsDevice
_windowWidth	.\src\GraphicsDevice.h	/^  unsigned int _windowWidth;$/;"	m	class:GraphicsDevice
_x	.\util\Vector2.h	/^	float _x;$/;"	m	class:Vector2D
_y	.\util\Vector2.h	/^	float _y;$/;"	m	class:Vector2D
a	.\glm\detail\type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::tvec4::__anon16::__anon18
a	.\glm\detail\type_vec4.hpp	/^			union { T w, a, q; };$/;"	m	union:glm::tvec4::__anon23
aligned	.\glm\detail\precision.hpp	/^			aligned = aligned_highp,$/;"	e	enum:glm::precision
aligned_bvec1	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_highp_bvec1			aligned_bvec1;$/;"	t	namespace:glm
aligned_bvec1	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_lowp_bvec1			aligned_bvec1;$/;"	t	namespace:glm
aligned_bvec1	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_mediump_bvec1		aligned_bvec1;$/;"	t	namespace:glm
aligned_bvec2	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_highp_bvec2			aligned_bvec2;$/;"	t	namespace:glm
aligned_bvec2	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_lowp_bvec2			aligned_bvec2;$/;"	t	namespace:glm
aligned_bvec2	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_mediump_bvec2		aligned_bvec2;$/;"	t	namespace:glm
aligned_bvec3	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_highp_bvec3			aligned_bvec3;$/;"	t	namespace:glm
aligned_bvec3	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_lowp_bvec3			aligned_bvec3;$/;"	t	namespace:glm
aligned_bvec3	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_mediump_bvec3		aligned_bvec3;$/;"	t	namespace:glm
aligned_bvec4	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_highp_bvec4			aligned_bvec4;$/;"	t	namespace:glm
aligned_bvec4	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_lowp_bvec4			aligned_bvec4;$/;"	t	namespace:glm
aligned_bvec4	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_mediump_bvec4		aligned_bvec4;$/;"	t	namespace:glm
aligned_dvec1	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_highp_dvec1			aligned_dvec1;$/;"	t	namespace:glm
aligned_dvec1	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_lowp_dvec1			aligned_dvec1;$/;"	t	namespace:glm
aligned_dvec1	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_mediump_dvec1		aligned_dvec1;$/;"	t	namespace:glm
aligned_dvec2	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_highp_dvec2			aligned_dvec2;$/;"	t	namespace:glm
aligned_dvec2	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_lowp_dvec2			aligned_dvec2;$/;"	t	namespace:glm
aligned_dvec2	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_mediump_dvec2		aligned_dvec2;$/;"	t	namespace:glm
aligned_dvec3	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_highp_dvec3			aligned_dvec3;$/;"	t	namespace:glm
aligned_dvec3	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_lowp_dvec3			aligned_dvec3;$/;"	t	namespace:glm
aligned_dvec3	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_mediump_dvec3		aligned_dvec3;$/;"	t	namespace:glm
aligned_dvec4	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_highp_dvec4			aligned_dvec4;$/;"	t	namespace:glm
aligned_dvec4	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_lowp_dvec4			aligned_dvec4;$/;"	t	namespace:glm
aligned_dvec4	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_mediump_dvec4		aligned_dvec4;$/;"	t	namespace:glm
aligned_highp	.\glm\detail\precision.hpp	/^			aligned_highp,$/;"	e	enum:glm::precision
aligned_highp_bvec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<bool, aligned_highp>		aligned_highp_bvec1;$/;"	t	namespace:glm
aligned_highp_bvec2	.\glm\gtc\type_aligned.hpp	/^	typedef tvec2<bool, aligned_highp>		aligned_highp_bvec2;$/;"	t	namespace:glm
aligned_highp_bvec3	.\glm\gtc\type_aligned.hpp	/^	typedef tvec3<bool, aligned_highp>		aligned_highp_bvec3;$/;"	t	namespace:glm
aligned_highp_bvec4	.\glm\gtc\type_aligned.hpp	/^	typedef tvec4<bool, aligned_highp>		aligned_highp_bvec4;$/;"	t	namespace:glm
aligned_highp_dvec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<double, aligned_highp>	aligned_highp_dvec1;$/;"	t	namespace:glm
aligned_highp_dvec2	.\glm\gtc\type_aligned.hpp	/^	typedef tvec2<double, aligned_highp>	aligned_highp_dvec2;$/;"	t	namespace:glm
aligned_highp_dvec3	.\glm\gtc\type_aligned.hpp	/^	typedef tvec3<double, aligned_highp>	aligned_highp_dvec3;$/;"	t	namespace:glm
aligned_highp_dvec4	.\glm\gtc\type_aligned.hpp	/^	typedef tvec4<double, aligned_highp>	aligned_highp_dvec4;$/;"	t	namespace:glm
aligned_highp_ivec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<int, aligned_highp>		aligned_highp_ivec1;$/;"	t	namespace:glm
aligned_highp_ivec2	.\glm\gtc\type_aligned.hpp	/^	typedef tvec2<int, aligned_highp>		aligned_highp_ivec2;$/;"	t	namespace:glm
aligned_highp_ivec3	.\glm\gtc\type_aligned.hpp	/^	typedef tvec3<int, aligned_highp>		aligned_highp_ivec3;$/;"	t	namespace:glm
aligned_highp_ivec4	.\glm\gtc\type_aligned.hpp	/^	typedef tvec4<int, aligned_highp>		aligned_highp_ivec4;$/;"	t	namespace:glm
aligned_highp_uvec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<uint, aligned_highp>		aligned_highp_uvec1;$/;"	t	namespace:glm
aligned_highp_uvec2	.\glm\gtc\type_aligned.hpp	/^	typedef tvec2<uint, aligned_highp>		aligned_highp_uvec2;$/;"	t	namespace:glm
aligned_highp_uvec3	.\glm\gtc\type_aligned.hpp	/^	typedef tvec3<uint, aligned_highp>		aligned_highp_uvec3;$/;"	t	namespace:glm
aligned_highp_uvec4	.\glm\gtc\type_aligned.hpp	/^	typedef tvec4<uint, aligned_highp>		aligned_highp_uvec4;$/;"	t	namespace:glm
aligned_highp_vec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<float, aligned_highp>		aligned_highp_vec1;$/;"	t	namespace:glm
aligned_highp_vec2	.\glm\gtc\type_aligned.hpp	/^	typedef tvec2<float, aligned_highp>		aligned_highp_vec2;$/;"	t	namespace:glm
aligned_highp_vec3	.\glm\gtc\type_aligned.hpp	/^	typedef tvec3<float, aligned_highp>		aligned_highp_vec3;$/;"	t	namespace:glm
aligned_highp_vec4	.\glm\gtc\type_aligned.hpp	/^	typedef tvec4<float, aligned_highp>		aligned_highp_vec4;$/;"	t	namespace:glm
aligned_ivec1	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_highp_ivec1			aligned_ivec1;$/;"	t	namespace:glm
aligned_ivec1	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_lowp_ivec1			aligned_ivec1;$/;"	t	namespace:glm
aligned_ivec1	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_mediump_ivec1		aligned_ivec1;$/;"	t	namespace:glm
aligned_ivec2	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_highp_ivec2			aligned_ivec2;$/;"	t	namespace:glm
aligned_ivec2	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_lowp_ivec2			aligned_ivec2;$/;"	t	namespace:glm
aligned_ivec2	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_mediump_ivec2		aligned_ivec2;$/;"	t	namespace:glm
aligned_ivec3	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_highp_ivec3			aligned_ivec3;$/;"	t	namespace:glm
aligned_ivec3	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_lowp_ivec3			aligned_ivec3;$/;"	t	namespace:glm
aligned_ivec3	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_mediump_ivec3		aligned_ivec3;$/;"	t	namespace:glm
aligned_ivec4	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_highp_ivec4			aligned_ivec4;$/;"	t	namespace:glm
aligned_ivec4	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_lowp_ivec4			aligned_ivec4;$/;"	t	namespace:glm
aligned_ivec4	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_mediump_ivec4		aligned_ivec4;$/;"	t	namespace:glm
aligned_lowp	.\glm\detail\precision.hpp	/^			aligned_lowp,$/;"	e	enum:glm::precision
aligned_lowp_bvec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<bool, aligned_lowp>		aligned_lowp_bvec1;$/;"	t	namespace:glm
aligned_lowp_bvec2	.\glm\gtc\type_aligned.hpp	/^	typedef tvec2<bool, aligned_lowp>		aligned_lowp_bvec2;$/;"	t	namespace:glm
aligned_lowp_bvec3	.\glm\gtc\type_aligned.hpp	/^	typedef tvec3<bool, aligned_lowp>		aligned_lowp_bvec3;$/;"	t	namespace:glm
aligned_lowp_bvec4	.\glm\gtc\type_aligned.hpp	/^	typedef tvec4<bool, aligned_lowp>		aligned_lowp_bvec4;$/;"	t	namespace:glm
aligned_lowp_dvec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<double, aligned_lowp>		aligned_lowp_dvec1;$/;"	t	namespace:glm
aligned_lowp_dvec2	.\glm\gtc\type_aligned.hpp	/^	typedef tvec2<double, aligned_lowp>		aligned_lowp_dvec2;$/;"	t	namespace:glm
aligned_lowp_dvec3	.\glm\gtc\type_aligned.hpp	/^	typedef tvec3<double, aligned_lowp>		aligned_lowp_dvec3;$/;"	t	namespace:glm
aligned_lowp_dvec4	.\glm\gtc\type_aligned.hpp	/^	typedef tvec4<double, aligned_lowp>		aligned_lowp_dvec4;$/;"	t	namespace:glm
aligned_lowp_ivec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<int, aligned_lowp>		aligned_lowp_ivec1;$/;"	t	namespace:glm
aligned_lowp_ivec2	.\glm\gtc\type_aligned.hpp	/^	typedef tvec2<int, aligned_lowp>		aligned_lowp_ivec2;$/;"	t	namespace:glm
aligned_lowp_ivec3	.\glm\gtc\type_aligned.hpp	/^	typedef tvec3<int, aligned_lowp>		aligned_lowp_ivec3;$/;"	t	namespace:glm
aligned_lowp_ivec4	.\glm\gtc\type_aligned.hpp	/^	typedef tvec4<int, aligned_lowp>		aligned_lowp_ivec4;$/;"	t	namespace:glm
aligned_lowp_uvec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<uint, aligned_lowp>		aligned_lowp_uvec1;$/;"	t	namespace:glm
aligned_lowp_uvec2	.\glm\gtc\type_aligned.hpp	/^	typedef tvec2<uint, aligned_lowp>		aligned_lowp_uvec2;$/;"	t	namespace:glm
aligned_lowp_uvec3	.\glm\gtc\type_aligned.hpp	/^	typedef tvec3<uint, aligned_lowp>		aligned_lowp_uvec3;$/;"	t	namespace:glm
aligned_lowp_uvec4	.\glm\gtc\type_aligned.hpp	/^	typedef tvec4<uint, aligned_lowp>		aligned_lowp_uvec4;$/;"	t	namespace:glm
aligned_lowp_vec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<float, aligned_lowp>		aligned_lowp_vec1;$/;"	t	namespace:glm
aligned_lowp_vec2	.\glm\gtc\type_aligned.hpp	/^	typedef tvec2<float, aligned_lowp>		aligned_lowp_vec2;$/;"	t	namespace:glm
aligned_lowp_vec3	.\glm\gtc\type_aligned.hpp	/^	typedef tvec3<float, aligned_lowp>		aligned_lowp_vec3;$/;"	t	namespace:glm
aligned_lowp_vec4	.\glm\gtc\type_aligned.hpp	/^	typedef tvec4<float, aligned_lowp>		aligned_lowp_vec4;$/;"	t	namespace:glm
aligned_mediump	.\glm\detail\precision.hpp	/^			aligned_mediump,$/;"	e	enum:glm::precision
aligned_mediump_bvec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<bool, aligned_mediump>	aligned_mediump_bvec1;$/;"	t	namespace:glm
aligned_mediump_bvec2	.\glm\gtc\type_aligned.hpp	/^	typedef tvec2<bool, aligned_mediump>	aligned_mediump_bvec2;$/;"	t	namespace:glm
aligned_mediump_bvec3	.\glm\gtc\type_aligned.hpp	/^	typedef tvec3<bool, aligned_mediump>	aligned_mediump_bvec3;$/;"	t	namespace:glm
aligned_mediump_bvec4	.\glm\gtc\type_aligned.hpp	/^	typedef tvec4<bool, aligned_mediump>	aligned_mediump_bvec4;$/;"	t	namespace:glm
aligned_mediump_dvec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<double, aligned_mediump>	aligned_mediump_dvec1;$/;"	t	namespace:glm
aligned_mediump_dvec2	.\glm\gtc\type_aligned.hpp	/^	typedef tvec2<double, aligned_mediump>	aligned_mediump_dvec2;$/;"	t	namespace:glm
aligned_mediump_dvec3	.\glm\gtc\type_aligned.hpp	/^	typedef tvec3<double, aligned_mediump>	aligned_mediump_dvec3;$/;"	t	namespace:glm
aligned_mediump_dvec4	.\glm\gtc\type_aligned.hpp	/^	typedef tvec4<double, aligned_mediump>	aligned_mediump_dvec4;$/;"	t	namespace:glm
aligned_mediump_ivec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<int, aligned_mediump>		aligned_mediump_ivec1;$/;"	t	namespace:glm
aligned_mediump_ivec2	.\glm\gtc\type_aligned.hpp	/^	typedef tvec2<int, aligned_mediump>		aligned_mediump_ivec2;$/;"	t	namespace:glm
aligned_mediump_ivec3	.\glm\gtc\type_aligned.hpp	/^	typedef tvec3<int, aligned_mediump>		aligned_mediump_ivec3;$/;"	t	namespace:glm
aligned_mediump_ivec4	.\glm\gtc\type_aligned.hpp	/^	typedef tvec4<int, aligned_mediump>		aligned_mediump_ivec4;$/;"	t	namespace:glm
aligned_mediump_uvec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<uint, aligned_mediump>	aligned_mediump_uvec1;$/;"	t	namespace:glm
aligned_mediump_uvec2	.\glm\gtc\type_aligned.hpp	/^	typedef tvec2<uint, aligned_mediump>	aligned_mediump_uvec2;$/;"	t	namespace:glm
aligned_mediump_uvec3	.\glm\gtc\type_aligned.hpp	/^	typedef tvec3<uint, aligned_mediump>	aligned_mediump_uvec3;$/;"	t	namespace:glm
aligned_mediump_uvec4	.\glm\gtc\type_aligned.hpp	/^	typedef tvec4<uint, aligned_mediump>	aligned_mediump_uvec4;$/;"	t	namespace:glm
aligned_mediump_vec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<float, aligned_mediump>	aligned_mediump_vec1;$/;"	t	namespace:glm
aligned_mediump_vec2	.\glm\gtc\type_aligned.hpp	/^	typedef tvec2<float, aligned_mediump>	aligned_mediump_vec2;$/;"	t	namespace:glm
aligned_mediump_vec3	.\glm\gtc\type_aligned.hpp	/^	typedef tvec3<float, aligned_mediump>	aligned_mediump_vec3;$/;"	t	namespace:glm
aligned_mediump_vec4	.\glm\gtc\type_aligned.hpp	/^	typedef tvec4<float, aligned_mediump>	aligned_mediump_vec4;$/;"	t	namespace:glm
aligned_uvec1	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_highp_uvec1			aligned_uvec1;$/;"	t	namespace:glm
aligned_uvec1	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_lowp_uvec1			aligned_uvec1;$/;"	t	namespace:glm
aligned_uvec1	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_mediump_uvec1		aligned_uvec1;$/;"	t	namespace:glm
aligned_uvec2	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_highp_uvec2			aligned_uvec2;$/;"	t	namespace:glm
aligned_uvec2	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_lowp_uvec2			aligned_uvec2;$/;"	t	namespace:glm
aligned_uvec2	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_mediump_uvec2		aligned_uvec2;$/;"	t	namespace:glm
aligned_uvec3	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_highp_uvec3			aligned_uvec3;$/;"	t	namespace:glm
aligned_uvec3	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_lowp_uvec3			aligned_uvec3;$/;"	t	namespace:glm
aligned_uvec3	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_mediump_uvec3		aligned_uvec3;$/;"	t	namespace:glm
aligned_uvec4	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_highp_uvec4			aligned_uvec4;$/;"	t	namespace:glm
aligned_uvec4	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_lowp_uvec4			aligned_uvec4;$/;"	t	namespace:glm
aligned_uvec4	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_mediump_uvec4		aligned_uvec4;$/;"	t	namespace:glm
aligned_vec1	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_highp_vec1			aligned_vec1;$/;"	t	namespace:glm
aligned_vec1	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_lowp_vec1			aligned_vec1;$/;"	t	namespace:glm
aligned_vec1	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_mediump_vec1		aligned_vec1;$/;"	t	namespace:glm
aligned_vec2	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_highp_vec2			aligned_vec2;$/;"	t	namespace:glm
aligned_vec2	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_lowp_vec2			aligned_vec2;$/;"	t	namespace:glm
aligned_vec2	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_mediump_vec2		aligned_vec2;$/;"	t	namespace:glm
aligned_vec3	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_highp_vec3			aligned_vec3;$/;"	t	namespace:glm
aligned_vec3	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_lowp_vec3			aligned_vec3;$/;"	t	namespace:glm
aligned_vec3	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_mediump_vec3		aligned_vec3;$/;"	t	namespace:glm
aligned_vec4	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_highp_vec4			aligned_vec4;$/;"	t	namespace:glm
aligned_vec4	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_lowp_vec4			aligned_vec4;$/;"	t	namespace:glm
aligned_vec4	.\glm\gtc\type_aligned.hpp	/^	typedef aligned_mediump_vec4		aligned_vec4;$/;"	t	namespace:glm
append	.\tinyxml\tinystr.cpp	/^TiXmlString& TiXmlString::append(const char* str, size_type len)$/;"	f	class:TiXmlString
assign	.\tinyxml\tinystr.cpp	/^TiXmlString& TiXmlString::assign(const char* str, size_type len)$/;"	f	class:TiXmlString
at	.\tinyxml\tinystr.h	/^	const char& at (size_type index) const$/;"	f	class:TiXmlString
atan2	.\glm\gtx\compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER T atan2(T x, T y){return atan(x, y);}																\/\/!< \\brief Arc tangent. Returns an angle whose tangent is y\/x. The signs of x and y are used to determine what quadrant the angle is in. The range of values returned by this function is [-PI, PI]. Results are undefined if x and y are both 0. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
atan2	.\glm\gtx\compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec2<T, P> atan2(const tvec2<T, P>& x, const tvec2<T, P>& y){return atan(x, y);}	\/\/!< \\brief Arc tangent. Returns an angle whose tangent is y\/x. The signs of x and y are used to determine what quadrant the angle is in. The range of values returned by this function is [-PI, PI]. Results are undefined if x and y are both 0. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
atan2	.\glm\gtx\compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec3<T, P> atan2(const tvec3<T, P>& x, const tvec3<T, P>& y){return atan(x, y);}	\/\/!< \\brief Arc tangent. Returns an angle whose tangent is y\/x. The signs of x and y are used to determine what quadrant the angle is in. The range of values returned by this function is [-PI, PI]. Results are undefined if x and y are both 0. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
atan2	.\glm\gtx\compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec4<T, P> atan2(const tvec4<T, P>& x, const tvec4<T, P>& y){return atan(x, y);}	\/\/!< \\brief Arc tangent. Returns an angle whose tangent is y\/x. The signs of x and y are used to determine what quadrant the angle is in. The range of values returned by this function is [-PI, PI]. Results are undefined if x and y are both 0. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
attributeSet	.\tinyxml\tinyxml.h	/^	TiXmlAttributeSet attributeSet;$/;"	m	class:TiXmlElement
b	.\glm\detail\type_vec3.hpp	/^				struct{ T r, g, b; };$/;"	m	struct:glm::tvec3::__anon9::__anon11
b	.\glm\detail\type_vec3.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec3::__anon15
b	.\glm\detail\type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::tvec4::__anon16::__anon18
b	.\glm\detail\type_vec4.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec4::__anon22
base_type	.\glm\detail\_swizzle.hpp	/^		typedef _swizzle_base2<N, T, P, vecType, E0, E1, E2, E3, (E0 == E1 || E0 == E2 || E0 == E3 || E1 == E2 || E1 == E3 || E2 == E3)> base_type;$/;"	t	struct:glm::detail::_swizzle
basic_format_saver	.\glm\gtx\io.hpp	/^		class basic_format_saver$/;"	c	namespace:glm::io
basic_state_saver	.\glm\gtx\io.hpp	/^		class basic_state_saver {$/;"	c	namespace:glm::io
begin	.\glm\gtx\range.hpp	/^	inline typename genType::value_type * begin(genType& v)$/;"	f	namespace:glm
begin	.\glm\gtx\range.hpp	/^	inline typename genType::value_type const * begin(genType const & v)$/;"	f	class:glm::genType
bool1	.\glm\gtx\compatibility.hpp	/^	typedef bool						bool1;			\/\/!< \\brief boolean type with 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool1x1	.\glm\gtx\compatibility.hpp	/^	typedef bool						bool1x1;		\/\/!< \\brief boolean matrix with 1 x 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool2	.\glm\gtx\compatibility.hpp	/^	typedef tvec2<bool, highp>			bool2;			\/\/!< \\brief boolean type with 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool2x2	.\glm\gtx\compatibility.hpp	/^	typedef tmat2x2<bool, highp>		bool2x2;		\/\/!< \\brief boolean matrix with 2 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool2x3	.\glm\gtx\compatibility.hpp	/^	typedef tmat2x3<bool, highp>		bool2x3;		\/\/!< \\brief boolean matrix with 2 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool2x4	.\glm\gtx\compatibility.hpp	/^	typedef tmat2x4<bool, highp>		bool2x4;		\/\/!< \\brief boolean matrix with 2 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool3	.\glm\gtx\compatibility.hpp	/^	typedef tvec3<bool, highp>			bool3;			\/\/!< \\brief boolean type with 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool3x2	.\glm\gtx\compatibility.hpp	/^	typedef tmat3x2<bool, highp>		bool3x2;		\/\/!< \\brief boolean matrix with 3 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool3x3	.\glm\gtx\compatibility.hpp	/^	typedef tmat3x3<bool, highp>		bool3x3;		\/\/!< \\brief boolean matrix with 3 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool3x4	.\glm\gtx\compatibility.hpp	/^	typedef tmat3x4<bool, highp>		bool3x4;		\/\/!< \\brief boolean matrix with 3 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool4	.\glm\gtx\compatibility.hpp	/^	typedef tvec4<bool, highp>			bool4;			\/\/!< \\brief boolean type with 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool4x2	.\glm\gtx\compatibility.hpp	/^	typedef tmat4x2<bool, highp>		bool4x2;		\/\/!< \\brief boolean matrix with 4 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool4x3	.\glm\gtx\compatibility.hpp	/^	typedef tmat4x3<bool, highp>		bool4x3;		\/\/!< \\brief boolean matrix with 4 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool4x4	.\glm\gtx\compatibility.hpp	/^	typedef tmat4x4<bool, highp>		bool4x4;		\/\/!< \\brief boolean matrix with 4 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
bool_type	.\glm\detail\type_gentype.hpp	/^		typedef TYPE<bool> bool_type;$/;"	t	struct:glm::detail::genType
bool_type	.\glm\detail\type_vec1.hpp	/^		typedef tvec1<bool, P> bool_type;$/;"	t	struct:glm::tvec1
bool_type	.\glm\detail\type_vec2.hpp	/^		typedef tvec2<bool, P> bool_type;$/;"	t	struct:glm::tvec2
bool_type	.\glm\detail\type_vec3.hpp	/^		typedef tvec3<bool, P> bool_type;$/;"	t	struct:glm::tvec3
bool_type	.\glm\detail\type_vec4.hpp	/^		typedef tvec4<bool, P> bool_type;$/;"	t	struct:glm::tvec4
bss_	.\glm\gtx\io.hpp	/^			basic_state_saver<CTy> const bss_;$/;"	m	class:glm::io::basic_format_saver
buffer	.\tinyxml\tinyxml.h	/^	TIXML_STRING buffer;$/;"	m	class:TiXmlPrinter
bvec1	.\glm\gtc\vec1.hpp	/^	typedef highp_bvec1				bvec1;$/;"	t	namespace:glm
bvec1	.\glm\gtc\vec1.hpp	/^	typedef lowp_bvec1				bvec1;$/;"	t	namespace:glm
bvec1	.\glm\gtc\vec1.hpp	/^	typedef mediump_bvec1			bvec1;$/;"	t	namespace:glm
bvec2	.\glm\detail\type_vec.hpp	/^	typedef highp_bvec2			bvec2;$/;"	t	namespace:glm
bvec2	.\glm\detail\type_vec.hpp	/^	typedef lowp_bvec2			bvec2;$/;"	t	namespace:glm
bvec2	.\glm\detail\type_vec.hpp	/^	typedef mediump_bvec2		bvec2;$/;"	t	namespace:glm
bvec3	.\glm\detail\type_vec.hpp	/^	typedef highp_bvec3			bvec3;$/;"	t	namespace:glm
bvec3	.\glm\detail\type_vec.hpp	/^	typedef lowp_bvec3			bvec3;$/;"	t	namespace:glm
bvec3	.\glm\detail\type_vec.hpp	/^	typedef mediump_bvec3		bvec3;$/;"	t	namespace:glm
bvec4	.\glm\detail\type_vec.hpp	/^	typedef highp_bvec4			bvec4;$/;"	t	namespace:glm
bvec4	.\glm\detail\type_vec.hpp	/^	typedef lowp_bvec4			bvec4;$/;"	t	namespace:glm
bvec4	.\glm\detail\type_vec.hpp	/^	typedef mediump_bvec4		bvec4;$/;"	t	namespace:glm
byte	.\glm\gtx\raw_data.hpp	/^	typedef detail::uint8		byte;$/;"	t	namespace:glm
c_str	.\tinyxml\tinystr.h	/^	const char * c_str () const { return rep_->str; }$/;"	f	class:TiXmlString
call	.\glm\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec1<R, P> call(R (*Func) (T x), tvec1<T, P> const & v)$/;"	f	struct:glm::detail::functor1
call	.\glm\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec1<T, P> call(T (*Func) (T x, T y), tvec1<T, P> const & a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca
call	.\glm\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec1<T, P> call(T (*Func) (T x, T y), tvec1<T, P> const & a, tvec1<T, P> const & b)$/;"	f	struct:glm::detail::functor2
call	.\glm\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec2<R, P> call(R (*Func) (T x), tvec2<T, P> const & v)$/;"	f	struct:glm::detail::functor1
call	.\glm\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec2<T, P> call(T (*Func) (T x, T y), tvec2<T, P> const & a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca
call	.\glm\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec2<T, P> call(T (*Func) (T x, T y), tvec2<T, P> const & a, tvec2<T, P> const & b)$/;"	f	struct:glm::detail::functor2
call	.\glm\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec3<R, P> call(R (*Func) (T x), tvec3<T, P> const & v)$/;"	f	struct:glm::detail::functor1
call	.\glm\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec3<T, P> call(T (*Func) (T x, T y), tvec3<T, P> const & a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca
call	.\glm\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec3<T, P> call(T (*Func) (T x, T y), tvec3<T, P> const & a, tvec3<T, P> const & b)$/;"	f	struct:glm::detail::functor2
call	.\glm\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec4<R, P> call(R (*Func) (T x), tvec4<T, P> const & v)$/;"	f	struct:glm::detail::functor1
call	.\glm\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec4<T, P> call(T (*Func) (T x, T y), tvec4<T, P> const & a, T b)$/;"	f	struct:glm::detail::functor2_vec_sca
call	.\glm\detail\_vectorize.hpp	/^		GLM_FUNC_QUALIFIER static tvec4<T, P> call(T (*Func) (T x, T y), tvec4<T, P> const & a, tvec4<T, P> const & b)$/;"	f	struct:glm::detail::functor2
capacity	.\tinyxml\tinystr.h	/^		size_type size, capacity;$/;"	m	struct:TiXmlString::Rep
capacity	.\tinyxml\tinystr.h	/^	size_type capacity () const { return rep_->capacity; }$/;"	f	class:TiXmlString
cdata	.\tinyxml\tinyxml.h	/^	bool cdata;			\/\/ true if this should be input and output as a CDATA style text element$/;"	m	class:TiXmlText
char_type	.\glm\gtx\io.hpp	/^			typedef CTy char_type;$/;"	t	class:glm::io::format_punct
char_type	.\glm\gtx\io.hpp	/^			typedef typename state_type::char_type char_type;$/;"	t	class:glm::io::basic_state_saver
checkForErrors	.\src\GraphicsDevice.cpp	/^int GraphicsDevice::checkForErrors()$/;"	f	class:GraphicsDevice
chr	.\tinyxml\tinyxml.h	/^		char		    chr;$/;"	m	struct:TiXmlBase::Entity
clean	.\src\AudioEngine.cpp	/^void AudioEngine::clean()$/;"	f	class:AudioEngine
clear	.\src\GraphicsDevice.cpp	/^void GraphicsDevice::clear()$/;"	f	class:GraphicsDevice
clear	.\tinyxml\tinystr.h	/^	void clear ()$/;"	f	class:TiXmlString
clearColor	.\src\GraphicsDevice.cpp	/^void GraphicsDevice::clearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)$/;"	f	class:GraphicsDevice
close	.\backup\previous\Game.cpp	/^void Game::close()$/;"	f	class:Game
close	.\src\Game.cpp	/^void Game::close()$/;"	f	class:Game
close	.\src\GraphicsDevice.cpp	/^void GraphicsDevice::close()$/;"	f	class:GraphicsDevice
closedWindow	.\src\InputHandler.cpp	/^bool InputHandler::closedWindow()$/;"	f	class:InputHandler
col	.\tinyxml\tinyxml.h	/^	int col;	\/\/ 0 based.$/;"	m	struct:TiXmlCursor
col_type	.\glm\detail\type_mat2x2.hpp	/^		typedef tvec2<T, P> col_type;$/;"	t	struct:glm::tmat2x2
col_type	.\glm\detail\type_mat2x3.hpp	/^		typedef tvec3<T, P> col_type;$/;"	t	struct:glm::tmat2x3
col_type	.\glm\detail\type_mat2x4.hpp	/^		typedef tvec4<T, P> col_type;$/;"	t	struct:glm::tmat2x4
col_type	.\glm\detail\type_mat3x2.hpp	/^		typedef tvec2<T, P> col_type;$/;"	t	struct:glm::tmat3x2
col_type	.\glm\detail\type_mat3x3.hpp	/^		typedef tvec3<T, P> col_type;$/;"	t	struct:glm::tmat3x3
col_type	.\glm\detail\type_mat3x4.hpp	/^		typedef tvec4<T, P> col_type;$/;"	t	struct:glm::tmat3x4
col_type	.\glm\detail\type_mat4x2.hpp	/^		typedef tvec2<T, P> col_type;$/;"	t	struct:glm::tmat4x2
col_type	.\glm\detail\type_mat4x3.hpp	/^		typedef tvec3<T, P> col_type;$/;"	t	struct:glm::tmat4x3
col_type	.\glm\detail\type_mat4x4.hpp	/^		typedef tvec4<T, P> col_type;$/;"	t	struct:glm::tmat4x4
cols	.\glm\gtx\type_trait.hpp	/^			cols = 2,$/;"	e	enum:glm::type::__anon30
cols	.\glm\gtx\type_trait.hpp	/^			cols = 2,$/;"	e	enum:glm::type::__anon31
cols	.\glm\gtx\type_trait.hpp	/^			cols = 2,$/;"	e	enum:glm::type::__anon32
cols	.\glm\gtx\type_trait.hpp	/^			cols = 3,$/;"	e	enum:glm::type::__anon33
cols	.\glm\gtx\type_trait.hpp	/^			cols = 3,$/;"	e	enum:glm::type::__anon34
cols	.\glm\gtx\type_trait.hpp	/^			cols = 3,$/;"	e	enum:glm::type::__anon35
cols	.\glm\gtx\type_trait.hpp	/^			cols = 4,$/;"	e	enum:glm::type::__anon36
cols	.\glm\gtx\type_trait.hpp	/^			cols = 4,$/;"	e	enum:glm::type::__anon37
cols	.\glm\gtx\type_trait.hpp	/^			cols = 4,$/;"	e	enum:glm::type::__anon38
cols	.\glm\gtx\type_trait.hpp	/^		static length_t const cols = 0;$/;"	m	struct:glm::type
column_major	.\glm\gtx\io.hpp	/^		enum order_type { column_major, row_major};$/;"	e	enum:glm::io::order_type
comp	.\glm\gtx\simd_vec4.hpp	/^	enum comp$/;"	g	namespace:glm
components	.\glm\gtx\range.hpp	/^	inline length_t components(genType const & m)$/;"	f	namespace:glm
components	.\glm\gtx\range.hpp	/^	inline length_t components(tvec1<T, P> const & v)$/;"	f	namespace:glm
components	.\glm\gtx\range.hpp	/^	inline length_t components(tvec2<T, P> const & v)$/;"	f	namespace:glm
components	.\glm\gtx\range.hpp	/^	inline length_t components(tvec3<T, P> const & v)$/;"	f	namespace:glm
components	.\glm\gtx\range.hpp	/^	inline length_t components(tvec4<T, P> const & v)$/;"	f	namespace:glm
components	.\glm\gtx\type_trait.hpp	/^			components = 1$/;"	e	enum:glm::type::__anon26
components	.\glm\gtx\type_trait.hpp	/^			components = 2$/;"	e	enum:glm::type::__anon27
components	.\glm\gtx\type_trait.hpp	/^			components = 2,$/;"	e	enum:glm::type::__anon30
components	.\glm\gtx\type_trait.hpp	/^			components = 2,$/;"	e	enum:glm::type::__anon31
components	.\glm\gtx\type_trait.hpp	/^			components = 2,$/;"	e	enum:glm::type::__anon32
components	.\glm\gtx\type_trait.hpp	/^			components = 3$/;"	e	enum:glm::type::__anon28
components	.\glm\gtx\type_trait.hpp	/^			components = 3,$/;"	e	enum:glm::type::__anon33
components	.\glm\gtx\type_trait.hpp	/^			components = 3,$/;"	e	enum:glm::type::__anon34
components	.\glm\gtx\type_trait.hpp	/^			components = 3,$/;"	e	enum:glm::type::__anon35
components	.\glm\gtx\type_trait.hpp	/^			components = 4$/;"	e	enum:glm::type::__anon29
components	.\glm\gtx\type_trait.hpp	/^			components = 4$/;"	e	enum:glm::type::__anon39
components	.\glm\gtx\type_trait.hpp	/^			components = 4,$/;"	e	enum:glm::type::__anon36
components	.\glm\gtx\type_trait.hpp	/^			components = 4,$/;"	e	enum:glm::type::__anon37
components	.\glm\gtx\type_trait.hpp	/^			components = 4,$/;"	e	enum:glm::type::__anon38
components	.\glm\gtx\type_trait.hpp	/^			components = 8$/;"	e	enum:glm::type::__anon40
components	.\glm\gtx\type_trait.hpp	/^		static length_t const components = 0;$/;"	m	struct:glm::type
condenseWhiteSpace	.\tinyxml\tinyxml.cpp	/^bool TiXmlBase::condenseWhiteSpace = true;$/;"	m	class:TiXmlBase	file:
condenseWhiteSpace	.\tinyxml\tinyxml.h	/^	static bool condenseWhiteSpace;$/;"	m	class:TiXmlBase
const_pointer	.\glm\detail\type_gentype.hpp	/^		typedef TYPE<VALTYPE> const * const_pointer;$/;"	t	struct:glm::detail::genType
const_pointer_const	.\glm\detail\type_gentype.hpp	/^		typedef TYPE<VALTYPE> const * const const_pointer_const;$/;"	t	struct:glm::detail::genType
const_reference	.\glm\detail\type_gentype.hpp	/^		typedef TYPE<VALTYPE> const & const_reference;$/;"	t	struct:glm::detail::genType
countof	.\glm\detail\setup.hpp	/^		constexpr std::size_t countof(T const (&)[N])$/;"	f	namespace:glm
createSource	.\src\AudioEngine.cpp	/^int AudioEngine::createSource(float gain, float pitch, bool looping, float x, float y, float z)$/;"	f	class:AudioEngine
ctor	.\glm\detail\setup.hpp	/^	enum ctor{uninitialize};$/;"	g	namespace:glm
ctor	.\glm\detail\type_gentype.hpp	/^		enum ctor{null};$/;"	g	struct:glm::detail::genType
cursor	.\tinyxml\tinyxmlparser.cpp	/^	TiXmlCursor		cursor;$/;"	m	class:TiXmlParsingData	file:
data	.\glm\detail\type_vec.hpp	/^			uint8 data[size];$/;"	m	struct:glm::detail::storage::type
data	.\glm\detail\type_vec4.hpp	/^				typename detail::storage<T, sizeof(T) * 4, detail::is_aligned<P>::value>::type data;$/;"	m	union:glm::tvec4::__anon16
data	.\glm\gtc\quaternion.hpp	/^				typename detail::storage<T, sizeof(T) * 4, detail::is_aligned<P>::value>::type data;$/;"	m	union:glm::tquat::__anon24
data	.\tinyxml\tinystr.h	/^	const char * data () const { return rep_->str; }$/;"	f	class:TiXmlString
ddualquat	.\glm\gtx\dual_quaternion.hpp	/^	typedef highp_ddualquat			ddualquat;$/;"	t	namespace:glm
ddualquat	.\glm\gtx\dual_quaternion.hpp	/^	typedef lowp_ddualquat			ddualquat;$/;"	t	namespace:glm
ddualquat	.\glm\gtx\dual_quaternion.hpp	/^	typedef mediump_ddualquat		ddualquat;$/;"	t	namespace:glm
defaultp	.\glm\detail\precision.hpp	/^			defaultp = aligned_highp$/;"	e	enum:glm::precision
delim_left	.\glm\gtx\io.hpp	/^			char_type  delim_left;$/;"	m	class:glm::io::format_punct
delim_right	.\glm\gtx\io.hpp	/^			char_type  delim_right;$/;"	m	class:glm::io::format_punct
delimeter	.\glm\gtx\io.hpp	/^		struct delimeter$/;"	s	namespace:glm::io
depth	.\tinyxml\tinyxml.h	/^	int depth;$/;"	m	class:TiXmlPrinter
detail	.\glm\detail\_noise.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\glm\detail\_swizzle.hpp	/^	namespace detail$/;"	n	namespace:glm
detail	.\glm\detail\_swizzle.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\glm\detail\_vectorize.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\glm\detail\func_matrix.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\glm\detail\precision.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\glm\detail\type_float.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\glm\detail\type_gentype.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\glm\detail\type_half.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\glm\detail\type_int.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\glm\detail\type_mat.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\glm\detail\type_vec.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\glm\gtx\simd_mat4.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\glm\gtx\simd_quat.hpp	/^namespace detail$/;"	n	namespace:glm
detail	.\glm\gtx\simd_vec4.hpp	/^namespace detail$/;"	n	namespace:glm
dmat2	.\glm\detail\type_mat.hpp	/^	typedef highp_dmat2x2		dmat2;$/;"	t	namespace:glm
dmat2x2	.\glm\detail\type_mat.hpp	/^	typedef highp_dmat2x2		dmat2x2;$/;"	t	namespace:glm
dmat2x2	.\glm\detail\type_mat.hpp	/^	typedef lowp_dmat2x2		dmat2x2;$/;"	t	namespace:glm
dmat2x2	.\glm\detail\type_mat.hpp	/^	typedef mediump_dmat2x2		dmat2x2;$/;"	t	namespace:glm
dmat2x3	.\glm\detail\type_mat.hpp	/^	typedef highp_dmat2x3		dmat2x3;$/;"	t	namespace:glm
dmat2x3	.\glm\detail\type_mat.hpp	/^	typedef lowp_dmat2x3		dmat2x3;$/;"	t	namespace:glm
dmat2x3	.\glm\detail\type_mat.hpp	/^	typedef mediump_dmat2x3		dmat2x3;$/;"	t	namespace:glm
dmat2x4	.\glm\detail\type_mat.hpp	/^	typedef highp_dmat2x4		dmat2x4;$/;"	t	namespace:glm
dmat2x4	.\glm\detail\type_mat.hpp	/^	typedef lowp_dmat2x4		dmat2x4;$/;"	t	namespace:glm
dmat2x4	.\glm\detail\type_mat.hpp	/^	typedef mediump_dmat2x4		dmat2x4;$/;"	t	namespace:glm
dmat3	.\glm\detail\type_mat.hpp	/^	typedef highp_dmat3x3		dmat3;$/;"	t	namespace:glm
dmat3x2	.\glm\detail\type_mat.hpp	/^	typedef highp_dmat3x2		dmat3x2;$/;"	t	namespace:glm
dmat3x2	.\glm\detail\type_mat.hpp	/^	typedef lowp_dmat3x2		dmat3x2;$/;"	t	namespace:glm
dmat3x2	.\glm\detail\type_mat.hpp	/^	typedef mediump_dmat3x2		dmat3x2;$/;"	t	namespace:glm
dmat3x3	.\glm\detail\type_mat.hpp	/^	typedef highp_dmat3x3		dmat3x3;$/;"	t	namespace:glm
dmat3x3	.\glm\detail\type_mat.hpp	/^	typedef lowp_dmat3x3		dmat3x3;$/;"	t	namespace:glm
dmat3x3	.\glm\detail\type_mat.hpp	/^	typedef mediump_dmat3x3		dmat3x3;$/;"	t	namespace:glm
dmat3x4	.\glm\detail\type_mat.hpp	/^	typedef highp_dmat3x4		dmat3x4;$/;"	t	namespace:glm
dmat3x4	.\glm\detail\type_mat.hpp	/^	typedef lowp_dmat3x4		dmat3x4;$/;"	t	namespace:glm
dmat3x4	.\glm\detail\type_mat.hpp	/^	typedef mediump_dmat3x4		dmat3x4;$/;"	t	namespace:glm
dmat4	.\glm\detail\type_mat.hpp	/^	typedef highp_dmat4x4		dmat4;$/;"	t	namespace:glm
dmat4x2	.\glm\detail\type_mat.hpp	/^	typedef highp_dmat4x2		dmat4x2;$/;"	t	namespace:glm
dmat4x2	.\glm\detail\type_mat.hpp	/^	typedef lowp_dmat4x2		dmat4x2;$/;"	t	namespace:glm
dmat4x2	.\glm\detail\type_mat.hpp	/^	typedef mediump_dmat4x2		dmat4x2;$/;"	t	namespace:glm
dmat4x3	.\glm\detail\type_mat.hpp	/^	typedef highp_dmat4x3		dmat4x3;$/;"	t	namespace:glm
dmat4x3	.\glm\detail\type_mat.hpp	/^	typedef lowp_dmat4x3		dmat4x3;$/;"	t	namespace:glm
dmat4x3	.\glm\detail\type_mat.hpp	/^	typedef mediump_dmat4x3		dmat4x3;$/;"	t	namespace:glm
dmat4x4	.\glm\detail\type_mat.hpp	/^	typedef highp_dmat4x4		dmat4x4;$/;"	t	namespace:glm
dmat4x4	.\glm\detail\type_mat.hpp	/^	typedef lowp_dmat4x4		dmat4x4;$/;"	t	namespace:glm
dmat4x4	.\glm\detail\type_mat.hpp	/^	typedef mediump_dmat4x4		dmat4x4;$/;"	t	namespace:glm
document	.\tinyxml\tinyxml.h	/^	TiXmlDocument*	document;	\/\/ A pointer back to a document, for error reporting.$/;"	m	class:TiXmlAttribute
dotProduct	.\util\Vector2.h	/^	float dotProduct(Vector2D v)$/;"	f	class:Vector2D
double1	.\glm\gtx\compatibility.hpp	/^	typedef double						double1;		\/\/!< \\brief double-precision floating-point vector with 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double1x1	.\glm\gtx\compatibility.hpp	/^	typedef double						double1x1;		\/\/!< \\brief double-precision floating-point matrix with 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double2	.\glm\gtx\compatibility.hpp	/^	typedef tvec2<double, highp>		double2;		\/\/!< \\brief double-precision floating-point vector with 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double2x2	.\glm\gtx\compatibility.hpp	/^	typedef tmat2x2<double, highp>		double2x2;		\/\/!< \\brief double-precision floating-point matrix with 2 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double2x3	.\glm\gtx\compatibility.hpp	/^	typedef tmat2x3<double, highp>		double2x3;		\/\/!< \\brief double-precision floating-point matrix with 2 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double2x4	.\glm\gtx\compatibility.hpp	/^	typedef tmat2x4<double, highp>		double2x4;		\/\/!< \\brief double-precision floating-point matrix with 2 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double3	.\glm\gtx\compatibility.hpp	/^	typedef tvec3<double, highp>		double3;		\/\/!< \\brief double-precision floating-point vector with 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double3x2	.\glm\gtx\compatibility.hpp	/^	typedef tmat3x2<double, highp>		double3x2;		\/\/!< \\brief double-precision floating-point matrix with 3 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double3x3	.\glm\gtx\compatibility.hpp	/^	typedef tmat3x3<double, highp>		double3x3;		\/\/!< \\brief double-precision floating-point matrix with 3 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double3x4	.\glm\gtx\compatibility.hpp	/^	typedef tmat3x4<double, highp>		double3x4;		\/\/!< \\brief double-precision floating-point matrix with 3 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double4	.\glm\gtx\compatibility.hpp	/^	typedef tvec4<double, highp>		double4;		\/\/!< \\brief double-precision floating-point vector with 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double4x2	.\glm\gtx\compatibility.hpp	/^	typedef tmat4x2<double, highp>		double4x2;		\/\/!< \\brief double-precision floating-point matrix with 4 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double4x3	.\glm\gtx\compatibility.hpp	/^	typedef tmat4x3<double, highp>		double4x3;		\/\/!< \\brief double-precision floating-point matrix with 4 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
double4x4	.\glm\gtx\compatibility.hpp	/^	typedef tmat4x4<double, highp>		double4x4;		\/\/!< \\brief double-precision floating-point matrix with 4 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
dquat	.\glm\fwd.hpp	/^	typedef highp_dquat			dquat;$/;"	t	namespace:glm
dquat	.\glm\fwd.hpp	/^	typedef lowp_dquat			dquat;$/;"	t	namespace:glm
dquat	.\glm\fwd.hpp	/^	typedef mediump_dquat		dquat;$/;"	t	namespace:glm
draw	.\backup\previous\Game.cpp	/^void Game::draw()$/;"	f	class:Game
draw	.\src\Game.cpp	/^void Game::draw()$/;"	f	class:Game
draw	.\src\GraphicEngine.cpp	/^void GraphicEngine::draw(GLuint vao, Shader* shader, GLuint first, GLuint count)$/;"	f	class:GraphicEngine
draw	.\src\Player.cpp	/^void Player::draw()$/;"	f	class:Player
drawElements	.\src\GraphicEngine.cpp	/^void GraphicEngine::drawElements(GLuint vao, const Shader* shader, int count)$/;"	f	class:GraphicEngine
dual	.\glm\gtx\dual_quaternion.hpp	/^		glm::tquat<T, P> real, dual;$/;"	m	struct:glm::tdualquat
dualquat	.\glm\gtx\dual_quaternion.hpp	/^	typedef highp_fdualquat			dualquat;$/;"	t	namespace:glm
dualquat	.\glm\gtx\dual_quaternion.hpp	/^	typedef lowp_fdualquat			dualquat;$/;"	t	namespace:glm
dualquat	.\glm\gtx\dual_quaternion.hpp	/^	typedef mediump_fdualquat		dualquat;$/;"	t	namespace:glm
dvec1	.\glm\gtc\vec1.hpp	/^	typedef highp_dvec1				dvec1;$/;"	t	namespace:glm
dvec1	.\glm\gtc\vec1.hpp	/^	typedef lowp_dvec1				dvec1;$/;"	t	namespace:glm
dvec1	.\glm\gtc\vec1.hpp	/^	typedef mediump_dvec1			dvec1;$/;"	t	namespace:glm
dvec2	.\glm\detail\type_vec.hpp	/^	typedef highp_dvec2			dvec2;$/;"	t	namespace:glm
dvec2	.\glm\detail\type_vec.hpp	/^	typedef lowp_dvec2			dvec2;$/;"	t	namespace:glm
dvec2	.\glm\detail\type_vec.hpp	/^	typedef mediump_dvec2		dvec2;$/;"	t	namespace:glm
dvec3	.\glm\detail\type_vec.hpp	/^	typedef highp_dvec3			dvec3;$/;"	t	namespace:glm
dvec3	.\glm\detail\type_vec.hpp	/^	typedef lowp_dvec3			dvec3;$/;"	t	namespace:glm
dvec3	.\glm\detail\type_vec.hpp	/^	typedef mediump_dvec3		dvec3;$/;"	t	namespace:glm
dvec4	.\glm\detail\type_vec.hpp	/^	typedef highp_dvec4			dvec4;$/;"	t	namespace:glm
dvec4	.\glm\detail\type_vec.hpp	/^	typedef lowp_dvec4			dvec4;$/;"	t	namespace:glm
dvec4	.\glm\detail\type_vec.hpp	/^	typedef mediump_dvec4		dvec4;$/;"	t	namespace:glm
dword	.\glm\gtx\raw_data.hpp	/^	typedef detail::uint32		dword;$/;"	t	namespace:glm
elem	.\glm\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T const& elem(size_t i) const{ return (reinterpret_cast<const T*>(_buffer))[i]; }$/;"	f	struct:glm::detail::_swizzle_base0
elem	.\glm\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T& elem(size_t i){ return (reinterpret_cast<T*>(_buffer))[i]; }$/;"	f	struct:glm::detail::_swizzle_base0
empty	.\tinyxml\tinystr.h	/^	bool empty () const { return rep_->size == 0; }$/;"	f	class:TiXmlString
encoding	.\tinyxml\tinyxml.h	/^	TIXML_STRING encoding;$/;"	m	class:TiXmlDeclaration
end	.\glm\gtx\range.hpp	/^	inline typename genType::value_type * end(genType& v)$/;"	f	namespace:glm
end	.\glm\gtx\range.hpp	/^	inline typename genType::value_type const * end(genType const & v)$/;"	f	class:glm::genType
endMemState	.\tinyxml\xmltest.cpp	/^	_CrtMemState endMemState;$/;"	v
entity	.\tinyxml\tinyxml.h	/^	static Entity entity[ NUM_ENTITY ];$/;"	m	class:TiXmlBase
entity	.\tinyxml\tinyxmlparser.cpp	/^TiXmlBase::Entity TiXmlBase::entity[ TiXmlBase::NUM_ENTITY ] = $/;"	m	class:TiXmlBase	file:
error	.\tinyxml\tinyxml.h	/^	bool error;$/;"	m	class:TiXmlDocument
errorDesc	.\tinyxml\tinyxml.h	/^	TIXML_STRING errorDesc;$/;"	m	class:TiXmlDocument
errorId	.\tinyxml\tinyxml.h	/^	int  errorId;$/;"	m	class:TiXmlDocument
errorLocation	.\tinyxml\tinyxml.h	/^	TiXmlCursor errorLocation;$/;"	m	class:TiXmlDocument
errorString	.\tinyxml\tinyxml.h	/^	static const char* errorString[ TIXML_ERROR_STRING_COUNT ];$/;"	m	class:TiXmlBase
errorString	.\tinyxml\tinyxmlerror.cpp	/^const char* TiXmlBase::errorString[ TiXmlBase::TIXML_ERROR_STRING_COUNT ] =$/;"	m	class:TiXmlBase	file:
f32	.\glm\fwd.hpp	/^	typedef highp_float32_t f32;$/;"	t	namespace:glm
f32	.\glm\fwd.hpp	/^	typedef lowp_f32 f32;$/;"	t	namespace:glm
f32	.\glm\fwd.hpp	/^	typedef mediump_float32 f32;$/;"	t	namespace:glm
f32	.\glm\gtc\type_precision.hpp	/^	typedef float32 f32;$/;"	t	namespace:glm
f32mat1	.\glm\gtx\number_precision.hpp	/^	typedef f32			f32mat1;	\/\/!< \\brief Single-precision floating-point scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
f32mat1x1	.\glm\gtx\number_precision.hpp	/^	typedef f32			f32mat1x1;	\/\/!< \\brief Single-precision floating-point scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
f32mat2	.\glm\fwd.hpp	/^	typedef f32mat2x2				f32mat2;$/;"	t	namespace:glm
f32mat2	.\glm\fwd.hpp	/^	typedef lowp_f32mat2			f32mat2;$/;"	t	namespace:glm
f32mat2	.\glm\fwd.hpp	/^	typedef mediump_f32mat2			f32mat2;$/;"	t	namespace:glm
f32mat2	.\glm\gtc\type_precision.hpp	/^	typedef tmat2x2<f32, defaultp> f32mat2;$/;"	t	namespace:glm
f32mat2x2	.\glm\fwd.hpp	/^	typedef highp_f32mat2x2			f32mat2x2;$/;"	t	namespace:glm
f32mat2x2	.\glm\fwd.hpp	/^	typedef lowp_f32mat2x2			f32mat2x2;$/;"	t	namespace:glm
f32mat2x2	.\glm\fwd.hpp	/^	typedef mediump_f32mat2x2		f32mat2x2;$/;"	t	namespace:glm
f32mat2x2	.\glm\gtc\type_precision.hpp	/^	typedef tmat2x2<f32, defaultp> f32mat2x2;$/;"	t	namespace:glm
f32mat2x3	.\glm\fwd.hpp	/^	typedef highp_f32mat2x3			f32mat2x3;$/;"	t	namespace:glm
f32mat2x3	.\glm\fwd.hpp	/^	typedef lowp_f32mat2x3			f32mat2x3;$/;"	t	namespace:glm
f32mat2x3	.\glm\fwd.hpp	/^	typedef mediump_f32mat2x3		f32mat2x3;$/;"	t	namespace:glm
f32mat2x3	.\glm\gtc\type_precision.hpp	/^	typedef tmat2x3<f32, defaultp> f32mat2x3;$/;"	t	namespace:glm
f32mat2x4	.\glm\fwd.hpp	/^	typedef highp_f32mat2x4			f32mat2x4;$/;"	t	namespace:glm
f32mat2x4	.\glm\fwd.hpp	/^	typedef lowp_f32mat2x4			f32mat2x4;$/;"	t	namespace:glm
f32mat2x4	.\glm\fwd.hpp	/^	typedef mediump_f32mat2x4		f32mat2x4;$/;"	t	namespace:glm
f32mat2x4	.\glm\gtc\type_precision.hpp	/^	typedef tmat2x4<f32, defaultp> f32mat2x4;$/;"	t	namespace:glm
f32mat3	.\glm\fwd.hpp	/^	typedef f32mat3x3				f32mat3;$/;"	t	namespace:glm
f32mat3	.\glm\fwd.hpp	/^	typedef lowp_f32mat3			f32mat3;$/;"	t	namespace:glm
f32mat3	.\glm\fwd.hpp	/^	typedef mediump_f32mat3			f32mat3;$/;"	t	namespace:glm
f32mat3	.\glm\gtc\type_precision.hpp	/^	typedef tmat3x3<f32, defaultp> f32mat3;$/;"	t	namespace:glm
f32mat3x2	.\glm\fwd.hpp	/^	typedef highp_f32mat3x2			f32mat3x2;$/;"	t	namespace:glm
f32mat3x2	.\glm\fwd.hpp	/^	typedef lowp_f32mat3x2			f32mat3x2;$/;"	t	namespace:glm
f32mat3x2	.\glm\fwd.hpp	/^	typedef mediump_f32mat3x2		f32mat3x2;$/;"	t	namespace:glm
f32mat3x2	.\glm\gtc\type_precision.hpp	/^	typedef tmat3x2<f32, defaultp> f32mat3x2;$/;"	t	namespace:glm
f32mat3x3	.\glm\fwd.hpp	/^	typedef highp_f32mat3x3			f32mat3x3;$/;"	t	namespace:glm
f32mat3x3	.\glm\fwd.hpp	/^	typedef lowp_f32mat3x3			f32mat3x3;$/;"	t	namespace:glm
f32mat3x3	.\glm\fwd.hpp	/^	typedef mediump_f32mat3x3		f32mat3x3;$/;"	t	namespace:glm
f32mat3x3	.\glm\gtc\type_precision.hpp	/^	typedef tmat3x3<f32, defaultp> f32mat3x3;$/;"	t	namespace:glm
f32mat3x4	.\glm\fwd.hpp	/^	typedef highp_f32mat3x4			f32mat3x4;$/;"	t	namespace:glm
f32mat3x4	.\glm\fwd.hpp	/^	typedef lowp_f32mat3x4			f32mat3x4;$/;"	t	namespace:glm
f32mat3x4	.\glm\fwd.hpp	/^	typedef mediump_f32mat3x4		f32mat3x4;$/;"	t	namespace:glm
f32mat3x4	.\glm\gtc\type_precision.hpp	/^	typedef tmat3x4<f32, defaultp> f32mat3x4;$/;"	t	namespace:glm
f32mat4	.\glm\fwd.hpp	/^	typedef f32mat4x4				f32mat4;$/;"	t	namespace:glm
f32mat4	.\glm\fwd.hpp	/^	typedef lowp_f32mat4			f32mat4;$/;"	t	namespace:glm
f32mat4	.\glm\fwd.hpp	/^	typedef mediump_f32mat4			f32mat4;$/;"	t	namespace:glm
f32mat4	.\glm\gtc\type_precision.hpp	/^	typedef tmat4x4<f32, defaultp> f32mat4;$/;"	t	namespace:glm
f32mat4x2	.\glm\fwd.hpp	/^	typedef highp_f32mat4x2			f32mat4x2;$/;"	t	namespace:glm
f32mat4x2	.\glm\fwd.hpp	/^	typedef lowp_f32mat4x2			f32mat4x2;$/;"	t	namespace:glm
f32mat4x2	.\glm\fwd.hpp	/^	typedef mediump_f32mat4x2		f32mat4x2;$/;"	t	namespace:glm
f32mat4x2	.\glm\gtc\type_precision.hpp	/^	typedef tmat4x2<f32, defaultp> f32mat4x2;$/;"	t	namespace:glm
f32mat4x3	.\glm\fwd.hpp	/^	typedef highp_f32mat4x3			f32mat4x3;$/;"	t	namespace:glm
f32mat4x3	.\glm\fwd.hpp	/^	typedef lowp_f32mat4x3			f32mat4x3;$/;"	t	namespace:glm
f32mat4x3	.\glm\fwd.hpp	/^	typedef mediump_f32mat4x3		f32mat4x3;$/;"	t	namespace:glm
f32mat4x3	.\glm\gtc\type_precision.hpp	/^	typedef tmat4x3<f32, defaultp> f32mat4x3;$/;"	t	namespace:glm
f32mat4x4	.\glm\fwd.hpp	/^	typedef highp_f32mat4x4			f32mat4x4;$/;"	t	namespace:glm
f32mat4x4	.\glm\fwd.hpp	/^	typedef lowp_f32mat4x4			f32mat4x4;$/;"	t	namespace:glm
f32mat4x4	.\glm\fwd.hpp	/^	typedef mediump_f32mat4x4		f32mat4x4;$/;"	t	namespace:glm
f32mat4x4	.\glm\gtc\type_precision.hpp	/^	typedef tmat4x4<f32, defaultp> f32mat4x4;$/;"	t	namespace:glm
f32quat	.\glm\fwd.hpp	/^	typedef highp_f32quat			f32quat;$/;"	t	namespace:glm
f32quat	.\glm\fwd.hpp	/^	typedef lowp_f32quat			f32quat;$/;"	t	namespace:glm
f32quat	.\glm\fwd.hpp	/^	typedef mediump_f32quat			f32quat;$/;"	t	namespace:glm
f32quat	.\glm\gtc\type_precision.hpp	/^	typedef tquat<f32, defaultp> f32quat;$/;"	t	namespace:glm
f32vec1	.\glm\fwd.hpp	/^	typedef highp_f32vec1			f32vec1;$/;"	t	namespace:glm
f32vec1	.\glm\fwd.hpp	/^	typedef lowp_f32vec1			f32vec1;$/;"	t	namespace:glm
f32vec1	.\glm\fwd.hpp	/^	typedef mediump_f32vec1			f32vec1;$/;"	t	namespace:glm
f32vec1	.\glm\gtc\type_precision.hpp	/^	typedef tvec1<f32, defaultp> f32vec1;$/;"	t	namespace:glm
f32vec1	.\glm\gtx\number_precision.hpp	/^	typedef f32			f32vec1;    \/\/!< \\brief Single-precision floating-point scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
f32vec2	.\glm\fwd.hpp	/^	typedef highp_f32vec2			f32vec2;$/;"	t	namespace:glm
f32vec2	.\glm\fwd.hpp	/^	typedef lowp_f32vec2			f32vec2;$/;"	t	namespace:glm
f32vec2	.\glm\fwd.hpp	/^	typedef mediump_f32vec2			f32vec2;$/;"	t	namespace:glm
f32vec2	.\glm\gtc\type_precision.hpp	/^	typedef tvec2<f32, defaultp> f32vec2;$/;"	t	namespace:glm
f32vec3	.\glm\fwd.hpp	/^	typedef highp_f32vec3			f32vec3;$/;"	t	namespace:glm
f32vec3	.\glm\fwd.hpp	/^	typedef lowp_f32vec3			f32vec3;$/;"	t	namespace:glm
f32vec3	.\glm\fwd.hpp	/^	typedef mediump_f32vec3			f32vec3;$/;"	t	namespace:glm
f32vec3	.\glm\gtc\type_precision.hpp	/^	typedef tvec3<f32, defaultp> f32vec3;$/;"	t	namespace:glm
f32vec4	.\glm\fwd.hpp	/^	typedef highp_f32vec4			f32vec4;$/;"	t	namespace:glm
f32vec4	.\glm\fwd.hpp	/^	typedef lowp_f32vec4			f32vec4;$/;"	t	namespace:glm
f32vec4	.\glm\fwd.hpp	/^	typedef mediump_f32vec4			f32vec4;$/;"	t	namespace:glm
f32vec4	.\glm\gtc\type_precision.hpp	/^	typedef tvec4<f32, defaultp> f32vec4;$/;"	t	namespace:glm
f64	.\glm\fwd.hpp	/^	typedef highp_float64_t f64;$/;"	t	namespace:glm
f64	.\glm\fwd.hpp	/^	typedef lowp_f64 f64;$/;"	t	namespace:glm
f64	.\glm\fwd.hpp	/^	typedef mediump_float64 f64;$/;"	t	namespace:glm
f64	.\glm\gtc\type_precision.hpp	/^	typedef float64 f64;$/;"	t	namespace:glm
f64mat1	.\glm\gtx\number_precision.hpp	/^	typedef f64			f64mat1;	\/\/!< \\brief Double-precision floating-point scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
f64mat1x1	.\glm\gtx\number_precision.hpp	/^	typedef f64			f64mat1x1;	\/\/!< \\brief Double-precision floating-point scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
f64mat2	.\glm\fwd.hpp	/^	typedef f64mat2x2				f64mat2;$/;"	t	namespace:glm
f64mat2	.\glm\fwd.hpp	/^	typedef lowp_f64mat2			f64mat2;$/;"	t	namespace:glm
f64mat2	.\glm\fwd.hpp	/^	typedef mediump_f64mat2			f64mat2;$/;"	t	namespace:glm
f64mat2	.\glm\gtc\type_precision.hpp	/^	typedef tmat2x2<f64, defaultp> f64mat2;$/;"	t	namespace:glm
f64mat2x2	.\glm\fwd.hpp	/^	typedef highp_f64mat2x2			f64mat2x2;$/;"	t	namespace:glm
f64mat2x2	.\glm\fwd.hpp	/^	typedef lowp_f64mat2x2			f64mat2x2;$/;"	t	namespace:glm
f64mat2x2	.\glm\fwd.hpp	/^	typedef mediump_f64mat2x2		f64mat2x2;$/;"	t	namespace:glm
f64mat2x2	.\glm\gtc\type_precision.hpp	/^	typedef tmat2x2<f64, defaultp> f64mat2x2;$/;"	t	namespace:glm
f64mat2x3	.\glm\fwd.hpp	/^	typedef highp_f64mat2x3			f64mat2x3;$/;"	t	namespace:glm
f64mat2x3	.\glm\fwd.hpp	/^	typedef lowp_f64mat2x3			f64mat2x3;$/;"	t	namespace:glm
f64mat2x3	.\glm\fwd.hpp	/^	typedef mediump_f64mat2x3		f64mat2x3;$/;"	t	namespace:glm
f64mat2x3	.\glm\gtc\type_precision.hpp	/^	typedef tmat2x3<f64, defaultp> f64mat2x3;$/;"	t	namespace:glm
f64mat2x4	.\glm\fwd.hpp	/^	typedef highp_f64mat2x4			f64mat2x4;$/;"	t	namespace:glm
f64mat2x4	.\glm\fwd.hpp	/^	typedef lowp_f64mat2x4			f64mat2x4;$/;"	t	namespace:glm
f64mat2x4	.\glm\fwd.hpp	/^	typedef mediump_f64mat2x4		f64mat2x4;$/;"	t	namespace:glm
f64mat2x4	.\glm\gtc\type_precision.hpp	/^	typedef tmat2x4<f64, defaultp> f64mat2x4;$/;"	t	namespace:glm
f64mat3	.\glm\fwd.hpp	/^	typedef f64mat3x3				f64mat3;$/;"	t	namespace:glm
f64mat3	.\glm\fwd.hpp	/^	typedef lowp_f64mat3			f64mat3;$/;"	t	namespace:glm
f64mat3	.\glm\fwd.hpp	/^	typedef mediump_f64mat3			f64mat3;$/;"	t	namespace:glm
f64mat3	.\glm\gtc\type_precision.hpp	/^	typedef tmat3x3<f64, defaultp> f64mat3;$/;"	t	namespace:glm
f64mat3x2	.\glm\fwd.hpp	/^	typedef highp_f64mat3x2			f64mat3x2;$/;"	t	namespace:glm
f64mat3x2	.\glm\fwd.hpp	/^	typedef lowp_f64mat3x2			f64mat3x2;$/;"	t	namespace:glm
f64mat3x2	.\glm\fwd.hpp	/^	typedef mediump_f64mat3x2		f64mat3x2;$/;"	t	namespace:glm
f64mat3x2	.\glm\gtc\type_precision.hpp	/^	typedef tmat3x2<f64, defaultp> f64mat3x2;$/;"	t	namespace:glm
f64mat3x3	.\glm\fwd.hpp	/^	typedef highp_f64mat3x3			f64mat3x3;$/;"	t	namespace:glm
f64mat3x3	.\glm\fwd.hpp	/^	typedef lowp_f64mat3x3			f64mat3x3;$/;"	t	namespace:glm
f64mat3x3	.\glm\fwd.hpp	/^	typedef mediump_f64mat3x3		f64mat3x3;$/;"	t	namespace:glm
f64mat3x3	.\glm\gtc\type_precision.hpp	/^	typedef tmat3x3<f64, defaultp> f64mat3x3;$/;"	t	namespace:glm
f64mat3x4	.\glm\fwd.hpp	/^	typedef highp_f64mat3x4			f64mat3x4;$/;"	t	namespace:glm
f64mat3x4	.\glm\fwd.hpp	/^	typedef lowp_f64mat3x4			f64mat3x4;$/;"	t	namespace:glm
f64mat3x4	.\glm\fwd.hpp	/^	typedef mediump_f64mat3x4		f64mat3x4;$/;"	t	namespace:glm
f64mat3x4	.\glm\gtc\type_precision.hpp	/^	typedef tmat3x4<f64, defaultp> f64mat3x4;$/;"	t	namespace:glm
f64mat4	.\glm\fwd.hpp	/^	typedef f64mat4x4				f64mat4;$/;"	t	namespace:glm
f64mat4	.\glm\fwd.hpp	/^	typedef lowp_f64mat4			f64mat4;$/;"	t	namespace:glm
f64mat4	.\glm\fwd.hpp	/^	typedef mediump_f64mat4			f64mat4;$/;"	t	namespace:glm
f64mat4	.\glm\gtc\type_precision.hpp	/^	typedef tmat4x4<f64, defaultp> f64mat4;$/;"	t	namespace:glm
f64mat4x2	.\glm\fwd.hpp	/^	typedef highp_f64mat4x2			f64mat4x2;$/;"	t	namespace:glm
f64mat4x2	.\glm\fwd.hpp	/^	typedef lowp_f64mat4x2			f64mat4x2;$/;"	t	namespace:glm
f64mat4x2	.\glm\fwd.hpp	/^	typedef mediump_f64mat4x2		f64mat4x2;$/;"	t	namespace:glm
f64mat4x2	.\glm\gtc\type_precision.hpp	/^	typedef tmat4x2<f64, defaultp> f64mat4x2;$/;"	t	namespace:glm
f64mat4x3	.\glm\fwd.hpp	/^	typedef highp_f64mat4x3			f64mat4x3;$/;"	t	namespace:glm
f64mat4x3	.\glm\fwd.hpp	/^	typedef lowp_f64mat4x3			f64mat4x3;$/;"	t	namespace:glm
f64mat4x3	.\glm\fwd.hpp	/^	typedef mediump_f64mat4x3		f64mat4x3;$/;"	t	namespace:glm
f64mat4x3	.\glm\gtc\type_precision.hpp	/^	typedef tmat4x3<f64, defaultp> f64mat4x3;$/;"	t	namespace:glm
f64mat4x4	.\glm\fwd.hpp	/^	typedef highp_f64mat4x4			f64mat4x4;$/;"	t	namespace:glm
f64mat4x4	.\glm\fwd.hpp	/^	typedef lowp_f64mat4x4			f64mat4x4;$/;"	t	namespace:glm
f64mat4x4	.\glm\fwd.hpp	/^	typedef mediump_f64mat4x4		f64mat4x4;$/;"	t	namespace:glm
f64mat4x4	.\glm\gtc\type_precision.hpp	/^	typedef tmat4x4<f64, defaultp> f64mat4x4;$/;"	t	namespace:glm
f64quat	.\glm\fwd.hpp	/^	typedef highp_f64quat			f64quat;$/;"	t	namespace:glm
f64quat	.\glm\fwd.hpp	/^	typedef lowp_f64quat			f64quat;$/;"	t	namespace:glm
f64quat	.\glm\fwd.hpp	/^	typedef mediump_f64quat			f64quat;$/;"	t	namespace:glm
f64quat	.\glm\gtc\type_precision.hpp	/^	typedef tquat<f64, defaultp> f64quat;$/;"	t	namespace:glm
f64vec1	.\glm\fwd.hpp	/^	typedef highp_f64vec1			f64vec1;$/;"	t	namespace:glm
f64vec1	.\glm\fwd.hpp	/^	typedef lowp_f64vec1			f64vec1;$/;"	t	namespace:glm
f64vec1	.\glm\fwd.hpp	/^	typedef mediump_f64vec1			f64vec1;$/;"	t	namespace:glm
f64vec1	.\glm\gtc\type_precision.hpp	/^	typedef tvec1<f64, defaultp> f64vec1;$/;"	t	namespace:glm
f64vec1	.\glm\gtx\number_precision.hpp	/^	typedef f64			f64vec1;    \/\/!< \\brief Single-precision floating-point scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
f64vec2	.\glm\fwd.hpp	/^	typedef highp_f64vec2			f64vec2;$/;"	t	namespace:glm
f64vec2	.\glm\fwd.hpp	/^	typedef lowp_f64vec2			f64vec2;$/;"	t	namespace:glm
f64vec2	.\glm\fwd.hpp	/^	typedef mediump_f64vec2			f64vec2;$/;"	t	namespace:glm
f64vec2	.\glm\gtc\type_precision.hpp	/^	typedef tvec2<f64, defaultp> f64vec2;$/;"	t	namespace:glm
f64vec3	.\glm\fwd.hpp	/^	typedef highp_f64vec3			f64vec3;$/;"	t	namespace:glm
f64vec3	.\glm\fwd.hpp	/^	typedef lowp_f64vec3			f64vec3;$/;"	t	namespace:glm
f64vec3	.\glm\fwd.hpp	/^	typedef mediump_f64vec3			f64vec3;$/;"	t	namespace:glm
f64vec3	.\glm\gtc\type_precision.hpp	/^	typedef tvec3<f64, defaultp> f64vec3;$/;"	t	namespace:glm
f64vec4	.\glm\fwd.hpp	/^	typedef highp_f64vec4			f64vec4;$/;"	t	namespace:glm
f64vec4	.\glm\fwd.hpp	/^	typedef lowp_f64vec4			f64vec4;$/;"	t	namespace:glm
f64vec4	.\glm\fwd.hpp	/^	typedef mediump_f64vec4			f64vec4;$/;"	t	namespace:glm
f64vec4	.\glm\gtc\type_precision.hpp	/^	typedef tvec4<f64, defaultp> f64vec4;$/;"	t	namespace:glm
fade	.\glm\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec2<T, P> fade(tvec2<T, P> const & t)$/;"	f	namespace:glm::detail
fade	.\glm\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec3<T, P> fade(tvec3<T, P> const & t)$/;"	f	namespace:glm::detail
fade	.\glm\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec4<T, P> fade(tvec4<T, P> const & t)$/;"	f	namespace:glm::detail
fast	.\glm\detail\type_gentype.hpp	/^		fast,$/;"	e	enum:glm::profile
fdualquat	.\glm\gtx\dual_quaternion.hpp	/^	typedef highp_fdualquat			fdualquat;$/;"	t	namespace:glm
fdualquat	.\glm\gtx\dual_quaternion.hpp	/^	typedef lowp_fdualquat			fdualquat;$/;"	t	namespace:glm
fdualquat	.\glm\gtx\dual_quaternion.hpp	/^	typedef mediump_fdualquat		fdualquat;$/;"	t	namespace:glm
fill_	.\glm\gtx\io.hpp	/^			char_type       fill_;$/;"	m	class:glm::io::basic_state_saver
find	.\tinyxml\tinystr.h	/^	size_type find (char lookup) const$/;"	f	class:TiXmlString
find	.\tinyxml\tinystr.h	/^	size_type find (char tofind, size_type offset) const$/;"	f	class:TiXmlString
finish	.\tinyxml\tinystr.h	/^	char* finish() const { return rep_->str + rep_->size; }$/;"	f	class:TiXmlString
firstChild	.\tinyxml\tinyxml.h	/^	TiXmlNode*		firstChild;$/;"	m	class:TiXmlNode
flags_	.\glm\gtx\io.hpp	/^			flags_type      flags_;$/;"	m	class:glm::io::basic_state_saver
flags_type	.\glm\gtx\io.hpp	/^			typedef ::std::ios_base::fmtflags      flags_type;$/;"	t	class:glm::io::basic_state_saver
float1	.\glm\gtx\compatibility.hpp	/^	typedef float						float1;			\/\/!< \\brief single-precision floating-point vector with 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float1x1	.\glm\gtx\compatibility.hpp	/^	typedef float						float1x1;		\/\/!< \\brief single-precision floating-point matrix with 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float2	.\glm\gtx\compatibility.hpp	/^	typedef tvec2<float, highp>		float2;			\/\/!< \\brief single-precision floating-point vector with 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float2x2	.\glm\gtx\compatibility.hpp	/^	typedef tmat2x2<float, highp>		float2x2;		\/\/!< \\brief single-precision floating-point matrix with 2 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float2x3	.\glm\gtx\compatibility.hpp	/^	typedef tmat2x3<float, highp>		float2x3;		\/\/!< \\brief single-precision floating-point matrix with 2 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float2x4	.\glm\gtx\compatibility.hpp	/^	typedef tmat2x4<float, highp>		float2x4;		\/\/!< \\brief single-precision floating-point matrix with 2 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float3	.\glm\gtx\compatibility.hpp	/^	typedef tvec3<float, highp>		float3;			\/\/!< \\brief single-precision floating-point vector with 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float32	.\glm\detail\type_float.hpp	/^	typedef float				float32;$/;"	t	namespace:glm
float32	.\glm\detail\type_float.hpp	/^	typedef float				float32;$/;"	t	namespace:glm::detail
float32	.\glm\fwd.hpp	/^	typedef highp_float32 float32;$/;"	t	namespace:glm
float32	.\glm\fwd.hpp	/^	typedef lowp_float32 float32;$/;"	t	namespace:glm
float32	.\glm\fwd.hpp	/^	typedef mediump_float32 float32;$/;"	t	namespace:glm
float32	.\glm\gtc\type_precision.hpp	/^	typedef detail::float32 float32;$/;"	t	namespace:glm
float32_t	.\glm\fwd.hpp	/^	typedef highp_float32_t float32_t;$/;"	t	namespace:glm
float32_t	.\glm\fwd.hpp	/^	typedef lowp_float32_t float32_t;$/;"	t	namespace:glm
float32_t	.\glm\fwd.hpp	/^	typedef mediump_float32 float32_t;$/;"	t	namespace:glm
float32_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::float32 float32_t;$/;"	t	namespace:glm
float3x2	.\glm\gtx\compatibility.hpp	/^	typedef tmat3x2<float, highp>		float3x2;		\/\/!< \\brief single-precision floating-point matrix with 3 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float3x3	.\glm\gtx\compatibility.hpp	/^	typedef tmat3x3<float, highp>		float3x3;		\/\/!< \\brief single-precision floating-point matrix with 3 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float3x4	.\glm\gtx\compatibility.hpp	/^	typedef tmat3x4<float, highp>		float3x4;		\/\/!< \\brief single-precision floating-point matrix with 3 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float4	.\glm\gtx\compatibility.hpp	/^	typedef tvec4<float, highp>		float4;			\/\/!< \\brief single-precision floating-point vector with 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float4x2	.\glm\gtx\compatibility.hpp	/^	typedef tmat4x2<float, highp>		float4x2;		\/\/!< \\brief single-precision floating-point matrix with 4 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float4x3	.\glm\gtx\compatibility.hpp	/^	typedef tmat4x3<float, highp>		float4x3;		\/\/!< \\brief single-precision floating-point matrix with 4 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float4x4	.\glm\gtx\compatibility.hpp	/^	typedef tmat4x4<float, highp>		float4x4;		\/\/!< \\brief single-precision floating-point matrix with 4 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
float64	.\glm\detail\type_float.hpp	/^	typedef double				float64;$/;"	t	namespace:glm
float64	.\glm\detail\type_float.hpp	/^	typedef double				float64;$/;"	t	namespace:glm::detail
float64	.\glm\fwd.hpp	/^	typedef highp_float64 float64;$/;"	t	namespace:glm
float64	.\glm\fwd.hpp	/^	typedef lowp_float64 float64;$/;"	t	namespace:glm
float64	.\glm\fwd.hpp	/^	typedef mediump_float64 float64;$/;"	t	namespace:glm
float64	.\glm\gtc\type_precision.hpp	/^	typedef detail::float64 float64;$/;"	t	namespace:glm
float64_t	.\glm\fwd.hpp	/^	typedef highp_float64_t float64_t;$/;"	t	namespace:glm
float64_t	.\glm\fwd.hpp	/^	typedef lowp_float64_t float64_t;$/;"	t	namespace:glm
float64_t	.\glm\fwd.hpp	/^	typedef mediump_float64 float64_t;$/;"	t	namespace:glm
float64_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::float64 float64_t;$/;"	t	namespace:glm
float_t	.\glm\detail\type_float.hpp	/^	typedef highp_float			float_t;$/;"	t	namespace:glm
float_t	.\glm\detail\type_float.hpp	/^	typedef lowp_float			float_t;$/;"	t	namespace:glm
float_t	.\glm\detail\type_float.hpp	/^	typedef mediump_float		float_t;$/;"	t	namespace:glm
fmat2	.\glm\fwd.hpp	/^	typedef fmat2x2					fmat2;$/;"	t	namespace:glm
fmat2	.\glm\fwd.hpp	/^	typedef lowp_f32mat2			fmat2;$/;"	t	namespace:glm
fmat2	.\glm\fwd.hpp	/^	typedef mediump_f32mat2			fmat2;$/;"	t	namespace:glm
fmat2	.\glm\gtc\type_precision.hpp	/^	typedef tmat2x2<f32, defaultp> fmat2;$/;"	t	namespace:glm
fmat2x2	.\glm\fwd.hpp	/^	typedef highp_f32mat2x2			fmat2x2;$/;"	t	namespace:glm
fmat2x2	.\glm\fwd.hpp	/^	typedef lowp_f32mat2x2			fmat2x2;$/;"	t	namespace:glm
fmat2x2	.\glm\fwd.hpp	/^	typedef mediump_f32mat2x2		fmat2x2;$/;"	t	namespace:glm
fmat2x2	.\glm\gtc\type_precision.hpp	/^	typedef tmat2x2<f32, defaultp> fmat2x2;$/;"	t	namespace:glm
fmat2x3	.\glm\fwd.hpp	/^	typedef highp_f32mat2x3			fmat2x3;$/;"	t	namespace:glm
fmat2x3	.\glm\fwd.hpp	/^	typedef lowp_f32mat2x3			fmat2x3;$/;"	t	namespace:glm
fmat2x3	.\glm\fwd.hpp	/^	typedef mediump_f32mat2x3		fmat2x3;$/;"	t	namespace:glm
fmat2x3	.\glm\gtc\type_precision.hpp	/^	typedef tmat2x3<f32, defaultp> fmat2x3;$/;"	t	namespace:glm
fmat2x4	.\glm\fwd.hpp	/^	typedef highp_f32mat2x4			fmat2x4;$/;"	t	namespace:glm
fmat2x4	.\glm\fwd.hpp	/^	typedef lowp_f32mat2x4			fmat2x4;$/;"	t	namespace:glm
fmat2x4	.\glm\fwd.hpp	/^	typedef mediump_f32mat2x4		fmat2x4;$/;"	t	namespace:glm
fmat2x4	.\glm\gtc\type_precision.hpp	/^	typedef tmat2x4<f32, defaultp> fmat2x4;$/;"	t	namespace:glm
fmat3	.\glm\fwd.hpp	/^	typedef fmat3x3					fmat3;$/;"	t	namespace:glm
fmat3	.\glm\fwd.hpp	/^	typedef lowp_f32mat3			fmat3;$/;"	t	namespace:glm
fmat3	.\glm\fwd.hpp	/^	typedef mediump_f32mat3			fmat3;$/;"	t	namespace:glm
fmat3	.\glm\gtc\type_precision.hpp	/^	typedef tmat3x3<f32, defaultp> fmat3;$/;"	t	namespace:glm
fmat3x2	.\glm\fwd.hpp	/^	typedef highp_f32mat3x2			fmat3x2;$/;"	t	namespace:glm
fmat3x2	.\glm\fwd.hpp	/^	typedef lowp_f32mat3x2			fmat3x2;$/;"	t	namespace:glm
fmat3x2	.\glm\fwd.hpp	/^	typedef mediump_f32mat3x2		fmat3x2;$/;"	t	namespace:glm
fmat3x2	.\glm\gtc\type_precision.hpp	/^	typedef tmat3x2<f32, defaultp> fmat3x2;$/;"	t	namespace:glm
fmat3x3	.\glm\fwd.hpp	/^	typedef highp_f32mat3x3			fmat3x3;$/;"	t	namespace:glm
fmat3x3	.\glm\fwd.hpp	/^	typedef lowp_f32mat3x3			fmat3x3;$/;"	t	namespace:glm
fmat3x3	.\glm\fwd.hpp	/^	typedef mediump_f32mat3x3		fmat3x3;$/;"	t	namespace:glm
fmat3x3	.\glm\gtc\type_precision.hpp	/^	typedef tmat3x3<f32, defaultp> fmat3x3;$/;"	t	namespace:glm
fmat3x4	.\glm\fwd.hpp	/^	typedef highp_f32mat3x4			fmat3x4;$/;"	t	namespace:glm
fmat3x4	.\glm\fwd.hpp	/^	typedef lowp_f32mat3x4			fmat3x4;$/;"	t	namespace:glm
fmat3x4	.\glm\fwd.hpp	/^	typedef mediump_f32mat3x4		fmat3x4;$/;"	t	namespace:glm
fmat3x4	.\glm\gtc\type_precision.hpp	/^	typedef tmat3x4<f32, defaultp> fmat3x4;$/;"	t	namespace:glm
fmat4	.\glm\fwd.hpp	/^	typedef fmat4x4					fmat4;$/;"	t	namespace:glm
fmat4	.\glm\fwd.hpp	/^	typedef lowp_f32mat4			fmat4;$/;"	t	namespace:glm
fmat4	.\glm\fwd.hpp	/^	typedef mediump_f32mat4			fmat4;$/;"	t	namespace:glm
fmat4	.\glm\gtc\type_precision.hpp	/^	typedef tmat4x4<f32, defaultp> fmat4;$/;"	t	namespace:glm
fmat4x2	.\glm\fwd.hpp	/^	typedef highp_f32mat4x2			fmat4x2;$/;"	t	namespace:glm
fmat4x2	.\glm\fwd.hpp	/^	typedef lowp_f32mat4x2			fmat4x2;$/;"	t	namespace:glm
fmat4x2	.\glm\fwd.hpp	/^	typedef mediump_f32mat4x2		fmat4x2;$/;"	t	namespace:glm
fmat4x2	.\glm\gtc\type_precision.hpp	/^	typedef tmat4x2<f32, defaultp> fmat4x2;$/;"	t	namespace:glm
fmat4x3	.\glm\fwd.hpp	/^	typedef highp_f32mat4x3			fmat4x3;$/;"	t	namespace:glm
fmat4x3	.\glm\fwd.hpp	/^	typedef lowp_f32mat4x3			fmat4x3;$/;"	t	namespace:glm
fmat4x3	.\glm\fwd.hpp	/^	typedef mediump_f32mat4x3		fmat4x3;$/;"	t	namespace:glm
fmat4x3	.\glm\gtc\type_precision.hpp	/^	typedef tmat4x3<f32, defaultp> fmat4x3;$/;"	t	namespace:glm
fmat4x4	.\glm\fwd.hpp	/^	typedef highp_f32mat4x4			fmat4x4;$/;"	t	namespace:glm
fmat4x4	.\glm\fwd.hpp	/^	typedef lowp_f32mat4x4			fmat4x4;$/;"	t	namespace:glm
fmat4x4	.\glm\fwd.hpp	/^	typedef mediump_f32mat4x4		fmat4x4;$/;"	t	namespace:glm
fmat4x4	.\glm\gtc\type_precision.hpp	/^	typedef tmat4x4<f32, defaultp> fmat4x4;$/;"	t	namespace:glm
format_punct	.\glm\gtx\io.hpp	/^		class format_punct : public std::locale::facet$/;"	c	namespace:glm::io
format_saver	.\glm\gtx\io.hpp	/^		typedef basic_format_saver<char>     format_saver;$/;"	t	namespace:glm::io
formatted	.\glm\gtx\io.hpp	/^			bool       formatted;$/;"	m	class:glm::io::format_punct
fquat	.\glm\fwd.hpp	/^	typedef highp_fquat				fquat;$/;"	t	namespace:glm
fquat	.\glm\fwd.hpp	/^	typedef lowp_f32quat			fquat;$/;"	t	namespace:glm
fquat	.\glm\fwd.hpp	/^	typedef mediump_f32quat			fquat;$/;"	t	namespace:glm
fquat	.\glm\fwd.hpp	/^	typedef quat				fquat;$/;"	t	namespace:glm
functor1	.\glm\detail\_vectorize.hpp	/^	struct functor1<R, T, P, tvec1>$/;"	s	namespace:glm::detail
functor1	.\glm\detail\_vectorize.hpp	/^	struct functor1<R, T, P, tvec2>$/;"	s	namespace:glm::detail
functor1	.\glm\detail\_vectorize.hpp	/^	struct functor1<R, T, P, tvec3>$/;"	s	namespace:glm::detail
functor1	.\glm\detail\_vectorize.hpp	/^	struct functor1<R, T, P, tvec4>$/;"	s	namespace:glm::detail
functor1	.\glm\detail\_vectorize.hpp	/^	struct functor1{};$/;"	s	namespace:glm::detail
functor2	.\glm\detail\_vectorize.hpp	/^	struct functor2<T, P, tvec1>$/;"	s	namespace:glm::detail
functor2	.\glm\detail\_vectorize.hpp	/^	struct functor2<T, P, tvec2>$/;"	s	namespace:glm::detail
functor2	.\glm\detail\_vectorize.hpp	/^	struct functor2<T, P, tvec3>$/;"	s	namespace:glm::detail
functor2	.\glm\detail\_vectorize.hpp	/^	struct functor2<T, P, tvec4>$/;"	s	namespace:glm::detail
functor2	.\glm\detail\_vectorize.hpp	/^	struct functor2{};$/;"	s	namespace:glm::detail
functor2_vec_sca	.\glm\detail\_vectorize.hpp	/^	struct functor2_vec_sca<T, P, tvec1>$/;"	s	namespace:glm::detail
functor2_vec_sca	.\glm\detail\_vectorize.hpp	/^	struct functor2_vec_sca<T, P, tvec2>$/;"	s	namespace:glm::detail
functor2_vec_sca	.\glm\detail\_vectorize.hpp	/^	struct functor2_vec_sca<T, P, tvec3>$/;"	s	namespace:glm::detail
functor2_vec_sca	.\glm\detail\_vectorize.hpp	/^	struct functor2_vec_sca<T, P, tvec4>$/;"	s	namespace:glm::detail
functor2_vec_sca	.\glm\detail\_vectorize.hpp	/^	struct functor2_vec_sca{};$/;"	s	namespace:glm::detail
fvec1	.\glm\fwd.hpp	/^	typedef highp_f32vec1			fvec1;$/;"	t	namespace:glm
fvec1	.\glm\fwd.hpp	/^	typedef lowp_f32vec1			fvec1;$/;"	t	namespace:glm
fvec1	.\glm\fwd.hpp	/^	typedef mediump_f32vec1			fvec1;$/;"	t	namespace:glm
fvec1	.\glm\gtc\type_precision.hpp	/^	typedef tvec1<float, defaultp> fvec1;$/;"	t	namespace:glm
fvec2	.\glm\fwd.hpp	/^	typedef highp_f32vec2			fvec2;$/;"	t	namespace:glm
fvec2	.\glm\fwd.hpp	/^	typedef lowp_f32vec2			fvec2;$/;"	t	namespace:glm
fvec2	.\glm\fwd.hpp	/^	typedef mediump_f32vec2			fvec2;$/;"	t	namespace:glm
fvec2	.\glm\gtc\type_precision.hpp	/^	typedef tvec2<float, defaultp> fvec2;$/;"	t	namespace:glm
fvec3	.\glm\fwd.hpp	/^	typedef highp_f32vec3			fvec3;$/;"	t	namespace:glm
fvec3	.\glm\fwd.hpp	/^	typedef lowp_f32vec3			fvec3;$/;"	t	namespace:glm
fvec3	.\glm\fwd.hpp	/^	typedef mediump_f32vec3			fvec3;$/;"	t	namespace:glm
fvec3	.\glm\gtc\type_precision.hpp	/^	typedef tvec3<float, defaultp> fvec3;$/;"	t	namespace:glm
fvec4	.\glm\fwd.hpp	/^	typedef highp_f32vec4			fvec4;$/;"	t	namespace:glm
fvec4	.\glm\fwd.hpp	/^	typedef lowp_f32vec4			fvec4;$/;"	t	namespace:glm
fvec4	.\glm\fwd.hpp	/^	typedef mediump_f32vec4			fvec4;$/;"	t	namespace:glm
fvec4	.\glm\gtc\type_precision.hpp	/^	typedef tvec4<float, defaultp> fvec4;$/;"	t	namespace:glm
g	.\glm\detail\type_vec2.hpp	/^				struct{ T r, g; };$/;"	m	struct:glm::tvec2::__anon3::__anon5
g	.\glm\detail\type_vec2.hpp	/^			union {T y, g, t;};$/;"	m	union:glm::tvec2::__anon8
g	.\glm\detail\type_vec3.hpp	/^				struct{ T r, g, b; };$/;"	m	struct:glm::tvec3::__anon9::__anon11
g	.\glm\detail\type_vec3.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec3::__anon14
g	.\glm\detail\type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::tvec4::__anon16::__anon18
g	.\glm\detail\type_vec4.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec4::__anon21
gFail	.\tinyxml\xmltest.cpp	/^static int gFail = 0;$/;"	v	file:
gPass	.\tinyxml\xmltest.cpp	/^static int gPass = 0;$/;"	v	file:
genType	.\glm\detail\type_gentype.hpp	/^	struct genType$/;"	s	namespace:glm::detail
getAttributes	.\src\XMLParser.cpp	/^void XMLParser::getAttributes(std::string file, std::string elementName, std::vector<std::string> attributes, std::vector<int>* data)$/;"	f	class:XMLParser
glm	.\glm\detail\_noise.hpp	/^namespace glm{$/;"	n
glm	.\glm\detail\_swizzle.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\_swizzle.hpp	/^namespace glm{$/;"	n
glm	.\glm\detail\_vectorize.hpp	/^namespace glm{$/;"	n
glm	.\glm\detail\func_common.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\func_exponential.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\func_geometric.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\func_integer.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\func_matrix.hpp	/^namespace glm{$/;"	n
glm	.\glm\detail\func_packing.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\func_trigonometric.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\func_vector_relational.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\glm.cpp	/^namespace glm$/;"	n	file:
glm	.\glm\detail\precision.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\setup.hpp	/^	namespace glm$/;"	n
glm	.\glm\detail\setup.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\type_float.hpp	/^namespace glm{$/;"	n
glm	.\glm\detail\type_gentype.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\type_half.hpp	/^namespace glm{$/;"	n
glm	.\glm\detail\type_int.hpp	/^namespace glm{$/;"	n
glm	.\glm\detail\type_mat.hpp	/^namespace glm{$/;"	n
glm	.\glm\detail\type_mat2x2.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\type_mat2x3.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\type_mat2x4.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\type_mat3x2.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\type_mat3x3.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\type_mat3x4.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\type_mat4x2.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\type_mat4x3.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\type_mat4x4.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\type_vec.hpp	/^namespace glm{$/;"	n
glm	.\glm\detail\type_vec1.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\type_vec2.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\type_vec3.hpp	/^namespace glm$/;"	n
glm	.\glm\detail\type_vec4.hpp	/^namespace glm$/;"	n
glm	.\glm\fwd.hpp	/^namespace glm$/;"	n
glm	.\glm\gtc\bitfield.hpp	/^namespace glm$/;"	n
glm	.\glm\gtc\color_space.hpp	/^namespace glm$/;"	n
glm	.\glm\gtc\constants.hpp	/^namespace glm$/;"	n
glm	.\glm\gtc\epsilon.hpp	/^namespace glm$/;"	n
glm	.\glm\gtc\functions.hpp	/^namespace glm$/;"	n
glm	.\glm\gtc\integer.hpp	/^namespace glm$/;"	n
glm	.\glm\gtc\matrix_access.hpp	/^namespace glm$/;"	n
glm	.\glm\gtc\matrix_integer.hpp	/^namespace glm$/;"	n
glm	.\glm\gtc\matrix_inverse.hpp	/^namespace glm$/;"	n
glm	.\glm\gtc\matrix_transform.hpp	/^namespace glm$/;"	n
glm	.\glm\gtc\noise.hpp	/^namespace glm$/;"	n
glm	.\glm\gtc\packing.hpp	/^namespace glm$/;"	n
glm	.\glm\gtc\quaternion.hpp	/^namespace glm$/;"	n
glm	.\glm\gtc\random.hpp	/^namespace glm$/;"	n
glm	.\glm\gtc\reciprocal.hpp	/^namespace glm$/;"	n
glm	.\glm\gtc\round.hpp	/^namespace glm$/;"	n
glm	.\glm\gtc\type_aligned.hpp	/^namespace glm$/;"	n
glm	.\glm\gtc\type_precision.hpp	/^namespace glm$/;"	n
glm	.\glm\gtc\type_ptr.hpp	/^namespace glm$/;"	n
glm	.\glm\gtc\ulp.hpp	/^namespace glm$/;"	n
glm	.\glm\gtc\vec1.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\associated_min_max.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\bit.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\closest_point.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\color_space.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\color_space_YCoCg.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\common.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\compatibility.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\component_wise.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\dual_quaternion.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\euler_angles.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\extend.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\extended_min_max.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\fast_exponential.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\fast_square_root.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\fast_trigonometry.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\gradient_paint.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\handed_coordinate_space.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\integer.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\intersect.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\io.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\log_base.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\matrix_cross_product.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\matrix_decompose.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\matrix_interpolation.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\matrix_major_storage.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\matrix_operation.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\matrix_query.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\matrix_transform_2d.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\mixed_product.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\norm.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\normal.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\normalize_dot.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\number_precision.hpp	/^namespace glm{$/;"	n
glm	.\glm\gtx\optimum_pow.hpp	/^namespace glm{$/;"	n
glm	.\glm\gtx\orthonormalize.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\perpendicular.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\polar_coordinates.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\projection.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\quaternion.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\range.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\raw_data.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\rotate_normalized_axis.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\rotate_vector.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\scalar_multiplication.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\scalar_relational.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\simd_mat4.hpp	/^namespace glm{$/;"	n
glm	.\glm\gtx\simd_quat.hpp	/^namespace glm{$/;"	n
glm	.\glm\gtx\simd_vec4.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\simd_vec4.hpp	/^namespace glm{$/;"	n
glm	.\glm\gtx\spline.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\std_based_type.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\string_cast.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\transform.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\transform2.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\type_aligned.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\type_trait.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\vector_angle.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\vector_query.hpp	/^namespace glm$/;"	n
glm	.\glm\gtx\wrap.hpp	/^namespace glm$/;"	n
glm	.\glm\mat2x2.hpp	/^namespace glm$/;"	n
glm	.\glm\mat2x3.hpp	/^namespace glm$/;"	n
glm	.\glm\mat2x4.hpp	/^namespace glm$/;"	n
glm	.\glm\mat3x2.hpp	/^namespace glm$/;"	n
glm	.\glm\mat3x3.hpp	/^namespace glm$/;"	n
glm	.\glm\mat3x4.hpp	/^namespace glm$/;"	n
glm	.\glm\mat4x2.hpp	/^namespace glm$/;"	n
glm	.\glm\mat4x3.hpp	/^namespace glm$/;"	n
glm	.\glm\mat4x4.hpp	/^namespace glm$/;"	n
glm_dvec4	.\glm\simd\platform.h	/^	typedef __m256d		glm_dvec4;$/;"	t
glm_i128_interleave	.\glm\simd\integer.h	/^GLM_FUNC_QUALIFIER glm_uvec4 glm_i128_interleave(glm_uvec4 x)$/;"	f
glm_i128_interleave2	.\glm\simd\integer.h	/^GLM_FUNC_QUALIFIER glm_uvec4 glm_i128_interleave2(glm_uvec4 x, glm_uvec4 y)$/;"	f
glm_i64vec4	.\glm\simd\platform.h	/^	typedef __m256i		glm_i64vec4;$/;"	t
glm_ivec4	.\glm\simd\platform.h	/^	typedef __m128i		glm_ivec4;$/;"	t
glm_ivec4_abs	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_ivec4 glm_ivec4_abs(glm_ivec4 x)$/;"	f
glm_mat4_add	.\glm\simd\matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_add(glm_vec4 const in1[4], glm_vec4 const in2[4], glm_vec4 out[4])$/;"	f
glm_mat4_determinant	.\glm\simd\matrix.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_mat4_determinant(glm_vec4 const m[4])$/;"	f
glm_mat4_determinant_highp	.\glm\simd\matrix.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_mat4_determinant_highp(glm_vec4 const in[4])$/;"	f
glm_mat4_determinant_lowp	.\glm\simd\matrix.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_mat4_determinant_lowp(glm_vec4 const m[4])$/;"	f
glm_mat4_inverse	.\glm\simd\matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_inverse(glm_vec4 const in[4], glm_vec4 out[4])$/;"	f
glm_mat4_inverse_lowp	.\glm\simd\matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_inverse_lowp(glm_vec4 const in[4], glm_vec4 out[4])$/;"	f
glm_mat4_matrixCompMult	.\glm\simd\matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_matrixCompMult(glm_vec4 const in1[4], glm_vec4 const in2[4], glm_vec4 out[4])$/;"	f
glm_mat4_mul	.\glm\simd\matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_mul(glm_vec4 const in1[4], glm_vec4 const in2[4], glm_vec4 out[4])$/;"	f
glm_mat4_mul_vec4	.\glm\simd\matrix.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_mat4_mul_vec4(glm_vec4 const m[4], glm_vec4 v)$/;"	f
glm_mat4_outerProduct	.\glm\simd\matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_outerProduct(__m128 const & c, __m128 const & r, __m128 out[4])$/;"	f
glm_mat4_sub	.\glm\simd\matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_sub(glm_vec4 const in1[4], glm_vec4 const in2[4], glm_vec4 out[4])$/;"	f
glm_mat4_transpose	.\glm\simd\matrix.h	/^GLM_FUNC_QUALIFIER void glm_mat4_transpose(glm_vec4 const in[4], glm_vec4 out[4])$/;"	f
glm_u64vec4	.\glm\simd\platform.h	/^	typedef __m256i		glm_u64vec4;$/;"	t
glm_uvec4	.\glm\simd\platform.h	/^	typedef __m128i		glm_uvec4;$/;"	t
glm_vec1_add	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec1_add(glm_vec4 a, glm_vec4 b)$/;"	f
glm_vec1_div	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec1_div(glm_vec4 a, glm_vec4 b)$/;"	f
glm_vec1_dot	.\glm\simd\geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec1_dot(glm_vec4 v1, glm_vec4 v2)$/;"	f
glm_vec1_fma	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec1_fma(glm_vec4 a, glm_vec4 b, glm_vec4 c)$/;"	f
glm_vec1_mul	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec1_mul(glm_vec4 a, glm_vec4 b)$/;"	f
glm_vec1_sqrt_lowp	.\glm\simd\exponential.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec1_sqrt_lowp(glm_vec4 x)$/;"	f
glm_vec1_sub	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec1_sub(glm_vec4 a, glm_vec4 b)$/;"	f
glm_vec4	.\glm\simd\platform.h	/^	typedef __m128		glm_vec4;$/;"	t
glm_vec4_abs	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_abs(glm_vec4 x)$/;"	f
glm_vec4_add	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_add(glm_vec4 a, glm_vec4 b)$/;"	f
glm_vec4_ceil	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_ceil(glm_vec4 x)$/;"	f
glm_vec4_clamp	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_clamp(glm_vec4 v, glm_vec4 minVal, glm_vec4 maxVal)$/;"	f
glm_vec4_cross	.\glm\simd\geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_cross(glm_vec4 v1, glm_vec4 v2)$/;"	f
glm_vec4_distance	.\glm\simd\geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_distance(glm_vec4 p0, glm_vec4 p1)$/;"	f
glm_vec4_div	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_div(glm_vec4 a, glm_vec4 b)$/;"	f
glm_vec4_div_lowp	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_div_lowp(glm_vec4 a, glm_vec4 b)$/;"	f
glm_vec4_dot	.\glm\simd\geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_dot(glm_vec4 v1, glm_vec4 v2)$/;"	f
glm_vec4_faceforward	.\glm\simd\geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_faceforward(glm_vec4 N, glm_vec4 I, glm_vec4 Nref)$/;"	f
glm_vec4_floor	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_floor(glm_vec4 x)$/;"	f
glm_vec4_fma	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_fma(glm_vec4 a, glm_vec4 b, glm_vec4 c)$/;"	f
glm_vec4_fract	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_fract(glm_vec4 x)$/;"	f
glm_vec4_inf	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_inf(glm_vec4 x)$/;"	f
glm_vec4_length	.\glm\simd\geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_length(glm_vec4 x)$/;"	f
glm_vec4_mix	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_mix(glm_vec4 v1, glm_vec4 v2, glm_vec4 a)$/;"	f
glm_vec4_mod	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_mod(glm_vec4 x, glm_vec4 y)$/;"	f
glm_vec4_mul	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_mul(glm_vec4 a, glm_vec4 b)$/;"	f
glm_vec4_mul_mat4	.\glm\simd\matrix.h	/^GLM_FUNC_QUALIFIER __m128 glm_vec4_mul_mat4(glm_vec4 v, glm_vec4 const m[4])$/;"	f
glm_vec4_nan	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_nan(glm_vec4 x)$/;"	f
glm_vec4_normalize	.\glm\simd\geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_normalize(glm_vec4 v)$/;"	f
glm_vec4_reflect	.\glm\simd\geometric.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_reflect(glm_vec4 I, glm_vec4 N)$/;"	f
glm_vec4_refract	.\glm\simd\geometric.h	/^GLM_FUNC_QUALIFIER __m128 glm_vec4_refract(glm_vec4 I, glm_vec4 N, glm_vec4 eta)$/;"	f
glm_vec4_round	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_round(glm_vec4 x)$/;"	f
glm_vec4_roundEven	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_roundEven(glm_vec4 x)$/;"	f
glm_vec4_sign	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_sign(glm_vec4 x)$/;"	f
glm_vec4_smoothstep	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_smoothstep(glm_vec4 edge0, glm_vec4 edge1, glm_vec4 x)$/;"	f
glm_vec4_sqrt_lowp	.\glm\simd\exponential.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_sqrt_lowp(glm_vec4 x)$/;"	f
glm_vec4_step	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_step(glm_vec4 edge, glm_vec4 x)$/;"	f
glm_vec4_sub	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_sub(glm_vec4 a, glm_vec4 b)$/;"	f
glm_vec4_swizzle_xyzw	.\glm\simd\common.h	/^GLM_FUNC_QUALIFIER glm_vec4 glm_vec4_swizzle_xyzw(glm_vec4 a)$/;"	f
gtx	.\glm\gtx\number_precision.hpp	/^namespace gtx$/;"	n	namespace:glm
gtx	.\glm\gtx\optimum_pow.hpp	/^namespace gtx$/;"	n	namespace:glm
handleInput	.\backup\previous\Game.cpp	/^void Game::handleInput()$/;"	f	class:Game
handleInput	.\src\Game.cpp	/^void Game::handleInput()$/;"	f	class:Game
hash	.\glm\gtx\hash.hpp	/^	struct hash<glm::tdualquat<T,P> >$/;"	s	namespace:std
hash	.\glm\gtx\hash.hpp	/^	struct hash<glm::tmat2x2<T,P> >$/;"	s	namespace:std
hash	.\glm\gtx\hash.hpp	/^	struct hash<glm::tmat2x3<T,P> >$/;"	s	namespace:std
hash	.\glm\gtx\hash.hpp	/^	struct hash<glm::tmat2x4<T,P> >$/;"	s	namespace:std
hash	.\glm\gtx\hash.hpp	/^	struct hash<glm::tmat3x2<T,P> >$/;"	s	namespace:std
hash	.\glm\gtx\hash.hpp	/^	struct hash<glm::tmat3x3<T,P> >$/;"	s	namespace:std
hash	.\glm\gtx\hash.hpp	/^	struct hash<glm::tmat3x4<T,P> >$/;"	s	namespace:std
hash	.\glm\gtx\hash.hpp	/^	struct hash<glm::tmat4x2<T,P> >$/;"	s	namespace:std
hash	.\glm\gtx\hash.hpp	/^	struct hash<glm::tmat4x3<T,P> >$/;"	s	namespace:std
hash	.\glm\gtx\hash.hpp	/^	struct hash<glm::tmat4x4<T,P> >$/;"	s	namespace:std
hash	.\glm\gtx\hash.hpp	/^	struct hash<glm::tquat<T,P>>$/;"	s	namespace:std
hash	.\glm\gtx\hash.hpp	/^	struct hash<glm::tvec1<T,P> >$/;"	s	namespace:std
hash	.\glm\gtx\hash.hpp	/^	struct hash<glm::tvec2<T,P> >$/;"	s	namespace:std
hash	.\glm\gtx\hash.hpp	/^	struct hash<glm::tvec3<T,P> >$/;"	s	namespace:std
hash	.\glm\gtx\hash.hpp	/^	struct hash<glm::tvec4<T,P> >$/;"	s	namespace:std
hdata	.\glm\detail\type_half.hpp	/^	typedef short hdata;$/;"	t	namespace:glm::detail
height	.\src\Texture.h	/^  int height() const { return _height; }$/;"	f	class:Texture
highp	.\glm\detail\precision.hpp	/^		highp = packed_highp,$/;"	e	enum:glm::precision
highp_bvec1	.\glm\gtc\vec1.hpp	/^	typedef highp_bvec1_t			highp_bvec1;$/;"	t	namespace:glm
highp_bvec1_t	.\glm\detail\type_vec.hpp	/^	typedef tvec1<bool, highp>		highp_bvec1_t;$/;"	t	namespace:glm
highp_bvec2	.\glm\detail\type_vec.hpp	/^	typedef tvec2<bool, highp>		highp_bvec2;$/;"	t	namespace:glm
highp_bvec3	.\glm\detail\type_vec.hpp	/^	typedef tvec3<bool, highp>		highp_bvec3;$/;"	t	namespace:glm
highp_bvec4	.\glm\detail\type_vec.hpp	/^	typedef tvec4<bool, highp>		highp_bvec4;$/;"	t	namespace:glm
highp_ddualquat	.\glm\gtx\dual_quaternion.hpp	/^	typedef tdualquat<double, highp>	highp_ddualquat;$/;"	t	namespace:glm
highp_dmat2	.\glm\detail\type_mat.hpp	/^	typedef tmat2x2<double, highp>		highp_dmat2;$/;"	t	namespace:glm
highp_dmat2x2	.\glm\detail\type_mat.hpp	/^	typedef tmat2x2<double, highp>		highp_dmat2x2;$/;"	t	namespace:glm
highp_dmat2x3	.\glm\detail\type_mat.hpp	/^	typedef tmat2x3<double, highp>		highp_dmat2x3;$/;"	t	namespace:glm
highp_dmat2x4	.\glm\detail\type_mat.hpp	/^	typedef tmat2x4<double, highp>		highp_dmat2x4;$/;"	t	namespace:glm
highp_dmat3	.\glm\detail\type_mat.hpp	/^	typedef tmat3x3<double, highp>		highp_dmat3;$/;"	t	namespace:glm
highp_dmat3x2	.\glm\detail\type_mat.hpp	/^	typedef tmat3x2<double, highp>		highp_dmat3x2;$/;"	t	namespace:glm
highp_dmat3x3	.\glm\detail\type_mat.hpp	/^	typedef tmat3x3<double, highp>		highp_dmat3x3;$/;"	t	namespace:glm
highp_dmat3x4	.\glm\detail\type_mat.hpp	/^	typedef tmat3x4<double, highp>		highp_dmat3x4;$/;"	t	namespace:glm
highp_dmat4	.\glm\detail\type_mat.hpp	/^	typedef tmat4x4<double, highp>		highp_dmat4;$/;"	t	namespace:glm
highp_dmat4x2	.\glm\detail\type_mat.hpp	/^	typedef tmat4x2<double, highp>		highp_dmat4x2;$/;"	t	namespace:glm
highp_dmat4x3	.\glm\detail\type_mat.hpp	/^	typedef tmat4x3<double, highp>		highp_dmat4x3;$/;"	t	namespace:glm
highp_dmat4x4	.\glm\detail\type_mat.hpp	/^	typedef tmat4x4<double, highp>		highp_dmat4x4;$/;"	t	namespace:glm
highp_dquat	.\glm\fwd.hpp	/^	typedef tquat<double, highp>	highp_dquat;$/;"	t	namespace:glm
highp_dualquat	.\glm\gtx\dual_quaternion.hpp	/^	typedef tdualquat<float, highp>		highp_dualquat;$/;"	t	namespace:glm
highp_dvec1	.\glm\gtc\vec1.hpp	/^	typedef highp_dvec1_t			highp_dvec1;$/;"	t	namespace:glm
highp_dvec1_t	.\glm\detail\type_vec.hpp	/^	typedef tvec1<double, highp>	highp_dvec1_t;$/;"	t	namespace:glm
highp_dvec2	.\glm\detail\type_vec.hpp	/^	typedef tvec2<double, highp>	highp_dvec2;$/;"	t	namespace:glm
highp_dvec3	.\glm\detail\type_vec.hpp	/^	typedef tvec3<double, highp>	highp_dvec3;$/;"	t	namespace:glm
highp_dvec4	.\glm\detail\type_vec.hpp	/^	typedef tvec4<double, highp>	highp_dvec4;$/;"	t	namespace:glm
highp_f32	.\glm\fwd.hpp	/^	typedef float32 highp_f32;$/;"	t	namespace:glm
highp_f32mat2	.\glm\fwd.hpp	/^	typedef highp_f32mat2x2 highp_f32mat2;$/;"	t	namespace:glm
highp_f32mat2x2	.\glm\fwd.hpp	/^	typedef tmat2x2<f32, highp> highp_f32mat2x2;$/;"	t	namespace:glm
highp_f32mat2x3	.\glm\fwd.hpp	/^	typedef tmat2x3<f32, highp> highp_f32mat2x3;$/;"	t	namespace:glm
highp_f32mat2x4	.\glm\fwd.hpp	/^	typedef tmat2x4<f32, highp> highp_f32mat2x4;$/;"	t	namespace:glm
highp_f32mat3	.\glm\fwd.hpp	/^	typedef highp_f32mat3x3 highp_f32mat3;$/;"	t	namespace:glm
highp_f32mat3x2	.\glm\fwd.hpp	/^	typedef tmat3x2<f32, highp> highp_f32mat3x2;$/;"	t	namespace:glm
highp_f32mat3x3	.\glm\fwd.hpp	/^	typedef tmat3x3<f32, highp> highp_f32mat3x3;$/;"	t	namespace:glm
highp_f32mat3x4	.\glm\fwd.hpp	/^	typedef tmat3x4<f32, highp> highp_f32mat3x4;$/;"	t	namespace:glm
highp_f32mat4	.\glm\fwd.hpp	/^	typedef highp_f32mat4x4 highp_f32mat4;$/;"	t	namespace:glm
highp_f32mat4x2	.\glm\fwd.hpp	/^	typedef tmat4x2<f32, highp> highp_f32mat4x2;$/;"	t	namespace:glm
highp_f32mat4x3	.\glm\fwd.hpp	/^	typedef tmat4x3<f32, highp> highp_f32mat4x3;$/;"	t	namespace:glm
highp_f32mat4x4	.\glm\fwd.hpp	/^	typedef tmat4x4<f32, highp> highp_f32mat4x4;$/;"	t	namespace:glm
highp_f32quat	.\glm\fwd.hpp	/^	typedef tquat<f32, highp> highp_f32quat;$/;"	t	namespace:glm
highp_f32vec1	.\glm\fwd.hpp	/^	typedef tvec1<f32, highp> highp_f32vec1;$/;"	t	namespace:glm
highp_f32vec2	.\glm\fwd.hpp	/^	typedef tvec2<f32, highp> highp_f32vec2;$/;"	t	namespace:glm
highp_f32vec3	.\glm\fwd.hpp	/^	typedef tvec3<f32, highp> highp_f32vec3;$/;"	t	namespace:glm
highp_f32vec4	.\glm\fwd.hpp	/^	typedef tvec4<f32, highp> highp_f32vec4;$/;"	t	namespace:glm
highp_f64	.\glm\fwd.hpp	/^	typedef float64 highp_f64;$/;"	t	namespace:glm
highp_f64mat2	.\glm\fwd.hpp	/^	typedef highp_f64mat2x2 highp_f64mat2;$/;"	t	namespace:glm
highp_f64mat2x2	.\glm\fwd.hpp	/^	typedef tmat2x2<f64, highp> highp_f64mat2x2;$/;"	t	namespace:glm
highp_f64mat2x3	.\glm\fwd.hpp	/^	typedef tmat2x3<f64, highp> highp_f64mat2x3;$/;"	t	namespace:glm
highp_f64mat2x4	.\glm\fwd.hpp	/^	typedef tmat2x4<f64, highp> highp_f64mat2x4;$/;"	t	namespace:glm
highp_f64mat3	.\glm\fwd.hpp	/^	typedef highp_f64mat3x3 highp_f64mat3;$/;"	t	namespace:glm
highp_f64mat3x2	.\glm\fwd.hpp	/^	typedef tmat3x2<f64, highp> highp_f64mat3x2;$/;"	t	namespace:glm
highp_f64mat3x3	.\glm\fwd.hpp	/^	typedef tmat3x3<f64, highp> highp_f64mat3x3;$/;"	t	namespace:glm
highp_f64mat3x4	.\glm\fwd.hpp	/^	typedef tmat3x4<f64, highp> highp_f64mat3x4;$/;"	t	namespace:glm
highp_f64mat4	.\glm\fwd.hpp	/^	typedef highp_f64mat4x4 highp_f64mat4;$/;"	t	namespace:glm
highp_f64mat4x2	.\glm\fwd.hpp	/^	typedef tmat4x2<f64, highp> highp_f64mat4x2;$/;"	t	namespace:glm
highp_f64mat4x3	.\glm\fwd.hpp	/^	typedef tmat4x3<f64, highp> highp_f64mat4x3;$/;"	t	namespace:glm
highp_f64mat4x4	.\glm\fwd.hpp	/^	typedef tmat4x4<f64, highp> highp_f64mat4x4;$/;"	t	namespace:glm
highp_f64quat	.\glm\fwd.hpp	/^	typedef tquat<f64, highp> highp_f64quat;$/;"	t	namespace:glm
highp_f64vec1	.\glm\fwd.hpp	/^	typedef tvec1<f64, highp> highp_f64vec1;$/;"	t	namespace:glm
highp_f64vec2	.\glm\fwd.hpp	/^	typedef tvec2<f64, highp> highp_f64vec2;$/;"	t	namespace:glm
highp_f64vec3	.\glm\fwd.hpp	/^	typedef tvec3<f64, highp> highp_f64vec3;$/;"	t	namespace:glm
highp_f64vec4	.\glm\fwd.hpp	/^	typedef tvec4<f64, highp> highp_f64vec4;$/;"	t	namespace:glm
highp_fdualquat	.\glm\gtx\dual_quaternion.hpp	/^	typedef tdualquat<float, highp>		highp_fdualquat;$/;"	t	namespace:glm
highp_float	.\glm\detail\type_float.hpp	/^	typedef highp_float_t		highp_float;$/;"	t	namespace:glm
highp_float32	.\glm\fwd.hpp	/^	typedef detail::float32 highp_float32;$/;"	t	namespace:glm
highp_float32_t	.\glm\fwd.hpp	/^	typedef detail::float32 highp_float32_t;$/;"	t	namespace:glm
highp_float64	.\glm\fwd.hpp	/^	typedef detail::float64 highp_float64;$/;"	t	namespace:glm
highp_float64_t	.\glm\fwd.hpp	/^	typedef detail::float64 highp_float64_t;$/;"	t	namespace:glm
highp_float_t	.\glm\detail\type_float.hpp	/^	typedef double				highp_float_t;$/;"	t	namespace:glm
highp_fmat2	.\glm\fwd.hpp	/^	typedef highp_fmat2x2 highp_fmat2;$/;"	t	namespace:glm
highp_fmat2x2	.\glm\fwd.hpp	/^	typedef tmat2x2<f32, highp> highp_fmat2x2;$/;"	t	namespace:glm
highp_fmat2x3	.\glm\fwd.hpp	/^	typedef tmat2x3<f32, highp> highp_fmat2x3;$/;"	t	namespace:glm
highp_fmat2x4	.\glm\fwd.hpp	/^	typedef tmat2x4<f32, highp> highp_fmat2x4;$/;"	t	namespace:glm
highp_fmat3	.\glm\fwd.hpp	/^	typedef highp_fmat3x3 highp_fmat3;$/;"	t	namespace:glm
highp_fmat3x2	.\glm\fwd.hpp	/^	typedef tmat3x2<f32, highp> highp_fmat3x2;$/;"	t	namespace:glm
highp_fmat3x3	.\glm\fwd.hpp	/^	typedef tmat3x3<f32, highp> highp_fmat3x3;$/;"	t	namespace:glm
highp_fmat3x4	.\glm\fwd.hpp	/^	typedef tmat3x4<f32, highp> highp_fmat3x4;$/;"	t	namespace:glm
highp_fmat4	.\glm\fwd.hpp	/^	typedef highp_fmat4x4 highp_fmat4;$/;"	t	namespace:glm
highp_fmat4x2	.\glm\fwd.hpp	/^	typedef tmat4x2<f32, highp> highp_fmat4x2;$/;"	t	namespace:glm
highp_fmat4x3	.\glm\fwd.hpp	/^	typedef tmat4x3<f32, highp> highp_fmat4x3;$/;"	t	namespace:glm
highp_fmat4x4	.\glm\fwd.hpp	/^	typedef tmat4x4<f32, highp> highp_fmat4x4;$/;"	t	namespace:glm
highp_fquat	.\glm\fwd.hpp	/^	typedef highp_quat			highp_fquat;$/;"	t	namespace:glm
highp_fvec1	.\glm\fwd.hpp	/^	typedef tvec1<float, highp> highp_fvec1;$/;"	t	namespace:glm
highp_fvec2	.\glm\fwd.hpp	/^	typedef tvec2<float, highp> highp_fvec2;$/;"	t	namespace:glm
highp_fvec3	.\glm\fwd.hpp	/^	typedef tvec3<float, highp> highp_fvec3;$/;"	t	namespace:glm
highp_fvec4	.\glm\fwd.hpp	/^	typedef tvec4<float, highp> highp_fvec4;$/;"	t	namespace:glm
highp_i16	.\glm\fwd.hpp	/^	typedef detail::int16 highp_i16;$/;"	t	namespace:glm
highp_i16	.\glm\gtc\type_precision.hpp	/^	typedef detail::int16 highp_i16;$/;"	t	namespace:glm
highp_i16vec1	.\glm\fwd.hpp	/^	typedef tvec1<i16, highp>		highp_i16vec1;$/;"	t	namespace:glm
highp_i16vec2	.\glm\fwd.hpp	/^	typedef tvec2<i16, highp>		highp_i16vec2;$/;"	t	namespace:glm
highp_i16vec3	.\glm\fwd.hpp	/^	typedef tvec3<i16, highp>		highp_i16vec3;$/;"	t	namespace:glm
highp_i16vec4	.\glm\fwd.hpp	/^	typedef tvec4<i16, highp>		highp_i16vec4;$/;"	t	namespace:glm
highp_i32	.\glm\fwd.hpp	/^	typedef detail::int32 highp_i32;$/;"	t	namespace:glm
highp_i32	.\glm\gtc\type_precision.hpp	/^	typedef detail::int32 highp_i32;$/;"	t	namespace:glm
highp_i32vec1	.\glm\fwd.hpp	/^	typedef tvec1<i32, highp>		highp_i32vec1;$/;"	t	namespace:glm
highp_i32vec2	.\glm\fwd.hpp	/^	typedef tvec2<i32, highp>		highp_i32vec2;$/;"	t	namespace:glm
highp_i32vec3	.\glm\fwd.hpp	/^	typedef tvec3<i32, highp>		highp_i32vec3;$/;"	t	namespace:glm
highp_i32vec4	.\glm\fwd.hpp	/^	typedef tvec4<i32, highp>		highp_i32vec4;$/;"	t	namespace:glm
highp_i64	.\glm\fwd.hpp	/^	typedef detail::int64 highp_i64;$/;"	t	namespace:glm
highp_i64	.\glm\gtc\type_precision.hpp	/^	typedef detail::int64 highp_i64;$/;"	t	namespace:glm
highp_i64vec1	.\glm\fwd.hpp	/^	typedef tvec1<i64, highp>		highp_i64vec1;$/;"	t	namespace:glm
highp_i64vec2	.\glm\fwd.hpp	/^	typedef tvec2<i64, highp>		highp_i64vec2;$/;"	t	namespace:glm
highp_i64vec3	.\glm\fwd.hpp	/^	typedef tvec3<i64, highp>		highp_i64vec3;$/;"	t	namespace:glm
highp_i64vec4	.\glm\fwd.hpp	/^	typedef tvec4<i64, highp>		highp_i64vec4;$/;"	t	namespace:glm
highp_i8	.\glm\fwd.hpp	/^	typedef detail::int8 highp_i8;$/;"	t	namespace:glm
highp_i8	.\glm\gtc\type_precision.hpp	/^	typedef detail::int8 highp_i8;$/;"	t	namespace:glm
highp_i8vec1	.\glm\fwd.hpp	/^	typedef tvec1<i8, highp> highp_i8vec1;$/;"	t	namespace:glm
highp_i8vec2	.\glm\fwd.hpp	/^	typedef tvec2<i8, highp> highp_i8vec2;$/;"	t	namespace:glm
highp_i8vec3	.\glm\fwd.hpp	/^	typedef tvec3<i8, highp> highp_i8vec3;$/;"	t	namespace:glm
highp_i8vec4	.\glm\fwd.hpp	/^	typedef tvec4<i8, highp> highp_i8vec4;$/;"	t	namespace:glm
highp_imat2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x2<int, highp>				highp_imat2;$/;"	t	namespace:glm
highp_imat2x2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x2<int, highp>				highp_imat2x2;$/;"	t	namespace:glm
highp_imat2x3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x3<int, highp>				highp_imat2x3;$/;"	t	namespace:glm
highp_imat2x4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x4<int, highp>				highp_imat2x4;$/;"	t	namespace:glm
highp_imat3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x3<int, highp>				highp_imat3;$/;"	t	namespace:glm
highp_imat3x2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x2<int, highp>				highp_imat3x2;$/;"	t	namespace:glm
highp_imat3x3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x3<int, highp>				highp_imat3x3;$/;"	t	namespace:glm
highp_imat3x4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x4<int, highp>				highp_imat3x4;$/;"	t	namespace:glm
highp_imat4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x4<int, highp>				highp_imat4;$/;"	t	namespace:glm
highp_imat4x2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x2<int, highp>				highp_imat4x2;$/;"	t	namespace:glm
highp_imat4x3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x3<int, highp>				highp_imat4x3;$/;"	t	namespace:glm
highp_imat4x4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x4<int, highp>				highp_imat4x4;$/;"	t	namespace:glm
highp_int	.\glm\detail\type_int.hpp	/^	typedef detail::highp_int_t				highp_int;$/;"	t	namespace:glm
highp_int16	.\glm\fwd.hpp	/^	typedef detail::int16 highp_int16;$/;"	t	namespace:glm
highp_int16	.\glm\gtc\type_precision.hpp	/^	typedef detail::int16 highp_int16;$/;"	t	namespace:glm
highp_int16_t	.\glm\fwd.hpp	/^	typedef detail::int16 highp_int16_t;$/;"	t	namespace:glm
highp_int16_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::int16 highp_int16_t;$/;"	t	namespace:glm
highp_int32	.\glm\fwd.hpp	/^	typedef detail::int32 highp_int32;$/;"	t	namespace:glm
highp_int32	.\glm\gtc\type_precision.hpp	/^	typedef detail::int32 highp_int32;$/;"	t	namespace:glm
highp_int32_t	.\glm\fwd.hpp	/^	typedef detail::int32 highp_int32_t;$/;"	t	namespace:glm
highp_int32_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::int32 highp_int32_t;$/;"	t	namespace:glm
highp_int64	.\glm\fwd.hpp	/^	typedef detail::int64 highp_int64;$/;"	t	namespace:glm
highp_int64	.\glm\gtc\type_precision.hpp	/^	typedef detail::int64 highp_int64;$/;"	t	namespace:glm
highp_int64_t	.\glm\fwd.hpp	/^	typedef detail::int64 highp_int64_t;$/;"	t	namespace:glm
highp_int64_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::int64 highp_int64_t;$/;"	t	namespace:glm
highp_int8	.\glm\fwd.hpp	/^	typedef detail::int8 highp_int8;$/;"	t	namespace:glm
highp_int8	.\glm\gtc\type_precision.hpp	/^	typedef detail::int8 highp_int8;$/;"	t	namespace:glm
highp_int8_t	.\glm\fwd.hpp	/^	typedef detail::int8 highp_int8_t;$/;"	t	namespace:glm
highp_int8_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::int8 highp_int8_t;$/;"	t	namespace:glm
highp_int_t	.\glm\detail\type_int.hpp	/^	typedef signed int						highp_int_t;$/;"	t	namespace:glm::detail
highp_ivec1	.\glm\gtc\vec1.hpp	/^	typedef highp_ivec1_t			highp_ivec1;$/;"	t	namespace:glm
highp_ivec1_t	.\glm\detail\type_vec.hpp	/^	typedef tvec1<int, highp>		highp_ivec1_t;$/;"	t	namespace:glm
highp_ivec2	.\glm\detail\type_vec.hpp	/^	typedef tvec2<int, highp>		highp_ivec2;$/;"	t	namespace:glm
highp_ivec3	.\glm\detail\type_vec.hpp	/^	typedef tvec3<int, highp>		highp_ivec3;$/;"	t	namespace:glm
highp_ivec4	.\glm\detail\type_vec.hpp	/^	typedef tvec4<int, highp>		highp_ivec4;$/;"	t	namespace:glm
highp_mat2	.\glm\detail\type_mat.hpp	/^	typedef tmat2x2<float, highp>		highp_mat2;$/;"	t	namespace:glm
highp_mat2	.\glm\mat2x2.hpp	/^	typedef tmat2x2<float, highp>		highp_mat2;$/;"	t	namespace:glm
highp_mat2x2	.\glm\detail\type_mat.hpp	/^	typedef tmat2x2<float, highp>		highp_mat2x2;$/;"	t	namespace:glm
highp_mat2x2	.\glm\mat2x2.hpp	/^	typedef tmat2x2<float, highp>		highp_mat2x2;$/;"	t	namespace:glm
highp_mat2x3	.\glm\detail\type_mat.hpp	/^	typedef tmat2x3<float, highp>		highp_mat2x3;$/;"	t	namespace:glm
highp_mat2x3	.\glm\mat2x3.hpp	/^	typedef tmat2x3<float, highp>		highp_mat2x3;$/;"	t	namespace:glm
highp_mat2x4	.\glm\detail\type_mat.hpp	/^	typedef tmat2x4<float, highp>		highp_mat2x4;$/;"	t	namespace:glm
highp_mat2x4	.\glm\mat2x4.hpp	/^	typedef tmat2x4<float, highp>		highp_mat2x4;$/;"	t	namespace:glm
highp_mat3	.\glm\detail\type_mat.hpp	/^	typedef tmat3x3<float, highp>		highp_mat3;$/;"	t	namespace:glm
highp_mat3	.\glm\mat3x3.hpp	/^	typedef tmat3x3<float, highp>		highp_mat3;$/;"	t	namespace:glm
highp_mat3x2	.\glm\detail\type_mat.hpp	/^	typedef tmat3x2<float, highp>		highp_mat3x2;$/;"	t	namespace:glm
highp_mat3x2	.\glm\mat3x2.hpp	/^	typedef tmat3x2<float, highp>		highp_mat3x2;$/;"	t	namespace:glm
highp_mat3x3	.\glm\detail\type_mat.hpp	/^	typedef tmat3x3<float, highp>		highp_mat3x3;$/;"	t	namespace:glm
highp_mat3x3	.\glm\mat3x3.hpp	/^	typedef tmat3x3<float, highp>		highp_mat3x3;$/;"	t	namespace:glm
highp_mat3x4	.\glm\detail\type_mat.hpp	/^	typedef tmat3x4<float, highp>		highp_mat3x4;$/;"	t	namespace:glm
highp_mat3x4	.\glm\mat3x4.hpp	/^	typedef tmat3x4<float, highp>		highp_mat3x4;$/;"	t	namespace:glm
highp_mat4	.\glm\detail\type_mat.hpp	/^	typedef tmat4x4<float, highp>		highp_mat4;$/;"	t	namespace:glm
highp_mat4	.\glm\mat4x4.hpp	/^	typedef tmat4x4<float, highp>		highp_mat4;$/;"	t	namespace:glm
highp_mat4x2	.\glm\detail\type_mat.hpp	/^	typedef tmat4x2<float, highp>		highp_mat4x2;$/;"	t	namespace:glm
highp_mat4x2	.\glm\mat4x2.hpp	/^	typedef tmat4x2<float, highp>		highp_mat4x2;$/;"	t	namespace:glm
highp_mat4x3	.\glm\detail\type_mat.hpp	/^	typedef tmat4x3<float, highp>		highp_mat4x3;$/;"	t	namespace:glm
highp_mat4x3	.\glm\mat4x3.hpp	/^	typedef tmat4x3<float, highp>		highp_mat4x3;$/;"	t	namespace:glm
highp_mat4x4	.\glm\detail\type_mat.hpp	/^	typedef tmat4x4<float, highp>		highp_mat4x4;$/;"	t	namespace:glm
highp_mat4x4	.\glm\mat4x4.hpp	/^	typedef tmat4x4<float, highp>		highp_mat4x4;$/;"	t	namespace:glm
highp_quat	.\glm\fwd.hpp	/^	typedef tquat<float, highp>		highp_quat;$/;"	t	namespace:glm
highp_u16	.\glm\fwd.hpp	/^	typedef detail::uint16 highp_u16;$/;"	t	namespace:glm
highp_u16	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint16 highp_u16;$/;"	t	namespace:glm
highp_u16vec1	.\glm\fwd.hpp	/^	typedef tvec1<u16, highp>		highp_u16vec1;$/;"	t	namespace:glm
highp_u16vec2	.\glm\fwd.hpp	/^	typedef tvec2<u16, highp>		highp_u16vec2;$/;"	t	namespace:glm
highp_u16vec3	.\glm\fwd.hpp	/^	typedef tvec3<u16, highp>		highp_u16vec3;$/;"	t	namespace:glm
highp_u16vec4	.\glm\fwd.hpp	/^	typedef tvec4<u16, highp>		highp_u16vec4;$/;"	t	namespace:glm
highp_u32	.\glm\fwd.hpp	/^	typedef detail::uint32 highp_u32;$/;"	t	namespace:glm
highp_u32	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint32 highp_u32;$/;"	t	namespace:glm
highp_u32vec1	.\glm\fwd.hpp	/^	typedef tvec1<u32, highp>		highp_u32vec1;$/;"	t	namespace:glm
highp_u32vec2	.\glm\fwd.hpp	/^	typedef tvec2<u32, highp>		highp_u32vec2;$/;"	t	namespace:glm
highp_u32vec3	.\glm\fwd.hpp	/^	typedef tvec3<u32, highp>		highp_u32vec3;$/;"	t	namespace:glm
highp_u32vec4	.\glm\fwd.hpp	/^	typedef tvec4<u32, highp>		highp_u32vec4;$/;"	t	namespace:glm
highp_u64	.\glm\fwd.hpp	/^	typedef detail::uint64 highp_u64;$/;"	t	namespace:glm
highp_u64	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint64 highp_u64;$/;"	t	namespace:glm
highp_u64vec1	.\glm\fwd.hpp	/^	typedef tvec1<u64, highp>		highp_u64vec1;$/;"	t	namespace:glm
highp_u64vec2	.\glm\fwd.hpp	/^	typedef tvec2<u64, highp>		highp_u64vec2;$/;"	t	namespace:glm
highp_u64vec3	.\glm\fwd.hpp	/^	typedef tvec3<u64, highp>		highp_u64vec3;$/;"	t	namespace:glm
highp_u64vec4	.\glm\fwd.hpp	/^	typedef tvec4<u64, highp>		highp_u64vec4;$/;"	t	namespace:glm
highp_u8	.\glm\fwd.hpp	/^	typedef detail::uint8 highp_u8;$/;"	t	namespace:glm
highp_u8	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint8 highp_u8;$/;"	t	namespace:glm
highp_u8vec1	.\glm\fwd.hpp	/^	typedef tvec1<u8, highp> highp_u8vec1;$/;"	t	namespace:glm
highp_u8vec2	.\glm\fwd.hpp	/^	typedef tvec2<u8, highp> highp_u8vec2;$/;"	t	namespace:glm
highp_u8vec3	.\glm\fwd.hpp	/^	typedef tvec3<u8, highp> highp_u8vec3;$/;"	t	namespace:glm
highp_u8vec4	.\glm\fwd.hpp	/^	typedef tvec4<u8, highp> highp_u8vec4;$/;"	t	namespace:glm
highp_uint	.\glm\detail\type_int.hpp	/^	typedef detail::highp_uint_t			highp_uint;$/;"	t	namespace:glm
highp_uint16	.\glm\fwd.hpp	/^	typedef detail::uint16 highp_uint16;$/;"	t	namespace:glm
highp_uint16	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint16 highp_uint16;$/;"	t	namespace:glm
highp_uint16_t	.\glm\fwd.hpp	/^	typedef detail::uint16 highp_uint16_t;$/;"	t	namespace:glm
highp_uint16_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint16 highp_uint16_t;$/;"	t	namespace:glm
highp_uint32	.\glm\fwd.hpp	/^	typedef detail::uint32 highp_uint32;$/;"	t	namespace:glm
highp_uint32	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint32 highp_uint32;$/;"	t	namespace:glm
highp_uint32_t	.\glm\fwd.hpp	/^	typedef detail::uint32 highp_uint32_t;$/;"	t	namespace:glm
highp_uint32_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint32 highp_uint32_t;$/;"	t	namespace:glm
highp_uint64	.\glm\fwd.hpp	/^	typedef detail::uint64 highp_uint64;$/;"	t	namespace:glm
highp_uint64	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint64 highp_uint64;$/;"	t	namespace:glm
highp_uint64_t	.\glm\fwd.hpp	/^	typedef detail::uint64 highp_uint64_t;$/;"	t	namespace:glm
highp_uint64_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint64 highp_uint64_t;$/;"	t	namespace:glm
highp_uint8	.\glm\fwd.hpp	/^	typedef detail::uint8 highp_uint8;$/;"	t	namespace:glm
highp_uint8	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint8 highp_uint8;$/;"	t	namespace:glm
highp_uint8_t	.\glm\fwd.hpp	/^	typedef detail::uint8 highp_uint8_t;$/;"	t	namespace:glm
highp_uint8_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint8 highp_uint8_t;$/;"	t	namespace:glm
highp_uint_t	.\glm\detail\type_int.hpp	/^	typedef unsigned int					highp_uint_t;$/;"	t	namespace:glm::detail
highp_umat2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x2<uint, highp>				highp_umat2;	$/;"	t	namespace:glm
highp_umat2x2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x2<uint, highp>				highp_umat2x2;$/;"	t	namespace:glm
highp_umat2x3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x3<uint, highp>				highp_umat2x3;$/;"	t	namespace:glm
highp_umat2x4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x4<uint, highp>				highp_umat2x4;$/;"	t	namespace:glm
highp_umat3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x3<uint, highp>				highp_umat3;$/;"	t	namespace:glm
highp_umat3x2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x2<uint, highp>				highp_umat3x2;$/;"	t	namespace:glm
highp_umat3x3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x3<uint, highp>				highp_umat3x3;$/;"	t	namespace:glm
highp_umat3x4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x4<uint, highp>				highp_umat3x4;$/;"	t	namespace:glm
highp_umat4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x4<uint, highp>				highp_umat4;$/;"	t	namespace:glm
highp_umat4x2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x2<uint, highp>				highp_umat4x2;$/;"	t	namespace:glm
highp_umat4x3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x3<uint, highp>				highp_umat4x3;$/;"	t	namespace:glm
highp_umat4x4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x4<uint, highp>				highp_umat4x4;$/;"	t	namespace:glm
highp_uvec1	.\glm\gtc\vec1.hpp	/^	typedef highp_uvec1_t			highp_uvec1;$/;"	t	namespace:glm
highp_uvec1_t	.\glm\detail\type_vec.hpp	/^	typedef tvec1<uint, highp>		highp_uvec1_t;$/;"	t	namespace:glm
highp_uvec2	.\glm\detail\type_vec.hpp	/^	typedef tvec2<uint, highp>		highp_uvec2;$/;"	t	namespace:glm
highp_uvec3	.\glm\detail\type_vec.hpp	/^	typedef tvec3<uint, highp>		highp_uvec3;$/;"	t	namespace:glm
highp_uvec4	.\glm\detail\type_vec.hpp	/^	typedef tvec4<uint, highp>		highp_uvec4;$/;"	t	namespace:glm
highp_vec1	.\glm\fwd.hpp	/^	typedef tvec1<float, highp> highp_vec1;$/;"	t	namespace:glm
highp_vec1	.\glm\gtc\vec1.hpp	/^	typedef highp_vec1_t			highp_vec1;$/;"	t	namespace:glm
highp_vec1_t	.\glm\detail\type_vec.hpp	/^	typedef tvec1<float, highp>		highp_vec1_t;$/;"	t	namespace:glm
highp_vec2	.\glm\detail\type_vec.hpp	/^	typedef tvec2<float, highp>		highp_vec2;$/;"	t	namespace:glm
highp_vec2	.\glm\fwd.hpp	/^	typedef tvec2<float, highp> highp_vec2;$/;"	t	namespace:glm
highp_vec3	.\glm\detail\type_vec.hpp	/^	typedef tvec3<float, highp>		highp_vec3;$/;"	t	namespace:glm
highp_vec3	.\glm\fwd.hpp	/^	typedef tvec3<float, highp> highp_vec3;$/;"	t	namespace:glm
highp_vec4	.\glm\detail\type_vec.hpp	/^	typedef tvec4<float, highp>		highp_vec4;$/;"	t	namespace:glm
highp_vec4	.\glm\fwd.hpp	/^	typedef tvec4<float, highp> highp_vec4;$/;"	t	namespace:glm
i16	.\glm\fwd.hpp	/^	typedef detail::int16 i16;$/;"	t	namespace:glm
i16	.\glm\gtc\type_precision.hpp	/^	typedef detail::int16 i16;$/;"	t	namespace:glm
i16vec1	.\glm\fwd.hpp	/^	typedef highp_i16vec1			i16vec1;$/;"	t	namespace:glm
i16vec1	.\glm\fwd.hpp	/^	typedef lowp_i16vec1			i16vec1;$/;"	t	namespace:glm
i16vec1	.\glm\fwd.hpp	/^	typedef mediump_i16vec1			i16vec1;$/;"	t	namespace:glm
i16vec1	.\glm\gtc\type_precision.hpp	/^	typedef tvec1<i16, defaultp> i16vec1;$/;"	t	namespace:glm
i16vec2	.\glm\fwd.hpp	/^	typedef highp_i16vec2			i16vec2;$/;"	t	namespace:glm
i16vec2	.\glm\fwd.hpp	/^	typedef lowp_i16vec2			i16vec2;$/;"	t	namespace:glm
i16vec2	.\glm\fwd.hpp	/^	typedef mediump_i16vec2			i16vec2;$/;"	t	namespace:glm
i16vec2	.\glm\gtc\type_precision.hpp	/^	typedef tvec2<i16, defaultp> i16vec2;$/;"	t	namespace:glm
i16vec3	.\glm\fwd.hpp	/^	typedef highp_i16vec3			i16vec3;$/;"	t	namespace:glm
i16vec3	.\glm\fwd.hpp	/^	typedef lowp_i16vec3			i16vec3;$/;"	t	namespace:glm
i16vec3	.\glm\fwd.hpp	/^	typedef mediump_i16vec3			i16vec3;$/;"	t	namespace:glm
i16vec3	.\glm\gtc\type_precision.hpp	/^	typedef tvec3<i16, defaultp> i16vec3;$/;"	t	namespace:glm
i16vec4	.\glm\fwd.hpp	/^	typedef highp_i16vec4			i16vec4;$/;"	t	namespace:glm
i16vec4	.\glm\fwd.hpp	/^	typedef lowp_i16vec4			i16vec4;$/;"	t	namespace:glm
i16vec4	.\glm\fwd.hpp	/^	typedef mediump_i16vec4			i16vec4;$/;"	t	namespace:glm
i16vec4	.\glm\gtc\type_precision.hpp	/^	typedef tvec4<i16, defaultp> i16vec4;$/;"	t	namespace:glm
i32	.\glm\fwd.hpp	/^	typedef detail::int32 i32;$/;"	t	namespace:glm
i32	.\glm\gtc\type_precision.hpp	/^	typedef detail::int32 i32;$/;"	t	namespace:glm
i32vec1	.\glm\fwd.hpp	/^	typedef highp_i32vec1			i32vec1;$/;"	t	namespace:glm
i32vec1	.\glm\fwd.hpp	/^	typedef lowp_i32vec1			i32vec1;$/;"	t	namespace:glm
i32vec1	.\glm\fwd.hpp	/^	typedef mediump_i32vec1			i32vec1;$/;"	t	namespace:glm
i32vec1	.\glm\gtc\type_precision.hpp	/^	typedef tvec1<i32, defaultp> i32vec1;$/;"	t	namespace:glm
i32vec2	.\glm\fwd.hpp	/^	typedef highp_i32vec2			i32vec2;$/;"	t	namespace:glm
i32vec2	.\glm\fwd.hpp	/^	typedef lowp_i32vec2			i32vec2;$/;"	t	namespace:glm
i32vec2	.\glm\fwd.hpp	/^	typedef mediump_i32vec2			i32vec2;$/;"	t	namespace:glm
i32vec2	.\glm\gtc\type_precision.hpp	/^	typedef tvec2<i32, defaultp> i32vec2;$/;"	t	namespace:glm
i32vec3	.\glm\fwd.hpp	/^	typedef highp_i32vec3			i32vec3;$/;"	t	namespace:glm
i32vec3	.\glm\fwd.hpp	/^	typedef lowp_i32vec3			i32vec3;$/;"	t	namespace:glm
i32vec3	.\glm\fwd.hpp	/^	typedef mediump_i32vec3			i32vec3;$/;"	t	namespace:glm
i32vec3	.\glm\gtc\type_precision.hpp	/^	typedef tvec3<i32, defaultp> i32vec3;$/;"	t	namespace:glm
i32vec4	.\glm\fwd.hpp	/^	typedef highp_i32vec4			i32vec4;$/;"	t	namespace:glm
i32vec4	.\glm\fwd.hpp	/^	typedef lowp_i32vec4			i32vec4;$/;"	t	namespace:glm
i32vec4	.\glm\fwd.hpp	/^	typedef mediump_i32vec4			i32vec4;$/;"	t	namespace:glm
i32vec4	.\glm\gtc\type_precision.hpp	/^	typedef tvec4<i32, defaultp> i32vec4;$/;"	t	namespace:glm
i64	.\glm\fwd.hpp	/^	typedef detail::int64 i64;$/;"	t	namespace:glm
i64	.\glm\gtc\type_precision.hpp	/^	typedef detail::int64 i64;$/;"	t	namespace:glm
i64vec1	.\glm\fwd.hpp	/^	typedef highp_i64vec1			i64vec1;$/;"	t	namespace:glm
i64vec1	.\glm\fwd.hpp	/^	typedef lowp_i64vec1			i64vec1;$/;"	t	namespace:glm
i64vec1	.\glm\fwd.hpp	/^	typedef mediump_i64vec1			i64vec1;$/;"	t	namespace:glm
i64vec1	.\glm\gtc\type_precision.hpp	/^	typedef tvec1<i64, defaultp> i64vec1;$/;"	t	namespace:glm
i64vec2	.\glm\fwd.hpp	/^	typedef highp_i64vec2			i64vec2;$/;"	t	namespace:glm
i64vec2	.\glm\fwd.hpp	/^	typedef lowp_i64vec2			i64vec2;$/;"	t	namespace:glm
i64vec2	.\glm\fwd.hpp	/^	typedef mediump_i64vec2			i64vec2;$/;"	t	namespace:glm
i64vec2	.\glm\gtc\type_precision.hpp	/^	typedef tvec2<i64, defaultp> i64vec2;$/;"	t	namespace:glm
i64vec3	.\glm\fwd.hpp	/^	typedef highp_i64vec3			i64vec3;$/;"	t	namespace:glm
i64vec3	.\glm\fwd.hpp	/^	typedef lowp_i64vec3			i64vec3;$/;"	t	namespace:glm
i64vec3	.\glm\fwd.hpp	/^	typedef mediump_i64vec3			i64vec3;$/;"	t	namespace:glm
i64vec3	.\glm\gtc\type_precision.hpp	/^	typedef tvec3<i64, defaultp> i64vec3;$/;"	t	namespace:glm
i64vec4	.\glm\fwd.hpp	/^	typedef highp_i64vec4			i64vec4;$/;"	t	namespace:glm
i64vec4	.\glm\fwd.hpp	/^	typedef lowp_i64vec4			i64vec4;$/;"	t	namespace:glm
i64vec4	.\glm\fwd.hpp	/^	typedef mediump_i64vec4			i64vec4;$/;"	t	namespace:glm
i64vec4	.\glm\gtc\type_precision.hpp	/^	typedef tvec4<i64, defaultp> i64vec4;$/;"	t	namespace:glm
i8	.\glm\fwd.hpp	/^	typedef detail::int8 i8;$/;"	t	namespace:glm
i8	.\glm\gtc\type_precision.hpp	/^	typedef detail::int8 i8;$/;"	t	namespace:glm
i8vec1	.\glm\fwd.hpp	/^	typedef highp_i8vec1			i8vec1;$/;"	t	namespace:glm
i8vec1	.\glm\fwd.hpp	/^	typedef lowp_i8vec1				i8vec1;$/;"	t	namespace:glm
i8vec1	.\glm\fwd.hpp	/^	typedef mediump_i8vec1			i8vec1;$/;"	t	namespace:glm
i8vec1	.\glm\gtc\type_precision.hpp	/^	typedef tvec1<i8, defaultp> i8vec1;$/;"	t	namespace:glm
i8vec2	.\glm\fwd.hpp	/^	typedef highp_i8vec2			i8vec2;$/;"	t	namespace:glm
i8vec2	.\glm\fwd.hpp	/^	typedef lowp_i8vec2				i8vec2;$/;"	t	namespace:glm
i8vec2	.\glm\fwd.hpp	/^	typedef mediump_i8vec2			i8vec2;$/;"	t	namespace:glm
i8vec2	.\glm\gtc\type_precision.hpp	/^	typedef tvec2<i8, defaultp> i8vec2;$/;"	t	namespace:glm
i8vec3	.\glm\fwd.hpp	/^	typedef highp_i8vec3			i8vec3;$/;"	t	namespace:glm
i8vec3	.\glm\fwd.hpp	/^	typedef lowp_i8vec3				i8vec3;$/;"	t	namespace:glm
i8vec3	.\glm\fwd.hpp	/^	typedef mediump_i8vec3			i8vec3;$/;"	t	namespace:glm
i8vec3	.\glm\gtc\type_precision.hpp	/^	typedef tvec3<i8, defaultp> i8vec3;$/;"	t	namespace:glm
i8vec4	.\glm\fwd.hpp	/^	typedef highp_i8vec4			i8vec4;$/;"	t	namespace:glm
i8vec4	.\glm\fwd.hpp	/^	typedef lowp_i8vec4				i8vec4;$/;"	t	namespace:glm
i8vec4	.\glm\fwd.hpp	/^	typedef mediump_i8vec4			i8vec4;	$/;"	t	namespace:glm
i8vec4	.\glm\gtc\type_precision.hpp	/^	typedef tvec4<i8, defaultp> i8vec4;$/;"	t	namespace:glm
id	.\glm\gtx\io.hpp	/^			static std::locale::id id;$/;"	m	class:glm::io::format_punct
id	.\src\Shader.h	/^  GLuint id() const { return _id; }$/;"	f	class:Shader
id	.\src\Texture.h	/^  GLuint id() const { return _id; }$/;"	f	class:Texture
imat2	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_imat2								imat2;$/;"	t	namespace:glm
imat2	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_imat2								imat2;$/;"	t	namespace:glm
imat2	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_imat2							imat2;$/;"	t	namespace:glm
imat2x2	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_imat2x2							imat2x2;$/;"	t	namespace:glm
imat2x2	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_imat2x2							imat2x2;$/;"	t	namespace:glm
imat2x2	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_imat2x2							imat2x2;$/;"	t	namespace:glm
imat2x3	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_imat2x3							imat2x3;$/;"	t	namespace:glm
imat2x3	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_imat2x3							imat2x3;$/;"	t	namespace:glm
imat2x3	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_imat2x3							imat2x3;$/;"	t	namespace:glm
imat2x4	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_imat2x4							imat2x4;$/;"	t	namespace:glm
imat2x4	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_imat2x4							imat2x4;$/;"	t	namespace:glm
imat2x4	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_imat2x4							imat2x4;$/;"	t	namespace:glm
imat3	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_imat3								imat3;$/;"	t	namespace:glm
imat3	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_imat3								imat3;$/;"	t	namespace:glm
imat3	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_imat3							imat3;$/;"	t	namespace:glm
imat3x2	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_imat3x2							imat3x2;$/;"	t	namespace:glm
imat3x2	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_imat3x2							imat3x2;$/;"	t	namespace:glm
imat3x2	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_imat3x2							imat3x2;$/;"	t	namespace:glm
imat3x3	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_imat3x3							imat3x3;$/;"	t	namespace:glm
imat3x3	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_imat3x3							imat3x3;$/;"	t	namespace:glm
imat3x3	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_imat3x3							imat3x3;$/;"	t	namespace:glm
imat3x4	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_imat3x4							imat3x4;$/;"	t	namespace:glm
imat3x4	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_imat3x4							imat3x4;$/;"	t	namespace:glm
imat3x4	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_imat3x4							imat3x4;$/;"	t	namespace:glm
imat4	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_imat4								imat4;$/;"	t	namespace:glm
imat4	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_imat4								imat4;$/;"	t	namespace:glm
imat4	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_imat4							imat4;$/;"	t	namespace:glm
imat4x2	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_imat4x2							imat4x2;$/;"	t	namespace:glm
imat4x2	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_imat4x2							imat4x2;$/;"	t	namespace:glm
imat4x2	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_imat4x2							imat4x2;$/;"	t	namespace:glm
imat4x3	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_imat4x3							imat4x3;$/;"	t	namespace:glm
imat4x3	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_imat4x3							imat4x3;$/;"	t	namespace:glm
imat4x3	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_imat4x3							imat4x3;$/;"	t	namespace:glm
imat4x4	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_imat4x4							imat4x4;$/;"	t	namespace:glm
imat4x4	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_imat4x4							imat4x4;$/;"	t	namespace:glm
imat4x4	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_imat4x4							imat4x4;$/;"	t	namespace:glm
indent	.\tinyxml\tinyxml.h	/^	TIXML_STRING indent;$/;"	m	class:TiXmlPrinter
init	.\tinyxml\tinystr.h	/^	void init(size_type sz) { init(sz, sz); }$/;"	f	class:TiXmlString
init	.\tinyxml\tinystr.h	/^	void init(size_type sz, size_type cap)$/;"	f	class:TiXmlString
initializationStatus	.\src\AudioDevice.h	/^  bool initializationStatus() const { return _initializationStatus; }$/;"	f	class:AudioDevice
initializationStatus	.\src\GraphicsDevice.h	/^  bool initializationStatus() const { return _initializationStatus; }$/;"	f	class:GraphicsDevice
instance	.\src\AudioEngine.h	/^  static AudioEngine* instance()$/;"	f	class:AudioEngine
instance	.\src\GraphicEngine.h	/^  static GraphicEngine* instance()$/;"	f	class:GraphicEngine
instance	.\src\InputHandler.h	/^  static InputHandler* instance()$/;"	f	class:InputHandler
instance	.\src\XMLParser.h	/^  static XMLParser* instance()$/;"	f	class:XMLParser
int1	.\glm\gtx\compatibility.hpp	/^	typedef int							int1;			\/\/!< \\brief integer vector with 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int16	.\glm\detail\type_int.hpp	/^		typedef std::int16_t				int16;$/;"	t	namespace:glm::detail
int16	.\glm\detail\type_int.hpp	/^	typedef detail::int16					int16;$/;"	t	namespace:glm
int16	.\glm\fwd.hpp	/^	typedef detail::int16 int16;$/;"	t	namespace:glm
int16	.\glm\gtc\type_precision.hpp	/^	typedef detail::int16 int16;$/;"	t	namespace:glm
int1x1	.\glm\gtx\compatibility.hpp	/^	typedef int							int1x1;			\/\/!< \\brief integer matrix with 1 component. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int2	.\glm\gtx\compatibility.hpp	/^	typedef tvec2<int, highp>			int2;			\/\/!< \\brief integer vector with 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int2x2	.\glm\gtx\compatibility.hpp	/^	typedef tmat2x2<int, highp>		int2x2;			\/\/!< \\brief integer matrix with 2 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int2x3	.\glm\gtx\compatibility.hpp	/^	typedef tmat2x3<int, highp>		int2x3;			\/\/!< \\brief integer matrix with 2 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int2x4	.\glm\gtx\compatibility.hpp	/^	typedef tmat2x4<int, highp>		int2x4;			\/\/!< \\brief integer matrix with 2 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int3	.\glm\gtx\compatibility.hpp	/^	typedef tvec3<int, highp>			int3;			\/\/!< \\brief integer vector with 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int32	.\glm\detail\type_int.hpp	/^		typedef std::int32_t				int32;$/;"	t	namespace:glm::detail
int32	.\glm\detail\type_int.hpp	/^	typedef detail::int32					int32;$/;"	t	namespace:glm
int32	.\glm\fwd.hpp	/^	typedef detail::int32 int32;$/;"	t	namespace:glm
int32	.\glm\gtc\type_precision.hpp	/^	typedef detail::int32 int32;$/;"	t	namespace:glm
int3x2	.\glm\gtx\compatibility.hpp	/^	typedef tmat3x2<int, highp>		int3x2;			\/\/!< \\brief integer matrix with 3 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int3x3	.\glm\gtx\compatibility.hpp	/^	typedef tmat3x3<int, highp>		int3x3;			\/\/!< \\brief integer matrix with 3 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int3x4	.\glm\gtx\compatibility.hpp	/^	typedef tmat3x4<int, highp>		int3x4;			\/\/!< \\brief integer matrix with 3 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int4	.\glm\gtx\compatibility.hpp	/^	typedef tvec4<int, highp>			int4;			\/\/!< \\brief integer vector with 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int4x2	.\glm\gtx\compatibility.hpp	/^	typedef tmat4x2<int, highp>		int4x2;			\/\/!< \\brief integer matrix with 4 x 2 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int4x3	.\glm\gtx\compatibility.hpp	/^	typedef tmat4x3<int, highp>		int4x3;			\/\/!< \\brief integer matrix with 4 x 3 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int4x4	.\glm\gtx\compatibility.hpp	/^	typedef tmat4x4<int, highp>		int4x4;			\/\/!< \\brief integer matrix with 4 x 4 components. (From GLM_GTX_compatibility extension)$/;"	t	namespace:glm
int64	.\glm\detail\type_int.hpp	/^		typedef std::int64_t				int64;$/;"	t	namespace:glm::detail
int64	.\glm\detail\type_int.hpp	/^	typedef detail::int64					int64;$/;"	t	namespace:glm
int64	.\glm\fwd.hpp	/^	typedef detail::int64 int64;$/;"	t	namespace:glm
int64	.\glm\gtc\type_precision.hpp	/^	typedef detail::int64 int64;$/;"	t	namespace:glm
int8	.\glm\detail\type_int.hpp	/^		typedef std::int8_t					int8;$/;"	t	namespace:glm::detail
int8	.\glm\detail\type_int.hpp	/^	typedef detail::int8					int8;$/;"	t	namespace:glm
int8	.\glm\fwd.hpp	/^	typedef detail::int8 int8;$/;"	t	namespace:glm
int8	.\glm\gtc\type_precision.hpp	/^	typedef detail::int8 int8;$/;"	t	namespace:glm
int_t	.\glm\detail\type_int.hpp	/^	typedef highp_int					int_t;$/;"	t	namespace:glm
int_t	.\glm\detail\type_int.hpp	/^	typedef lowp_int					int_t;$/;"	t	namespace:glm
int_t	.\glm\detail\type_int.hpp	/^	typedef mediump_int					int_t;$/;"	t	namespace:glm
io	.\glm\gtx\io.hpp	/^	namespace io$/;"	n	namespace:glm
is_aligned	.\glm\detail\precision.hpp	/^		struct is_aligned<glm::aligned_highp>$/;"	s	namespace:glm::detail
is_aligned	.\glm\detail\precision.hpp	/^		struct is_aligned<glm::aligned_lowp>$/;"	s	namespace:glm::detail
is_aligned	.\glm\detail\precision.hpp	/^		struct is_aligned<glm::aligned_mediump>$/;"	s	namespace:glm::detail
is_aligned	.\glm\detail\precision.hpp	/^	struct is_aligned$/;"	s	namespace:glm::detail
is_mat	.\glm\gtx\type_trait.hpp	/^		static bool const is_mat = false;$/;"	m	struct:glm::type
is_mat	.\glm\gtx\type_trait.hpp	/^		static bool const is_mat = true;$/;"	m	struct:glm::type
is_quat	.\glm\gtx\type_trait.hpp	/^		static bool const is_quat = false;$/;"	m	struct:glm::type
is_quat	.\glm\gtx\type_trait.hpp	/^		static bool const is_quat = true;$/;"	m	struct:glm::type
is_vec	.\glm\gtx\type_trait.hpp	/^		static bool const is_vec = false;$/;"	m	struct:glm::type
is_vec	.\glm\gtx\type_trait.hpp	/^		static bool const is_vec = true;$/;"	m	struct:glm::type
is_vector	.\glm\detail\type_gentype.hpp	/^	bool genType<VALTYPE, TYPE>::is_vector()$/;"	f	class:glm::detail::genType
isfinite	.\glm\gtx\compatibility.hpp	29;"	d
isinf	.\glm\detail\_fixes.hpp	23;"	d
isnan	.\glm\detail\_fixes.hpp	18;"	d
ivec1	.\glm\gtc\vec1.hpp	/^	typedef highp_ivec1			ivec1;$/;"	t	namespace:glm
ivec1	.\glm\gtc\vec1.hpp	/^	typedef lowp_ivec1			ivec1;$/;"	t	namespace:glm
ivec1	.\glm\gtc\vec1.hpp	/^	typedef mediump_ivec1		ivec1;$/;"	t	namespace:glm
ivec2	.\glm\detail\type_vec.hpp	/^	typedef highp_ivec2			ivec2;$/;"	t	namespace:glm
ivec2	.\glm\detail\type_vec.hpp	/^	typedef lowp_ivec2			ivec2;$/;"	t	namespace:glm
ivec2	.\glm\detail\type_vec.hpp	/^	typedef mediump_ivec2		ivec2;$/;"	t	namespace:glm
ivec3	.\glm\detail\type_vec.hpp	/^	typedef highp_ivec3			ivec3;$/;"	t	namespace:glm
ivec3	.\glm\detail\type_vec.hpp	/^	typedef lowp_ivec3			ivec3;$/;"	t	namespace:glm
ivec3	.\glm\detail\type_vec.hpp	/^	typedef mediump_ivec3		ivec3;$/;"	t	namespace:glm
ivec4	.\glm\detail\type_vec.hpp	/^	typedef highp_ivec4			ivec4;$/;"	t	namespace:glm
ivec4	.\glm\detail\type_vec.hpp	/^	typedef lowp_ivec4			ivec4;$/;"	t	namespace:glm
ivec4	.\glm\detail\type_vec.hpp	/^	typedef mediump_ivec4		ivec4;$/;"	t	namespace:glm
keyDown	.\src\InputHandler.cpp	/^bool InputHandler::keyDown(SDL_Scancode key) const$/;"	f	class:InputHandler
keyUp	.\src\InputHandler.cpp	/^bool InputHandler::keyUp(SDL_Scancode key) const$/;"	f	class:InputHandler
l00001	.\tinyxml\docs\tinystr_8h_source.html	/^<h1>tinystr.h<\/h1><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 <span class="comment">\/*<\/span>$/;"	a
l00001	.\tinyxml\docs\tinyxml_8h_source.html	/^<h1>tinyxml.h<\/h1><div class="fragment"><pre class="fragment"><a name="l00001"><\/a>00001 <span class="comment">\/*<\/span>$/;"	a
l00002	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00002"><\/a>00002 <span class="comment">www.sourceforge.net\/projects\/tinyxml<\/span>$/;"	a
l00002	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00002"><\/a>00002 <span class="comment">www.sourceforge.net\/projects\/tinyxml<\/span>$/;"	a
l00003	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00003"><\/a>00003 <span class="comment"><\/span>$/;"	a
l00003	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00003"><\/a>00003 <span class="comment">Original code by Lee Thomason (www.grinninglizard.com)<\/span>$/;"	a
l00004	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00004"><\/a>00004 <span class="comment">This software is provided &#39;as-is&#39;, without any express or implied<\/span>$/;"	a
l00004	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00004"><\/a>00004 <span class="comment"><\/span>$/;"	a
l00005	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00005"><\/a>00005 <span class="comment">warranty. In no event will the authors be held liable for any<\/span>$/;"	a
l00005	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00005"><\/a>00005 <span class="comment">This software is provided &#39;as-is&#39;, without any express or implied<\/span>$/;"	a
l00006	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00006"><\/a>00006 <span class="comment">damages arising from the use of this software.<\/span>$/;"	a
l00006	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00006"><\/a>00006 <span class="comment">warranty. In no event will the authors be held liable for any<\/span>$/;"	a
l00007	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00007"><\/a>00007 <span class="comment"><\/span>$/;"	a
l00007	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00007"><\/a>00007 <span class="comment">damages arising from the use of this software.<\/span>$/;"	a
l00008	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00008"><\/a>00008 <span class="comment">Permission is granted to anyone to use this software for any<\/span>$/;"	a
l00008	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00008"><\/a>00008 <span class="comment"><\/span>$/;"	a
l00009	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00009"><\/a>00009 <span class="comment">purpose, including commercial applications, and to alter it and<\/span>$/;"	a
l00009	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00009"><\/a>00009 <span class="comment">Permission is granted to anyone to use this software for any<\/span>$/;"	a
l00010	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00010"><\/a>00010 <span class="comment">redistribute it freely, subject to the following restrictions:<\/span>$/;"	a
l00010	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00010"><\/a>00010 <span class="comment">purpose, including commercial applications, and to alter it and<\/span>$/;"	a
l00011	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00011"><\/a>00011 <span class="comment"><\/span>$/;"	a
l00011	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00011"><\/a>00011 <span class="comment">redistribute it freely, subject to the following restrictions:<\/span>$/;"	a
l00012	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00012"><\/a>00012 <span class="comment">1. The origin of this software must not be misrepresented; you must<\/span>$/;"	a
l00012	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00012"><\/a>00012 <span class="comment"><\/span>$/;"	a
l00013	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00013"><\/a>00013 <span class="comment">not claim that you wrote the original software. If you use this<\/span>$/;"	a
l00013	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00013"><\/a>00013 <span class="comment">1. The origin of this software must not be misrepresented; you must<\/span>$/;"	a
l00014	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00014"><\/a>00014 <span class="comment">software in a product, an acknowledgment in the product documentation<\/span>$/;"	a
l00014	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00014"><\/a>00014 <span class="comment">not claim that you wrote the original software. If you use this<\/span>$/;"	a
l00015	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00015"><\/a>00015 <span class="comment">would be appreciated but is not required.<\/span>$/;"	a
l00015	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00015"><\/a>00015 <span class="comment">software in a product, an acknowledgment in the product documentation<\/span>$/;"	a
l00016	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00016"><\/a>00016 <span class="comment"><\/span>$/;"	a
l00016	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00016"><\/a>00016 <span class="comment">would be appreciated but is not required.<\/span>$/;"	a
l00017	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00017"><\/a>00017 <span class="comment">2. Altered source versions must be plainly marked as such, and<\/span>$/;"	a
l00017	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00017"><\/a>00017 <span class="comment"><\/span>$/;"	a
l00018	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00018"><\/a>00018 <span class="comment">must not be misrepresented as being the original software.<\/span>$/;"	a
l00018	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00018"><\/a>00018 <span class="comment">2. Altered source versions must be plainly marked as such, and<\/span>$/;"	a
l00019	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00019"><\/a>00019 <span class="comment"><\/span>$/;"	a
l00019	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00019"><\/a>00019 <span class="comment">must not be misrepresented as being the original software.<\/span>$/;"	a
l00020	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00020"><\/a>00020 <span class="comment">3. This notice may not be removed or altered from any source<\/span>$/;"	a
l00020	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00020"><\/a>00020 <span class="comment"><\/span>$/;"	a
l00021	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00021"><\/a>00021 <span class="comment">distribution.<\/span>$/;"	a
l00021	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00021"><\/a>00021 <span class="comment">3. This notice may not be removed or altered from any source<\/span>$/;"	a
l00022	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00022"><\/a>00022 <span class="comment">*\/<\/span>$/;"	a
l00022	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00022"><\/a>00022 <span class="comment">distribution.<\/span>$/;"	a
l00023	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00023"><\/a>00023 $/;"	a
l00023	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00023"><\/a>00023 <span class="comment">*\/<\/span>$/;"	a
l00024	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00024"><\/a>00024 $/;"	a
l00024	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00024"><\/a>00024 $/;"	a
l00025	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00025"><\/a>00025 <span class="preprocessor">#ifndef TIXML_USE_STL<\/span>$/;"	a
l00025	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00025"><\/a>00025 $/;"	a
l00026	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00026"><\/a>00026 <span class="preprocessor"><\/span>$/;"	a
l00026	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00026"><\/a>00026 <span class="preprocessor">#ifndef TINYXML_INCLUDED<\/span>$/;"	a
l00027	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00027"><\/a>00027 <span class="preprocessor">#ifndef TIXML_STRING_INCLUDED<\/span>$/;"	a
l00027	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00027"><\/a>00027 <span class="preprocessor"><\/span><span class="preprocessor">#define TINYXML_INCLUDED<\/span>$/;"	a
l00028	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00028"><\/a>00028 <span class="preprocessor"><\/span><span class="preprocessor">#define TIXML_STRING_INCLUDED<\/span>$/;"	a
l00028	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00028"><\/a>00028 <span class="preprocessor"><\/span>$/;"	a
l00029	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00029"><\/a>00029 <span class="preprocessor"><\/span>$/;"	a
l00029	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00029"><\/a>00029 <span class="preprocessor">#ifdef _MSC_VER<\/span>$/;"	a
l00030	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00030"><\/a>00030 <span class="preprocessor">#include &lt;assert.h&gt;<\/span>$/;"	a
l00030	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00030"><\/a>00030 <span class="preprocessor"><\/span><span class="preprocessor">#pragma warning( push )<\/span>$/;"	a
l00031	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00031"><\/a>00031 <span class="preprocessor">#include &lt;string.h&gt;<\/span>$/;"	a
l00031	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00031"><\/a>00031 <span class="preprocessor"><\/span><span class="preprocessor">#pragma warning( disable : 4530 )<\/span>$/;"	a
l00032	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00032"><\/a>00032 $/;"	a
l00032	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00032"><\/a>00032 <span class="preprocessor"><\/span><span class="preprocessor">#pragma warning( disable : 4786 )<\/span>$/;"	a
l00033	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00033"><\/a>00033 <span class="comment">\/*  The support for explicit isn&#39;t that universal, and it isn&#39;t really<\/span>$/;"	a
l00033	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00033"><\/a>00033 <span class="preprocessor"><\/span><span class="preprocessor">#endif<\/span>$/;"	a
l00034	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00034"><\/a>00034 <span class="comment">    required - it is used to check that the TiXmlString class isn&#39;t incorrectly<\/span>$/;"	a
l00034	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00034"><\/a>00034 <span class="preprocessor"><\/span>$/;"	a
l00035	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00035"><\/a>00035 <span class="comment">    used. Be nice to old compilers and macro it here:<\/span>$/;"	a
l00035	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00035"><\/a>00035 <span class="preprocessor">#include &lt;ctype.h&gt;<\/span>$/;"	a
l00036	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00036"><\/a>00036 <span class="comment">*\/<\/span>$/;"	a
l00036	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00036"><\/a>00036 <span class="preprocessor">#include &lt;stdio.h&gt;<\/span>$/;"	a
l00037	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00037"><\/a>00037 <span class="preprocessor">#if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200 )<\/span>$/;"	a
l00037	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00037"><\/a>00037 <span class="preprocessor">#include &lt;stdlib.h&gt;<\/span>$/;"	a
l00038	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00038"><\/a>00038 <span class="preprocessor"><\/span>    <span class="comment">\/\/ Microsoft visual studio, version 6 and higher.<\/span>$/;"	a
l00038	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00038"><\/a>00038 <span class="preprocessor">#include &lt;string.h&gt;<\/span>$/;"	a
l00039	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00039"><\/a>00039 <span class="preprocessor">    #define TIXML_EXPLICIT explicit<\/span>$/;"	a
l00039	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00039"><\/a>00039 <span class="preprocessor">#include &lt;assert.h&gt;<\/span>$/;"	a
l00040	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00040"><\/a>00040 <span class="preprocessor"><\/span><span class="preprocessor">#elif defined(__GNUC__) &amp;&amp; (__GNUC__ &gt;= 3 )<\/span>$/;"	a
l00040	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00040"><\/a>00040 $/;"	a
l00041	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00041"><\/a>00041 <span class="preprocessor"><\/span>    <span class="comment">\/\/ GCC version 3 and higher.s<\/span>$/;"	a
l00041	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00041"><\/a>00041 <span class="comment">\/\/ Help out windows:<\/span>$/;"	a
l00042	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00042"><\/a>00042 <span class="preprocessor">    #define TIXML_EXPLICIT explicit<\/span>$/;"	a
l00042	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00042"><\/a>00042 <span class="preprocessor">#if defined( _DEBUG ) &amp;&amp; !defined( DEBUG )<\/span>$/;"	a
l00043	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00043"><\/a>00043 <span class="preprocessor"><\/span><span class="preprocessor">#else<\/span>$/;"	a
l00043	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00043"><\/a>00043 <span class="preprocessor"><\/span><span class="preprocessor">#define DEBUG<\/span>$/;"	a
l00044	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00044"><\/a>00044 <span class="preprocessor"><\/span><span class="preprocessor">    #define TIXML_EXPLICIT<\/span>$/;"	a
l00044	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00044"><\/a>00044 <span class="preprocessor"><\/span><span class="preprocessor">#endif<\/span>$/;"	a
l00045	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00045"><\/a>00045 <span class="preprocessor"><\/span><span class="preprocessor">#endif<\/span>$/;"	a
l00045	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00045"><\/a>00045 <span class="preprocessor"><\/span>$/;"	a
l00046	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00046"><\/a>00046 <span class="preprocessor"><\/span>$/;"	a
l00046	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00046"><\/a>00046 <span class="preprocessor">#ifdef TIXML_USE_STL<\/span>$/;"	a
l00047	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00047"><\/a>00047 $/;"	a
l00047	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00047"><\/a>00047 <span class="preprocessor"><\/span><span class="preprocessor">    #include &lt;string&gt;<\/span>$/;"	a
l00048	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00048"><\/a>00048 <span class="comment">\/*<\/span>$/;"	a
l00048	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00048"><\/a>00048 <span class="preprocessor">    #include &lt;iostream&gt;<\/span>$/;"	a
l00049	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00049"><\/a>00049 <span class="comment">   TiXmlString is an emulation of a subset of the std::string template.<\/span>$/;"	a
l00049	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00049"><\/a>00049 <span class="preprocessor">    #include &lt;sstream&gt;<\/span>$/;"	a
l00050	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00050"><\/a>00050 <span class="comment">   Its purpose is to allow compiling TinyXML on compilers with no or poor STL support.<\/span>$/;"	a
l00050	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00050"><\/a>00050 <span class="preprocessor">    #define TIXML_STRING        std::string<\/span>$/;"	a
l00051	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00051"><\/a>00051 <span class="comment">   Only the member functions relevant to the TinyXML project have been implemented.<\/span>$/;"	a
l00051	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00051"><\/a>00051 <span class="preprocessor"><\/span><span class="preprocessor">#else<\/span>$/;"	a
l00052	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00052"><\/a>00052 <span class="comment">   The buffer allocation is made by a simplistic power of 2 like mechanism : if we increase<\/span>$/;"	a
l00052	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00052"><\/a>00052 <span class="preprocessor"><\/span><span class="preprocessor">    #include &quot;tinystr.h&quot;<\/span>$/;"	a
l00053	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00053"><\/a>00053 <span class="comment">   a string and there&#39;s no more room, we allocate a buffer twice as big as we need.<\/span>$/;"	a
l00053	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00053"><\/a>00053 <span class="preprocessor">    #define TIXML_STRING        TiXmlString<\/span>$/;"	a
l00054	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00054"><\/a>00054 <span class="comment">*\/<\/span>$/;"	a
l00054	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00054"><\/a>00054 <span class="preprocessor"><\/span><span class="preprocessor">#endif<\/span>$/;"	a
l00055	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00055"><\/a>00055 <span class="keyword">class <\/span>TiXmlString$/;"	a
l00055	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00055"><\/a>00055 <span class="preprocessor"><\/span>$/;"	a
l00056	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00056"><\/a>00056 {$/;"	a
l00056	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00056"><\/a>00056 <span class="comment">\/\/ Deprecated library function hell. Compilers want to use the<\/span>$/;"	a
l00057	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00057"><\/a>00057   <span class="keyword">public<\/span> :$/;"	a
l00057	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00057"><\/a>00057 <span class="comment">\/\/ new safe versions. This probably doesn&#39;t fully address the problem,<\/span>$/;"	a
l00058	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00058"><\/a>00058     <span class="comment">\/\/ The size type used<\/span>$/;"	a
l00058	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00058"><\/a>00058 <span class="comment">\/\/ but it gets closer. There are too many compilers for me to fully<\/span>$/;"	a
l00059	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00059"><\/a>00059     <span class="keyword">typedef<\/span> <span class="keywordtype">size_t<\/span> size_type;$/;"	a
l00059	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00059"><\/a>00059 <span class="comment">\/\/ test. If you get compilation troubles, undefine TIXML_SAFE<\/span>$/;"	a
l00060	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00060"><\/a>00060 $/;"	a
l00060	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00060"><\/a>00060 <span class="preprocessor">#define TIXML_SAFE<\/span>$/;"	a
l00061	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00061"><\/a>00061     <span class="comment">\/\/ Error value for find primitive<\/span>$/;"	a
l00061	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00061"><\/a>00061 <span class="preprocessor"><\/span>$/;"	a
l00062	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00062"><\/a>00062     <span class="keyword">static<\/span> <span class="keyword">const<\/span> size_type npos; <span class="comment">\/\/ = -1;<\/span>$/;"	a
l00062	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00062"><\/a>00062 <span class="preprocessor">#ifdef TIXML_SAFE<\/span>$/;"	a
l00063	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00063"><\/a>00063 $/;"	a
l00063	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00063"><\/a>00063 <span class="preprocessor"><\/span><span class="preprocessor">    #if defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1400 )<\/span>$/;"	a
l00064	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00064"><\/a>00064 $/;"	a
l00064	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00064"><\/a>00064 <span class="preprocessor"><\/span>        <span class="comment">\/\/ Microsoft visual studio, version 2005 and higher.<\/span>$/;"	a
l00065	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00065"><\/a>00065     <span class="comment">\/\/ TiXmlString empty constructor<\/span>$/;"	a
l00065	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00065"><\/a>00065 <span class="preprocessor">        #define TIXML_SNPRINTF _snprintf_s<\/span>$/;"	a
l00066	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00066"><\/a>00066     TiXmlString () : rep_(&amp;nullrep_)$/;"	a
l00066	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00066"><\/a>00066 <span class="preprocessor"><\/span><span class="preprocessor">        #define TIXML_SSCANF   sscanf_s<\/span>$/;"	a
l00067	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00067"><\/a>00067     {$/;"	a
l00067	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00067"><\/a>00067 <span class="preprocessor"><\/span><span class="preprocessor">    #elif defined(_MSC_VER) &amp;&amp; (_MSC_VER &gt;= 1200 )<\/span>$/;"	a
l00068	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00068"><\/a>00068     }$/;"	a
l00068	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00068"><\/a>00068 <span class="preprocessor"><\/span>        <span class="comment">\/\/ Microsoft visual studio, version 6 and higher.<\/span>$/;"	a
l00069	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00069"><\/a>00069 $/;"	a
l00069	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00069"><\/a>00069         <span class="comment">\/\/#pragma message( &quot;Using _sn* functions.&quot; )<\/span>$/;"	a
l00070	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00070"><\/a>00070     <span class="comment">\/\/ TiXmlString copy constructor<\/span>$/;"	a
l00070	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00070"><\/a>00070 <span class="preprocessor">        #define TIXML_SNPRINTF _snprintf<\/span>$/;"	a
l00071	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00071"><\/a>00071     TiXmlString ( <span class="keyword">const<\/span> TiXmlString &amp; copy) : rep_(0)$/;"	a
l00071	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00071"><\/a>00071 <span class="preprocessor"><\/span><span class="preprocessor">        #define TIXML_SSCANF   sscanf<\/span>$/;"	a
l00072	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00072"><\/a>00072     {$/;"	a
l00072	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00072"><\/a>00072 <span class="preprocessor"><\/span><span class="preprocessor">    #elif defined(__GNUC__) &amp;&amp; (__GNUC__ &gt;= 3 )<\/span>$/;"	a
l00073	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00073"><\/a>00073         init(copy.length());$/;"	a
l00073	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00073"><\/a>00073 <span class="preprocessor"><\/span>        <span class="comment">\/\/ GCC version 3 and higher.s<\/span>$/;"	a
l00074	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00074"><\/a>00074         memcpy(start(), copy.data(), length());$/;"	a
l00074	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00074"><\/a>00074         <span class="comment">\/\/#warning( &quot;Using sn* functions.&quot; )<\/span>$/;"	a
l00075	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00075"><\/a>00075     }$/;"	a
l00075	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00075"><\/a>00075 <span class="preprocessor">        #define TIXML_SNPRINTF snprintf<\/span>$/;"	a
l00076	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00076"><\/a>00076 $/;"	a
l00076	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00076"><\/a>00076 <span class="preprocessor"><\/span><span class="preprocessor">        #define TIXML_SSCANF   sscanf<\/span>$/;"	a
l00077	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00077"><\/a>00077     <span class="comment">\/\/ TiXmlString constructor, based on a string<\/span>$/;"	a
l00077	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00077"><\/a>00077 <span class="preprocessor"><\/span><span class="preprocessor">    #else<\/span>$/;"	a
l00078	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00078"><\/a>00078     TIXML_EXPLICIT TiXmlString ( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * copy) : rep_(0)$/;"	a
l00078	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00078"><\/a>00078 <span class="preprocessor"><\/span><span class="preprocessor">        #define TIXML_SNPRINTF snprintf<\/span>$/;"	a
l00079	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00079"><\/a>00079     {$/;"	a
l00079	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00079"><\/a>00079 <span class="preprocessor"><\/span><span class="preprocessor">        #define TIXML_SSCANF   sscanf<\/span>$/;"	a
l00080	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00080"><\/a>00080         init( static_cast&lt;size_type&gt;( strlen(copy) ));$/;"	a
l00080	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00080"><\/a>00080 <span class="preprocessor"><\/span><span class="preprocessor">    #endif<\/span>$/;"	a
l00081	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00081"><\/a>00081         memcpy(start(), copy, length());$/;"	a
l00081	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00081"><\/a>00081 <span class="preprocessor"><\/span><span class="preprocessor">#endif  <\/span>$/;"	a
l00082	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00082"><\/a>00082     }$/;"	a
l00082	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00082"><\/a>00082 <span class="preprocessor"><\/span>$/;"	a
l00083	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00083"><\/a>00083 $/;"	a
l00083	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00083"><\/a>00083 <span class="keyword">class <\/span><a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>;$/;"	a
l00084	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00084"><\/a>00084     <span class="comment">\/\/ TiXmlString constructor, based on a string<\/span>$/;"	a
l00084	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00084"><\/a>00084 <span class="keyword">class <\/span><a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>;$/;"	a
l00085	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00085"><\/a>00085     TIXML_EXPLICIT TiXmlString ( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * str, size_type len) : rep_(0)$/;"	a
l00085	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00085"><\/a>00085 <span class="keyword">class <\/span><a class="code" href="classTiXmlComment.html" title="An XML comment.">TiXmlComment<\/a>;$/;"	a
l00086	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00086"><\/a>00086     {$/;"	a
l00086	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00086"><\/a>00086 <span class="keyword">class <\/span><a class="code" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&amp;#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a>;$/;"	a
l00087	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00087"><\/a>00087         init(len);$/;"	a
l00087	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00087"><\/a>00087 <span class="keyword">class <\/span><a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>;$/;"	a
l00088	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00088"><\/a>00088         memcpy(start(), str, len);$/;"	a
l00088	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00088"><\/a>00088 <span class="keyword">class <\/span><a class="code" href="classTiXmlText.html" title="XML text.">TiXmlText<\/a>;$/;"	a
l00089	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00089"><\/a>00089     }$/;"	a
l00089	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00089"><\/a>00089 <span class="keyword">class <\/span><a class="code" href="classTiXmlDeclaration.html" title="In correct XML the declaration is the first entry in the file.">TiXmlDeclaration<\/a>;$/;"	a
l00090	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00090"><\/a>00090 $/;"	a
l00090	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00090"><\/a>00090 <span class="keyword">class <\/span>TiXmlParsingData;$/;"	a
l00091	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00091"><\/a>00091     <span class="comment">\/\/ TiXmlString destructor<\/span>$/;"	a
l00091	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00091"><\/a>00091 $/;"	a
l00092	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00092"><\/a>00092     ~TiXmlString ()$/;"	a
l00092	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00092"><\/a>00092 <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> TIXML_MAJOR_VERSION = 2;$/;"	a
l00093	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00093"><\/a>00093     {$/;"	a
l00093	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00093"><\/a>00093 <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> TIXML_MINOR_VERSION = 6;$/;"	a
l00094	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00094"><\/a>00094         quit();$/;"	a
l00094	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00094"><\/a>00094 <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> TIXML_PATCH_VERSION = 2;$/;"	a
l00095	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00095"><\/a>00095     }$/;"	a
l00095	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00095"><\/a>00095 $/;"	a
l00096	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00096"><\/a>00096 $/;"	a
l00096	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00096"><\/a>00096 <span class="comment">\/*  Internal structure for tracking location of items <\/span>$/;"	a
l00097	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00097"><\/a>00097     TiXmlString&amp; operator = (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * copy)$/;"	a
l00097	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00097"><\/a>00097 <span class="comment">    in the XML file.<\/span>$/;"	a
l00098	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00098"><\/a>00098     {$/;"	a
l00098	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00098"><\/a>00098 <span class="comment">*\/<\/span>$/;"	a
l00099	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00099"><\/a>00099         <span class="keywordflow">return<\/span> assign( copy, (size_type)strlen(copy));$/;"	a
l00099	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00099"><\/a>00099 <span class="keyword">struct <\/span>TiXmlCursor$/;"	a
l00100	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00100"><\/a>00100     }$/;"	a
l00100	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00100"><\/a>00100 {$/;"	a
l00101	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00101"><\/a>00101 $/;"	a
l00101	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00101"><\/a>00101     TiXmlCursor()       { Clear(); }$/;"	a
l00102	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00102"><\/a>00102     TiXmlString&amp; operator = (<span class="keyword">const<\/span> TiXmlString &amp; copy)$/;"	a
l00102	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00102"><\/a>00102     <span class="keywordtype">void<\/span> Clear()        { row = col = -1; }$/;"	a
l00103	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00103"><\/a>00103     {$/;"	a
l00103	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00103"><\/a>00103 $/;"	a
l00104	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00104"><\/a>00104         <span class="keywordflow">return<\/span> assign(copy.start(), copy.length());$/;"	a
l00104	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00104"><\/a>00104     <span class="keywordtype">int<\/span> row;    <span class="comment">\/\/ 0 based.<\/span>$/;"	a
l00105	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00105"><\/a>00105     }$/;"	a
l00105	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00105"><\/a>00105     <span class="keywordtype">int<\/span> col;    <span class="comment">\/\/ 0 based.<\/span>$/;"	a
l00106	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00106"><\/a>00106 $/;"	a
l00106	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00106"><\/a>00106 };$/;"	a
l00107	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00107"><\/a>00107 $/;"	a
l00107	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00107"><\/a>00107 $/;"	a
l00108	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00108"><\/a>00108     <span class="comment">\/\/ += operator. Maps to append<\/span>$/;"	a
l00108	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00108"><\/a>00108 $/;"	a
l00109	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00109"><\/a>00109     TiXmlString&amp; operator += (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * suffix)$/;"	a
l00110	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00110"><\/a>00110     {$/;"	a
l00111	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00111"><\/a>00111         <span class="keywordflow">return<\/span> append(suffix, static_cast&lt;size_type&gt;( strlen(suffix) ));$/;"	a
l00112	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00112"><\/a>00112     }$/;"	a
l00113	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00113"><\/a>00113 $/;"	a
l00114	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00114"><\/a>00114     <span class="comment">\/\/ += operator. Maps to append<\/span>$/;"	a
l00115	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00115"><\/a>00115     TiXmlString&amp; operator += (<span class="keywordtype">char<\/span> single)$/;"	a
l00116	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00116"><\/a>00116     {$/;"	a
l00117	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00117"><\/a>00117         <span class="keywordflow">return<\/span> append(&amp;single, 1);$/;"	a
l00118	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00118"><\/a>00118     }$/;"	a
l00119	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00119"><\/a>00119 $/;"	a
l00120	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00120"><\/a>00120     <span class="comment">\/\/ += operator. Maps to append<\/span>$/;"	a
l00121	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00121"><\/a>00121     TiXmlString&amp; operator += (<span class="keyword">const<\/span> TiXmlString &amp; suffix)$/;"	a
l00122	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00122"><\/a>00122     {$/;"	a
l00123	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00123"><\/a>00123         <span class="keywordflow">return<\/span> append(suffix.data(), suffix.length());$/;"	a
l00124	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00124"><\/a>00124     }$/;"	a
l00125	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00125"><\/a>00125 $/;"	a
l00126	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00126"><\/a>00126 $/;"	a
l00127	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00127"><\/a>00127     <span class="comment">\/\/ Convert a TiXmlString into a null-terminated char *<\/span>$/;"	a
l00128	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00128"><\/a>00128     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * c_str ()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> rep_-&gt;str; }$/;"	a
l00128	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00128"><\/a><a class="code" href="classTiXmlVisitor.html">00128<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlVisitor.html" title="Implements the interface to the &amp;quot;Visitor pattern&amp;quot; (see the Accept() method...">TiXmlVisitor<\/a>$/;"	a
l00129	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00129"><\/a>00129 $/;"	a
l00129	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00129"><\/a>00129 {$/;"	a
l00130	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00130"><\/a>00130     <span class="comment">\/\/ Convert a TiXmlString into a char * (need not be null terminated).<\/span>$/;"	a
l00130	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00130"><\/a>00130 <span class="keyword">public<\/span>:$/;"	a
l00131	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00131"><\/a>00131     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * data ()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> rep_-&gt;str; }$/;"	a
l00131	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00131"><\/a>00131     <span class="keyword">virtual<\/span> ~<a class="code" href="classTiXmlVisitor.html" title="Implements the interface to the &amp;quot;Visitor pattern&amp;quot; (see the Accept() method...">TiXmlVisitor<\/a>() {}$/;"	a
l00132	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00132"><\/a>00132 $/;"	a
l00132	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00132"><\/a>00132 $/;"	a
l00133	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00133"><\/a>00133     <span class="comment">\/\/ Return the length of a TiXmlString<\/span>$/;"	a
l00134	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00134"><\/a>00134     size_type length ()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> rep_-&gt;size; }$/;"	a
l00134	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00134"><\/a><a class="code" href="classTiXmlVisitor.html#a07baecb52dd7d8716ae2a48ad0956ee0">00134<\/a>     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlVisitor.html#a07baecb52dd7d8716ae2a48ad0956ee0" title="Visit a document.">VisitEnter<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>&amp; <span class="comment">\/*doc*\/<\/span> )         { <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>; }$/;"	a
l00135	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00135"><\/a>00135 $/;"	a
l00136	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00136"><\/a>00136     <span class="comment">\/\/ Alias for length()<\/span>$/;"	a
l00136	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00136"><\/a><a class="code" href="classTiXmlVisitor.html#aa0ade4f27087447e93974e975c3246ad">00136<\/a>     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlVisitor.html#aa0ade4f27087447e93974e975c3246ad" title="Visit a document.">VisitExit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>&amp; <span class="comment">\/*doc*\/<\/span> )          { <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>; }$/;"	a
l00137	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00137"><\/a>00137     size_type size ()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> rep_-&gt;size; }$/;"	a
l00137	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00137"><\/a>00137 $/;"	a
l00138	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00138"><\/a>00138 $/;"	a
l00139	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00139"><\/a>00139     <span class="comment">\/\/ Checks if a TiXmlString is empty<\/span>$/;"	a
l00139	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00139"><\/a><a class="code" href="classTiXmlVisitor.html#af6c6178ffa517bbdba95d70490875fff">00139<\/a>     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlVisitor.html#af6c6178ffa517bbdba95d70490875fff" title="Visit an element.">VisitEnter<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>&amp; <span class="comment">\/*element*\/<\/span>, <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* <span class="comment">\/*firstAttribute*\/<\/span> )    { <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>; }$/;"	a
l00140	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00140"><\/a>00140     <span class="keywordtype">bool<\/span> empty ()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> rep_-&gt;size == 0; }$/;"	a
l00141	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00141"><\/a>00141 $/;"	a
l00141	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00141"><\/a><a class="code" href="classTiXmlVisitor.html#aec2b1f8116226d52f3a1b95dafd3a32c">00141<\/a>     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlVisitor.html#aec2b1f8116226d52f3a1b95dafd3a32c" title="Visit an element.">VisitExit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>&amp; <span class="comment">\/*element*\/<\/span> )       { <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>; }$/;"	a
l00142	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00142"><\/a>00142     <span class="comment">\/\/ Return capacity of string<\/span>$/;"	a
l00142	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00142"><\/a>00142 $/;"	a
l00143	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00143"><\/a>00143     size_type capacity ()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> rep_-&gt;capacity; }$/;"	a
l00144	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00144"><\/a>00144 $/;"	a
l00144	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00144"><\/a><a class="code" href="classTiXmlVisitor.html#afad71c71ce6473fb9b4b64cd92de4a19">00144<\/a>     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlVisitor.html#afad71c71ce6473fb9b4b64cd92de4a19" title="Visit a declaration.">Visit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlDeclaration.html" title="In correct XML the declaration is the first entry in the file.">TiXmlDeclaration<\/a>&amp; <span class="comment">\/*declaration*\/<\/span> )   { <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>; }$/;"	a
l00145	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00145"><\/a>00145 $/;"	a
l00146	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00146"><\/a>00146     <span class="comment">\/\/ single char extraction<\/span>$/;"	a
l00146	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00146"><\/a><a class="code" href="classTiXmlVisitor.html#a399b8ebca5cd14664974a32d2ce029e5">00146<\/a>     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlVisitor.html#a399b8ebca5cd14664974a32d2ce029e5" title="Visit a text node.">Visit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlText.html" title="XML text.">TiXmlText<\/a>&amp; <span class="comment">\/*text*\/<\/span> )                 { <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>; }$/;"	a
l00147	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00147"><\/a>00147     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>&amp; at (size_type index)<span class="keyword"> const<\/span>$/;"	a
l00148	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00148"><\/a>00148 <span class="keyword">    <\/span>{$/;"	a
l00148	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00148"><\/a><a class="code" href="classTiXmlVisitor.html#a53a60e7a528627b31af3161972cc7fa2">00148<\/a>     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlVisitor.html#a53a60e7a528627b31af3161972cc7fa2" title="Visit a comment node.">Visit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlComment.html" title="An XML comment.">TiXmlComment<\/a>&amp; <span class="comment">\/*comment*\/<\/span> )           { <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>; }$/;"	a
l00149	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00149"><\/a>00149         assert( index &lt; length() );$/;"	a
l00150	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00150"><\/a>00150         <span class="keywordflow">return<\/span> rep_-&gt;str[ index ];$/;"	a
l00150	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00150"><\/a><a class="code" href="classTiXmlVisitor.html#a7e284d607d275c51dac1adb58159ce28">00150<\/a>     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlVisitor.html#a7e284d607d275c51dac1adb58159ce28" title="Visit an unknown node.">Visit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&amp;#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a>&amp; <span class="comment">\/*unknown*\/<\/span> )           { <span class="keywordflow">return<\/span> <span class="keyword">true<\/span>; }$/;"	a
l00151	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00151"><\/a>00151     }$/;"	a
l00151	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00151"><\/a>00151 };$/;"	a
l00152	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00152"><\/a>00152 $/;"	a
l00152	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00152"><\/a>00152 $/;"	a
l00153	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00153"><\/a>00153     <span class="comment">\/\/ [] operator<\/span>$/;"	a
l00153	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00153"><\/a>00153 <span class="comment">\/\/ Only used by Attribute::Query functions<\/span>$/;"	a
l00154	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00154"><\/a>00154     <span class="keywordtype">char<\/span>&amp; operator [] (size_type index)<span class="keyword"> const<\/span>$/;"	a
l00154	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00154"><\/a>00154 <span class="keyword">enum<\/span> $/;"	a
l00155	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00155"><\/a>00155 <span class="keyword">    <\/span>{$/;"	a
l00155	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00155"><\/a>00155 { $/;"	a
l00156	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00156"><\/a>00156         assert( index &lt; length() );$/;"	a
l00156	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00156"><\/a>00156     TIXML_SUCCESS,$/;"	a
l00157	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00157"><\/a>00157         <span class="keywordflow">return<\/span> rep_-&gt;str[ index ];$/;"	a
l00157	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00157"><\/a>00157     TIXML_NO_ATTRIBUTE,$/;"	a
l00158	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00158"><\/a>00158     }$/;"	a
l00158	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00158"><\/a>00158     TIXML_WRONG_TYPE$/;"	a
l00159	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00159"><\/a>00159 $/;"	a
l00159	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00159"><\/a>00159 };$/;"	a
l00160	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00160"><\/a>00160     <span class="comment">\/\/ find a char in a string. Return TiXmlString::npos if not found<\/span>$/;"	a
l00160	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00160"><\/a>00160 $/;"	a
l00161	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00161"><\/a>00161     size_type find (<span class="keywordtype">char<\/span> lookup)<span class="keyword"> const<\/span>$/;"	a
l00161	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00161"><\/a>00161 $/;"	a
l00162	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00162"><\/a>00162 <span class="keyword">    <\/span>{$/;"	a
l00162	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00162"><\/a>00162 <span class="comment">\/\/ Used by the parsing routines.<\/span>$/;"	a
l00163	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00163"><\/a>00163         <span class="keywordflow">return<\/span> find(lookup, 0);$/;"	a
l00163	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00163"><\/a>00163 <span class="keyword">enum<\/span> TiXmlEncoding$/;"	a
l00164	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00164"><\/a>00164     }$/;"	a
l00164	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00164"><\/a>00164 {$/;"	a
l00165	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00165"><\/a>00165 $/;"	a
l00165	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00165"><\/a>00165     TIXML_ENCODING_UNKNOWN,$/;"	a
l00166	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00166"><\/a>00166     <span class="comment">\/\/ find a char in a string from an offset. Return TiXmlString::npos if not found<\/span>$/;"	a
l00166	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00166"><\/a>00166     TIXML_ENCODING_UTF8,$/;"	a
l00167	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00167"><\/a>00167     size_type find (<span class="keywordtype">char<\/span> tofind, size_type offset)<span class="keyword"> const<\/span>$/;"	a
l00167	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00167"><\/a>00167     TIXML_ENCODING_LEGACY$/;"	a
l00168	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00168"><\/a>00168 <span class="keyword">    <\/span>{$/;"	a
l00168	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00168"><\/a>00168 };$/;"	a
l00169	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00169"><\/a>00169         <span class="keywordflow">if<\/span> (offset &gt;= length()) <span class="keywordflow">return<\/span> npos;$/;"	a
l00169	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00169"><\/a>00169 $/;"	a
l00170	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00170"><\/a>00170 $/;"	a
l00170	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00170"><\/a>00170 <span class="keyword">const<\/span> TiXmlEncoding TIXML_DEFAULT_ENCODING = TIXML_ENCODING_UNKNOWN;$/;"	a
l00171	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00171"><\/a>00171         <span class="keywordflow">for<\/span> (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p = c_str() + offset; *p != <span class="charliteral">&#39;\\0&#39;<\/span>; ++p)$/;"	a
l00171	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00171"><\/a>00171 $/;"	a
l00172	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00172"><\/a>00172         {$/;"	a
l00173	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00173"><\/a>00173            <span class="keywordflow">if<\/span> (*p == tofind) <span class="keywordflow">return<\/span> <span class="keyword">static_cast&lt;<\/span> size_type <span class="keyword">&gt;<\/span>( p - c_str() );$/;"	a
l00174	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00174"><\/a>00174         }$/;"	a
l00175	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00175"><\/a>00175         <span class="keywordflow">return<\/span> npos;$/;"	a
l00176	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00176"><\/a>00176     }$/;"	a
l00177	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00177"><\/a>00177 $/;"	a
l00178	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00178"><\/a>00178     <span class="keywordtype">void<\/span> clear ()$/;"	a
l00179	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00179"><\/a>00179     {$/;"	a
l00180	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00180"><\/a>00180         <span class="comment">\/\/Lee:<\/span>$/;"	a
l00181	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00181"><\/a>00181         <span class="comment">\/\/The original was just too strange, though correct:<\/span>$/;"	a
l00182	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00182"><\/a>00182         <span class="comment">\/\/  TiXmlString().swap(*this);<\/span>$/;"	a
l00183	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00183"><\/a>00183         <span class="comment">\/\/Instead use the quit &amp; re-init:<\/span>$/;"	a
l00184	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00184"><\/a>00184         quit();$/;"	a
l00185	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00185"><\/a>00185         init(0,0);$/;"	a
l00186	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00186"><\/a>00186     }$/;"	a
l00187	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00187"><\/a>00187 $/;"	a
l00188	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00188"><\/a>00188     <span class="comment">\/*  Function to reserve a big amount of data when we know we&#39;ll need it. Be aware that this<\/span>$/;"	a
l00189	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00189"><\/a>00189 <span class="comment">        function DOES NOT clear the content of the TiXmlString if any exists.<\/span>$/;"	a
l00190	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00190"><\/a>00190 <span class="comment">    *\/<\/span>$/;"	a
l00191	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00191"><\/a>00191     <span class="keywordtype">void<\/span> reserve (size_type cap);$/;"	a
l00192	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00192"><\/a>00192 $/;"	a
l00193	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00193"><\/a>00193     TiXmlString&amp; assign (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* str, size_type len);$/;"	a
l00194	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00194"><\/a>00194 $/;"	a
l00194	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00194"><\/a><a class="code" href="classTiXmlBase.html">00194<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlBase.html" title="TiXmlBase is a base class for every class in TinyXml.">TiXmlBase<\/a>$/;"	a
l00195	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00195"><\/a>00195     TiXmlString&amp; append (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* str, size_type len);$/;"	a
l00195	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00195"><\/a>00195 {$/;"	a
l00196	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00196"><\/a>00196 $/;"	a
l00196	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00196"><\/a>00196     <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>;$/;"	a
l00197	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00197"><\/a>00197     <span class="keywordtype">void<\/span> swap (TiXmlString&amp; other)$/;"	a
l00197	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00197"><\/a>00197     <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>;$/;"	a
l00198	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00198"><\/a>00198     {$/;"	a
l00198	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00198"><\/a>00198     <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>;$/;"	a
l00199	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00199"><\/a>00199         Rep* r = rep_;$/;"	a
l00199	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00199"><\/a>00199 $/;"	a
l00200	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00200"><\/a>00200         rep_ = other.rep_;$/;"	a
l00200	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00200"><\/a>00200 <span class="keyword">public<\/span>:$/;"	a
l00201	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00201"><\/a>00201         other.rep_ = r;$/;"	a
l00201	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00201"><\/a>00201     <a class="code" href="classTiXmlBase.html" title="TiXmlBase is a base class for every class in TinyXml.">TiXmlBase<\/a>() :   <a class="code" href="classTiXmlBase.html#ab242c01590191f644569fa89a080d97c" title="Field containing a generic user pointer.">userData<\/a>(0)     {}$/;"	a
l00202	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00202"><\/a>00202     }$/;"	a
l00202	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00202"><\/a>00202     <span class="keyword">virtual<\/span> ~<a class="code" href="classTiXmlBase.html" title="TiXmlBase is a base class for every class in TinyXml.">TiXmlBase<\/a>()            {}$/;"	a
l00203	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00203"><\/a>00203 $/;"	a
l00203	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00203"><\/a>00203 $/;"	a
l00204	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00204"><\/a>00204   <span class="keyword">private<\/span>:$/;"	a
l00205	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00205"><\/a>00205 $/;"	a
l00206	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00206"><\/a>00206     <span class="keywordtype">void<\/span> init(size_type sz) { init(sz, sz); }$/;"	a
l00207	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00207"><\/a>00207     <span class="keywordtype">void<\/span> set_size(size_type sz) { rep_-&gt;str[ rep_-&gt;size = sz ] = <span class="charliteral">&#39;\\0&#39;<\/span>; }$/;"	a
l00208	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00208"><\/a>00208     <span class="keywordtype">char<\/span>* start()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> rep_-&gt;str; }$/;"	a
l00209	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00209"><\/a>00209     <span class="keywordtype">char<\/span>* finish()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> rep_-&gt;str + rep_-&gt;size; }$/;"	a
l00210	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00210"><\/a>00210 $/;"	a
l00211	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00211"><\/a>00211     <span class="keyword">struct <\/span>Rep$/;"	a
l00212	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00212"><\/a>00212     {$/;"	a
l00213	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00213"><\/a>00213         size_type size, capacity;$/;"	a
l00213	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00213"><\/a>00213     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlBase.html#a0de56b3f2ef14c65091a3b916437b512" title="All TinyXml classes can print themselves to a filestream or the string class (TiXmlString...">Print<\/a>( FILE* cfile, <span class="keywordtype">int<\/span> depth ) <span class="keyword">const<\/span> = 0;$/;"	a
l00214	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00214"><\/a>00214         <span class="keywordtype">char<\/span> str[1];$/;"	a
l00214	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00214"><\/a>00214 $/;"	a
l00215	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00215"><\/a>00215     };$/;"	a
l00216	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00216"><\/a>00216 $/;"	a
l00217	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00217"><\/a>00217     <span class="keywordtype">void<\/span> init(size_type sz, size_type cap)$/;"	a
l00218	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00218"><\/a>00218     {$/;"	a
l00219	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00219"><\/a>00219         <span class="keywordflow">if<\/span> (cap)$/;"	a
l00220	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00220"><\/a>00220         {$/;"	a
l00221	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00221"><\/a>00221             <span class="comment">\/\/ Lee: the original form:<\/span>$/;"	a
l00221	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00221"><\/a><a class="code" href="classTiXmlBase.html#a0f799ec645bfb8d8a969e83478f379c1">00221<\/a>     <span class="keyword">static<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlBase.html#a0f799ec645bfb8d8a969e83478f379c1" title="The world does not agree on whether white space should be kept or not.">SetCondenseWhiteSpace<\/a>( <span class="keywordtype">bool<\/span> condense )      { condenseWhiteSpace = condense; }$/;"	a
l00222	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00222"><\/a>00222             <span class="comment">\/\/  rep_ = static_cast&lt;Rep*&gt;(operator new(sizeof(Rep) + cap));<\/span>$/;"	a
l00222	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00222"><\/a>00222 $/;"	a
l00223	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00223"><\/a>00223             <span class="comment">\/\/ doesn&#39;t work in some cases of new being overloaded. Switching<\/span>$/;"	a
l00224	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00224"><\/a>00224             <span class="comment">\/\/ to the normal allocation, although use an &#39;int&#39; for systems<\/span>$/;"	a
l00224	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00224"><\/a><a class="code" href="classTiXmlBase.html#ad4b1472531c647a25b1840a87ae42438">00224<\/a>     <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlBase.html#ad4b1472531c647a25b1840a87ae42438" title="Return the current white space setting.">IsWhiteSpaceCondensed<\/a>()                     { <span class="keywordflow">return<\/span> condenseWhiteSpace; }$/;"	a
l00225	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00225"><\/a>00225             <span class="comment">\/\/ that are overly picky about structure alignment.<\/span>$/;"	a
l00225	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00225"><\/a>00225 $/;"	a
l00226	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00226"><\/a>00226             <span class="keyword">const<\/span> size_type bytesNeeded = <span class="keyword">sizeof<\/span>(Rep) + cap;$/;"	a
l00227	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00227"><\/a>00227             <span class="keyword">const<\/span> size_type intsNeeded = ( bytesNeeded + <span class="keyword">sizeof<\/span>(int) - 1 ) \/ <span class="keyword">sizeof<\/span>( int ); $/;"	a
l00228	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00228"><\/a>00228             rep_ = <span class="keyword">reinterpret_cast&lt;<\/span>Rep*<span class="keyword">&gt;<\/span>( <span class="keyword">new<\/span> <span class="keywordtype">int<\/span>[ intsNeeded ] );$/;"	a
l00229	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00229"><\/a>00229 $/;"	a
l00230	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00230"><\/a>00230             rep_-&gt;str[ rep_-&gt;size = sz ] = <span class="charliteral">&#39;\\0&#39;<\/span>;$/;"	a
l00231	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00231"><\/a>00231             rep_-&gt;capacity = cap;$/;"	a
l00232	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00232"><\/a>00232         }$/;"	a
l00233	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00233"><\/a>00233         <span class="keywordflow">else<\/span>$/;"	a
l00234	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00234"><\/a>00234         {$/;"	a
l00235	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00235"><\/a>00235             rep_ = &amp;nullrep_;$/;"	a
l00236	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00236"><\/a>00236         }$/;"	a
l00237	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00237"><\/a>00237     }$/;"	a
l00238	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00238"><\/a>00238 $/;"	a
l00239	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00239"><\/a>00239     <span class="keywordtype">void<\/span> quit()$/;"	a
l00240	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00240"><\/a>00240     {$/;"	a
l00241	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00241"><\/a>00241         <span class="keywordflow">if<\/span> (rep_ != &amp;nullrep_)$/;"	a
l00242	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00242"><\/a>00242         {$/;"	a
l00243	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00243"><\/a>00243             <span class="comment">\/\/ The rep_ is really an array of ints. (see the allocator, above).<\/span>$/;"	a
l00244	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00244"><\/a>00244             <span class="comment">\/\/ Cast it back before delete, so the compiler won&#39;t incorrectly call destructors.<\/span>$/;"	a
l00244	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00244"><\/a><a class="code" href="classTiXmlBase.html#a024bceb070188df92c2a8d8852dd0853">00244<\/a>     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlBase.html#a024bceb070188df92c2a8d8852dd0853" title="Return the position, in the original source file, of this node or attribute.">Row<\/a>()<span class="keyword"> const         <\/span>{ <span class="keywordflow">return<\/span> location.row + 1; }$/;"	a
l00245	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00245"><\/a>00245             <span class="keyword">delete<\/span> [] ( <span class="keyword">reinterpret_cast&lt;<\/span><span class="keywordtype">int<\/span>*<span class="keyword">&gt;<\/span>( rep_ ) );$/;"	a
l00245	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00245"><\/a><a class="code" href="classTiXmlBase.html#ab54bfb9b70fe6dd276e7b279cab7f003">00245<\/a>     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlBase.html#ab54bfb9b70fe6dd276e7b279cab7f003" title="See Row().">Column<\/a>()<span class="keyword"> const      <\/span>{ <span class="keywordflow">return<\/span> location.col + 1; }    $/;"	a
l00246	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00246"><\/a>00246         }$/;"	a
l00246	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00246"><\/a>00246 $/;"	a
l00247	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00247"><\/a>00247     }$/;"	a
l00247	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00247"><\/a><a class="code" href="classTiXmlBase.html#ac6b3e0f790930d4970ec30764e937b5d">00247<\/a>     <span class="keywordtype">void<\/span>  <a class="code" href="classTiXmlBase.html#ac6b3e0f790930d4970ec30764e937b5d" title="Set a pointer to arbitrary user data.">SetUserData<\/a>( <span class="keywordtype">void<\/span>* user )         { <a class="code" href="classTiXmlBase.html#ab242c01590191f644569fa89a080d97c" title="Field containing a generic user pointer.">userData<\/a> = user; }    $/;"	a
l00248	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00248"><\/a>00248 $/;"	a
l00248	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00248"><\/a><a class="code" href="classTiXmlBase.html#a6559a530ca6763fc301a14d77ed28c17">00248<\/a>     <span class="keywordtype">void<\/span>* <a class="code" href="classTiXmlBase.html#a6559a530ca6763fc301a14d77ed28c17" title="Get a pointer to arbitrary user data.">GetUserData<\/a>()                     { <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlBase.html#ab242c01590191f644569fa89a080d97c" title="Field containing a generic user pointer.">userData<\/a>; }    $/;"	a
l00249	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00249"><\/a>00249     Rep * rep_;$/;"	a
l00249	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00249"><\/a><a class="code" href="classTiXmlBase.html#ad0120210e4680ef2088601753ce0ede4">00249<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">void<\/span>* <a class="code" href="classTiXmlBase.html#ad0120210e4680ef2088601753ce0ede4" title="Get a pointer to arbitrary user data.">GetUserData<\/a>()<span class="keyword"> const         <\/span>{ <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlBase.html#ab242c01590191f644569fa89a080d97c" title="Field containing a generic user pointer.">userData<\/a>; }    $/;"	a
l00250	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00250"><\/a>00250     <span class="keyword">static<\/span> Rep nullrep_;$/;"	a
l00250	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00250"><\/a>00250 $/;"	a
l00251	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00251"><\/a>00251 $/;"	a
l00251	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00251"><\/a>00251     <span class="comment">\/\/ Table that returs, for a given lead byte, the total number of bytes<\/span>$/;"	a
l00252	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00252"><\/a>00252 } ;$/;"	a
l00252	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00252"><\/a>00252     <span class="comment">\/\/ in the UTF-8 sequence.<\/span>$/;"	a
l00253	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00253"><\/a>00253 $/;"	a
l00253	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00253"><\/a>00253     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">int<\/span> utf8ByteTable[256];$/;"	a
l00254	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00254"><\/a>00254 $/;"	a
l00254	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00254"><\/a>00254 $/;"	a
l00255	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00255"><\/a>00255 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator == (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> TiXmlString &amp; b)$/;"	a
l00255	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00255"><\/a>00255     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlDocument.html#a17ebabe36926ef398e78dec0d0ad0378" title="Parse the given null terminated block of xml data.">Parse<\/a>(  <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, $/;"	a
l00256	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00256"><\/a>00256 {$/;"	a
l00256	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00256"><\/a>00256                                 TiXmlParsingData* data, $/;"	a
l00257	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00257"><\/a>00257     <span class="keywordflow">return<\/span>    ( a.length() == b.length() )              <span class="comment">\/\/ optimization on some platforms<\/span>$/;"	a
l00257	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00257"><\/a>00257                                 TiXmlEncoding encoding <span class="comment">\/*= TIXML_ENCODING_UNKNOWN *\/<\/span> ) = 0;$/;"	a
l00258	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00258"><\/a>00258            &amp;&amp; ( strcmp(a.c_str(), b.c_str()) == 0 );    <span class="comment">\/\/ actual compare<\/span>$/;"	a
l00258	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00258"><\/a>00258 $/;"	a
l00259	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00259"><\/a>00259 }$/;"	a
l00260	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00260"><\/a>00260 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator &lt; (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> TiXmlString &amp; b)$/;"	a
l00261	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00261"><\/a>00261 {$/;"	a
l00262	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00262"><\/a>00262     <span class="keywordflow">return<\/span> strcmp(a.c_str(), b.c_str()) &lt; 0;$/;"	a
l00262	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00262"><\/a>00262     <span class="keyword">static<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlBase.html#a6bd8c315c1acb09e34107b8736505948" title="Expands entities in a string.">EncodeString<\/a>( <span class="keyword">const<\/span> TIXML_STRING&amp; str, TIXML_STRING* out );$/;"	a
l00263	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00263"><\/a>00263 }$/;"	a
l00263	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00263"><\/a>00263 $/;"	a
l00264	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00264"><\/a>00264 $/;"	a
l00264	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00264"><\/a>00264     <span class="keyword">enum<\/span>$/;"	a
l00265	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00265"><\/a>00265 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator != (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> TiXmlString &amp; b) { <span class="keywordflow">return<\/span> !(a == b); }$/;"	a
l00265	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00265"><\/a>00265     {$/;"	a
l00266	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00266"><\/a>00266 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator &gt;  (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> TiXmlString &amp; b) { <span class="keywordflow">return<\/span> b &lt; a; }$/;"	a
l00266	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00266"><\/a>00266         TIXML_NO_ERROR = 0,$/;"	a
l00267	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00267"><\/a>00267 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator &lt;= (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> TiXmlString &amp; b) { <span class="keywordflow">return<\/span> !(b &lt; a); }$/;"	a
l00267	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00267"><\/a>00267         TIXML_ERROR,$/;"	a
l00268	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00268"><\/a>00268 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator &gt;= (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> TiXmlString &amp; b) { <span class="keywordflow">return<\/span> !(a &lt; b); }$/;"	a
l00268	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00268"><\/a>00268         TIXML_ERROR_OPENING_FILE,$/;"	a
l00269	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00269"><\/a>00269 $/;"	a
l00269	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00269"><\/a>00269         TIXML_ERROR_PARSING_ELEMENT,$/;"	a
l00270	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00270"><\/a>00270 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator == (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* b) { <span class="keywordflow">return<\/span> strcmp(a.c_str(), b) == 0; }$/;"	a
l00270	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00270"><\/a>00270         TIXML_ERROR_FAILED_TO_READ_ELEMENT_NAME,$/;"	a
l00271	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00271"><\/a>00271 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator == (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* a, <span class="keyword">const<\/span> TiXmlString &amp; b) { <span class="keywordflow">return<\/span> b == a; }$/;"	a
l00271	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00271"><\/a>00271         TIXML_ERROR_READING_ELEMENT_VALUE,$/;"	a
l00272	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00272"><\/a>00272 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator != (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* b) { <span class="keywordflow">return<\/span> !(a == b); }$/;"	a
l00272	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00272"><\/a>00272         TIXML_ERROR_READING_ATTRIBUTES,$/;"	a
l00273	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00273"><\/a>00273 <span class="keyword">inline<\/span> <span class="keywordtype">bool<\/span> operator != (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* a, <span class="keyword">const<\/span> TiXmlString &amp; b) { <span class="keywordflow">return<\/span> !(b == a); }$/;"	a
l00273	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00273"><\/a>00273         TIXML_ERROR_PARSING_EMPTY,$/;"	a
l00274	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00274"><\/a>00274 $/;"	a
l00274	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00274"><\/a>00274         TIXML_ERROR_READING_END_TAG,$/;"	a
l00275	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00275"><\/a>00275 TiXmlString operator + (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> TiXmlString &amp; b);$/;"	a
l00275	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00275"><\/a>00275         TIXML_ERROR_PARSING_UNKNOWN,$/;"	a
l00276	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00276"><\/a>00276 TiXmlString operator + (<span class="keyword">const<\/span> TiXmlString &amp; a, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* b);$/;"	a
l00276	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00276"><\/a>00276         TIXML_ERROR_PARSING_COMMENT,$/;"	a
l00277	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00277"><\/a>00277 TiXmlString operator + (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* a, <span class="keyword">const<\/span> TiXmlString &amp; b);$/;"	a
l00277	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00277"><\/a>00277         TIXML_ERROR_PARSING_DECLARATION,$/;"	a
l00278	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00278"><\/a>00278 $/;"	a
l00278	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00278"><\/a>00278         TIXML_ERROR_DOCUMENT_EMPTY,$/;"	a
l00279	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00279"><\/a>00279 $/;"	a
l00279	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00279"><\/a>00279         TIXML_ERROR_EMBEDDED_NULL,$/;"	a
l00280	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00280"><\/a>00280 <span class="comment">\/*<\/span>$/;"	a
l00280	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00280"><\/a>00280         TIXML_ERROR_PARSING_CDATA,$/;"	a
l00281	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00281"><\/a>00281 <span class="comment">   TiXmlOutStream is an emulation of std::ostream. It is based on TiXmlString.<\/span>$/;"	a
l00281	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00281"><\/a>00281         TIXML_ERROR_DOCUMENT_TOP_ONLY,$/;"	a
l00282	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00282"><\/a>00282 <span class="comment">   Only the operators that we need for TinyXML have been developped.<\/span>$/;"	a
l00282	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00282"><\/a>00282 $/;"	a
l00283	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00283"><\/a>00283 <span class="comment">*\/<\/span>$/;"	a
l00283	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00283"><\/a>00283         TIXML_ERROR_STRING_COUNT$/;"	a
l00284	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00284"><\/a>00284 <span class="keyword">class <\/span>TiXmlOutStream : <span class="keyword">public<\/span> TiXmlString$/;"	a
l00284	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00284"><\/a>00284     };$/;"	a
l00285	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00285"><\/a>00285 {$/;"	a
l00285	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00285"><\/a>00285 $/;"	a
l00286	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00286"><\/a>00286 <span class="keyword">public<\/span> :$/;"	a
l00286	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00286"><\/a>00286 <span class="keyword">protected<\/span>:$/;"	a
l00287	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00287"><\/a>00287 $/;"	a
l00287	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00287"><\/a>00287 $/;"	a
l00288	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00288"><\/a>00288     <span class="comment">\/\/ TiXmlOutStream &lt;&lt; operator.<\/span>$/;"	a
l00288	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00288"><\/a>00288     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* SkipWhiteSpace( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>*, TiXmlEncoding encoding );$/;"	a
l00289	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00289"><\/a>00289     TiXmlOutStream &amp; operator &lt;&lt; (<span class="keyword">const<\/span> TiXmlString &amp; in)$/;"	a
l00289	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00289"><\/a>00289 $/;"	a
l00290	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00290"><\/a>00290     {$/;"	a
l00290	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00290"><\/a>00290     <span class="keyword">inline<\/span> <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> IsWhiteSpace( <span class="keywordtype">char<\/span> c )       $/;"	a
l00291	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00291"><\/a>00291         *<span class="keyword">this<\/span> += in;$/;"	a
l00291	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00291"><\/a>00291     { $/;"	a
l00292	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00292"><\/a>00292         <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;$/;"	a
l00292	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00292"><\/a>00292         <span class="keywordflow">return<\/span> ( isspace( (<span class="keywordtype">unsigned<\/span> <span class="keywordtype">char<\/span>) c ) || c == <span class="charliteral">&#39;\\n&#39;<\/span> || c == <span class="charliteral">&#39;\\r&#39;<\/span> ); $/;"	a
l00293	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00293"><\/a>00293     }$/;"	a
l00293	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00293"><\/a>00293     }$/;"	a
l00294	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00294"><\/a>00294 $/;"	a
l00294	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00294"><\/a>00294     <span class="keyword">inline<\/span> <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> IsWhiteSpace( <span class="keywordtype">int<\/span> c )$/;"	a
l00295	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00295"><\/a>00295     <span class="comment">\/\/ TiXmlOutStream &lt;&lt; operator.<\/span>$/;"	a
l00295	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00295"><\/a>00295     {$/;"	a
l00296	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00296"><\/a>00296     TiXmlOutStream &amp; operator &lt;&lt; (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * in)$/;"	a
l00296	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00296"><\/a>00296         <span class="keywordflow">if<\/span> ( c &lt; 256 )$/;"	a
l00297	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00297"><\/a>00297     {$/;"	a
l00297	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00297"><\/a>00297             <span class="keywordflow">return<\/span> IsWhiteSpace( (<span class="keywordtype">char<\/span>) c );$/;"	a
l00298	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00298"><\/a>00298         *<span class="keyword">this<\/span> += in;$/;"	a
l00298	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00298"><\/a>00298         <span class="keywordflow">return<\/span> <span class="keyword">false<\/span>;   <span class="comment">\/\/ Again, only truly correct for English\/Latin...but usually works.<\/span>$/;"	a
l00299	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00299"><\/a>00299         <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>;$/;"	a
l00299	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00299"><\/a>00299     }$/;"	a
l00300	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00300"><\/a>00300     }$/;"	a
l00300	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00300"><\/a>00300 $/;"	a
l00301	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00301"><\/a>00301 $/;"	a
l00301	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00301"><\/a>00301 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00302	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00302"><\/a>00302 } ;$/;"	a
l00302	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00302"><\/a>00302 <span class="preprocessor"><\/span>    <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> StreamWhiteSpace( std::istream * in, TIXML_STRING * tag );$/;"	a
l00303	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00303"><\/a>00303 $/;"	a
l00303	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00303"><\/a>00303     <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> StreamTo( std::istream * in, <span class="keywordtype">int<\/span> character, TIXML_STRING * tag );$/;"	a
l00304	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00304"><\/a>00304 <span class="preprocessor">#endif  \/\/ TIXML_STRING_INCLUDED<\/span>$/;"	a
l00304	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00304"><\/a>00304 <span class="preprocessor">    #endif<\/span>$/;"	a
l00305	.\tinyxml\docs\tinystr_8h_source.html	/^<a name="l00305"><\/a>00305 <span class="preprocessor"><\/span><span class="preprocessor">#endif  \/\/ TIXML_USE_STL<\/span>$/;"	a
l00305	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00305"><\/a>00305 <span class="preprocessor"><\/span>$/;"	a
l00306	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00306"><\/a>00306     <span class="comment">\/*  Reads an XML name into the string provided. Returns<\/span>$/;"	a
l00307	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00307"><\/a>00307 <span class="comment">        a pointer just past the last character of the name,<\/span>$/;"	a
l00308	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00308"><\/a>00308 <span class="comment">        or 0 if the function has an error.<\/span>$/;"	a
l00309	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00309"><\/a>00309 <span class="comment">    *\/<\/span>$/;"	a
l00310	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00310"><\/a>00310     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* ReadName( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TIXML_STRING* name, TiXmlEncoding encoding );$/;"	a
l00311	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00311"><\/a>00311 $/;"	a
l00312	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00312"><\/a>00312     <span class="comment">\/*  Reads text. Returns a pointer past the given end tag.<\/span>$/;"	a
l00313	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00313"><\/a>00313 <span class="comment">        Wickedly complex options, but it keeps the (sensitive) code in one place.<\/span>$/;"	a
l00314	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00314"><\/a>00314 <span class="comment">    *\/<\/span>$/;"	a
l00315	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00315"><\/a>00315     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* ReadText(    <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* in,             <span class="comment">\/\/ where to start<\/span>$/;"	a
l00316	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00316"><\/a>00316                                     TIXML_STRING* text,         <span class="comment">\/\/ the string read<\/span>$/;"	a
l00317	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00317"><\/a>00317                                     <span class="keywordtype">bool<\/span> ignoreWhiteSpace,      <span class="comment">\/\/ whether to keep the white space<\/span>$/;"	a
l00318	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00318"><\/a>00318                                     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* endTag,         <span class="comment">\/\/ what ends this text<\/span>$/;"	a
l00319	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00319"><\/a>00319                                     <span class="keywordtype">bool<\/span> ignoreCase,            <span class="comment">\/\/ whether to ignore case in the end tag<\/span>$/;"	a
l00320	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00320"><\/a>00320                                     TiXmlEncoding encoding );   <span class="comment">\/\/ the current encoding<\/span>$/;"	a
l00321	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00321"><\/a>00321 $/;"	a
l00322	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00322"><\/a>00322     <span class="comment">\/\/ If an entity has been found, transform it into a character.<\/span>$/;"	a
l00323	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00323"><\/a>00323     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* GetEntity( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* in, <span class="keywordtype">char<\/span>* value, <span class="keywordtype">int<\/span>* length, TiXmlEncoding encoding );$/;"	a
l00324	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00324"><\/a>00324 $/;"	a
l00325	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00325"><\/a>00325     <span class="comment">\/\/ Get a character, while interpreting entities.<\/span>$/;"	a
l00326	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00326"><\/a>00326     <span class="comment">\/\/ The length can be from 0 to 4 bytes.<\/span>$/;"	a
l00327	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00327"><\/a>00327     <span class="keyword">inline<\/span> <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* GetChar( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, <span class="keywordtype">char<\/span>* _value, <span class="keywordtype">int<\/span>* length, TiXmlEncoding encoding )$/;"	a
l00328	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00328"><\/a>00328     {$/;"	a
l00329	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00329"><\/a>00329         assert( p );$/;"	a
l00330	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00330"><\/a>00330         <span class="keywordflow">if<\/span> ( encoding == TIXML_ENCODING_UTF8 )$/;"	a
l00331	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00331"><\/a>00331         {$/;"	a
l00332	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00332"><\/a>00332             *length = utf8ByteTable[ *((<span class="keyword">const<\/span> <span class="keywordtype">unsigned<\/span> <span class="keywordtype">char<\/span>*)p) ];$/;"	a
l00333	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00333"><\/a>00333             assert( *length &gt;= 0 &amp;&amp; *length &lt; 5 );$/;"	a
l00334	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00334"><\/a>00334         }$/;"	a
l00335	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00335"><\/a>00335         <span class="keywordflow">else<\/span>$/;"	a
l00336	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00336"><\/a>00336         {$/;"	a
l00337	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00337"><\/a>00337             *length = 1;$/;"	a
l00338	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00338"><\/a>00338         }$/;"	a
l00339	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00339"><\/a>00339 $/;"	a
l00340	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00340"><\/a>00340         <span class="keywordflow">if<\/span> ( *length == 1 )$/;"	a
l00341	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00341"><\/a>00341         {$/;"	a
l00342	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00342"><\/a>00342             <span class="keywordflow">if<\/span> ( *p == <span class="charliteral">&#39;&amp;&#39;<\/span> )$/;"	a
l00343	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00343"><\/a>00343                 <span class="keywordflow">return<\/span> GetEntity( p, _value, length, encoding );$/;"	a
l00344	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00344"><\/a>00344             *_value = *p;$/;"	a
l00345	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00345"><\/a>00345             <span class="keywordflow">return<\/span> p+1;$/;"	a
l00346	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00346"><\/a>00346         }$/;"	a
l00347	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00347"><\/a>00347         <span class="keywordflow">else<\/span> <span class="keywordflow">if<\/span> ( *length )$/;"	a
l00348	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00348"><\/a>00348         {$/;"	a
l00349	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00349"><\/a>00349             <span class="comment">\/\/strncpy( _value, p, *length );    \/\/ lots of compilers don&#39;t like this function (unsafe),<\/span>$/;"	a
l00350	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00350"><\/a>00350                                                 <span class="comment">\/\/ and the null terminator isn&#39;t needed<\/span>$/;"	a
l00351	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00351"><\/a>00351             <span class="keywordflow">for<\/span>( <span class="keywordtype">int<\/span> i=0; p[i] &amp;&amp; i&lt;*length; ++i ) {$/;"	a
l00352	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00352"><\/a>00352                 _value[i] = p[i];$/;"	a
l00353	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00353"><\/a>00353             }$/;"	a
l00354	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00354"><\/a>00354             <span class="keywordflow">return<\/span> p + (*length);$/;"	a
l00355	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00355"><\/a>00355         }$/;"	a
l00356	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00356"><\/a>00356         <span class="keywordflow">else<\/span>$/;"	a
l00357	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00357"><\/a>00357         {$/;"	a
l00358	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00358"><\/a>00358             <span class="comment">\/\/ Not valid text.<\/span>$/;"	a
l00359	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00359"><\/a>00359             <span class="keywordflow">return<\/span> 0;$/;"	a
l00360	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00360"><\/a>00360         }$/;"	a
l00361	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00361"><\/a>00361     }$/;"	a
l00362	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00362"><\/a>00362 $/;"	a
l00363	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00363"><\/a>00363     <span class="comment">\/\/ Return true if the next characters in the stream are any of the endTag sequences.<\/span>$/;"	a
l00364	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00364"><\/a>00364     <span class="comment">\/\/ Ignore case only works for english, and should only be relied on when comparing<\/span>$/;"	a
l00365	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00365"><\/a>00365     <span class="comment">\/\/ to English words: StringEqual( p, &quot;version&quot;, true ) is fine.<\/span>$/;"	a
l00366	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00366"><\/a>00366     <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> StringEqual(    <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p,$/;"	a
l00367	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00367"><\/a>00367                                 <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* endTag,$/;"	a
l00368	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00368"><\/a>00368                                 <span class="keywordtype">bool<\/span> ignoreCase,$/;"	a
l00369	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00369"><\/a>00369                                 TiXmlEncoding encoding );$/;"	a
l00370	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00370"><\/a>00370 $/;"	a
l00371	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00371"><\/a>00371     <span class="keyword">static<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* errorString[ TIXML_ERROR_STRING_COUNT ];$/;"	a
l00372	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00372"><\/a>00372 $/;"	a
l00373	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00373"><\/a>00373     TiXmlCursor location;$/;"	a
l00374	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00374"><\/a>00374 $/;"	a
l00376	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00376"><\/a><a class="code" href="classTiXmlBase.html#ab242c01590191f644569fa89a080d97c">00376<\/a>     <span class="keywordtype">void<\/span>*           <a class="code" href="classTiXmlBase.html#ab242c01590191f644569fa89a080d97c" title="Field containing a generic user pointer.">userData<\/a>;$/;"	a
l00377	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00377"><\/a>00377     $/;"	a
l00378	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00378"><\/a>00378     <span class="comment">\/\/ None of these methods are reliable for any language except English.<\/span>$/;"	a
l00379	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00379"><\/a>00379     <span class="comment">\/\/ Good for approximation, not great for accuracy.<\/span>$/;"	a
l00380	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00380"><\/a>00380     <span class="keyword">static<\/span> <span class="keywordtype">int<\/span> IsAlpha( <span class="keywordtype">unsigned<\/span> <span class="keywordtype">char<\/span> anyByte, TiXmlEncoding encoding );$/;"	a
l00381	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00381"><\/a>00381     <span class="keyword">static<\/span> <span class="keywordtype">int<\/span> IsAlphaNum( <span class="keywordtype">unsigned<\/span> <span class="keywordtype">char<\/span> anyByte, TiXmlEncoding encoding );$/;"	a
l00382	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00382"><\/a>00382     <span class="keyword">inline<\/span> <span class="keyword">static<\/span> <span class="keywordtype">int<\/span> ToLower( <span class="keywordtype">int<\/span> v, TiXmlEncoding encoding )$/;"	a
l00383	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00383"><\/a>00383     {$/;"	a
l00384	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00384"><\/a>00384         <span class="keywordflow">if<\/span> ( encoding == TIXML_ENCODING_UTF8 )$/;"	a
l00385	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00385"><\/a>00385         {$/;"	a
l00386	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00386"><\/a>00386             <span class="keywordflow">if<\/span> ( v &lt; 128 ) <span class="keywordflow">return<\/span> tolower( v );$/;"	a
l00387	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00387"><\/a>00387             <span class="keywordflow">return<\/span> v;$/;"	a
l00388	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00388"><\/a>00388         }$/;"	a
l00389	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00389"><\/a>00389         <span class="keywordflow">else<\/span>$/;"	a
l00390	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00390"><\/a>00390         {$/;"	a
l00391	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00391"><\/a>00391             <span class="keywordflow">return<\/span> tolower( v );$/;"	a
l00392	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00392"><\/a>00392         }$/;"	a
l00393	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00393"><\/a>00393     }$/;"	a
l00394	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00394"><\/a>00394     <span class="keyword">static<\/span> <span class="keywordtype">void<\/span> ConvertUTF32ToUTF8( <span class="keywordtype">unsigned<\/span> <span class="keywordtype">long<\/span> input, <span class="keywordtype">char<\/span>* output, <span class="keywordtype">int<\/span>* length );$/;"	a
l00395	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00395"><\/a>00395 $/;"	a
l00396	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00396"><\/a>00396 <span class="keyword">private<\/span>:$/;"	a
l00397	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00397"><\/a>00397     <a class="code" href="classTiXmlBase.html" title="TiXmlBase is a base class for every class in TinyXml.">TiXmlBase<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlBase.html" title="TiXmlBase is a base class for every class in TinyXml.">TiXmlBase<\/a>&amp; );              <span class="comment">\/\/ not implemented.<\/span>$/;"	a
l00398	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00398"><\/a>00398     <span class="keywordtype">void<\/span> operator=( <span class="keyword">const<\/span> <a class="code" href="classTiXmlBase.html" title="TiXmlBase is a base class for every class in TinyXml.">TiXmlBase<\/a>&amp; base );    <span class="comment">\/\/ not allowed.<\/span>$/;"	a
l00399	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00399"><\/a>00399 $/;"	a
l00400	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00400"><\/a>00400     <span class="keyword">struct <\/span>Entity$/;"	a
l00401	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00401"><\/a>00401     {$/;"	a
l00402	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00402"><\/a>00402         <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>*     str;$/;"	a
l00403	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00403"><\/a>00403         <span class="keywordtype">unsigned<\/span> <span class="keywordtype">int<\/span>    strLength;$/;"	a
l00404	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00404"><\/a>00404         <span class="keywordtype">char<\/span>            chr;$/;"	a
l00405	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00405"><\/a>00405     };$/;"	a
l00406	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00406"><\/a>00406     <span class="keyword">enum<\/span>$/;"	a
l00407	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00407"><\/a>00407     {$/;"	a
l00408	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00408"><\/a>00408         NUM_ENTITY = 5,$/;"	a
l00409	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00409"><\/a>00409         MAX_ENTITY_LENGTH = 6$/;"	a
l00410	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00410"><\/a>00410 $/;"	a
l00411	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00411"><\/a>00411     };$/;"	a
l00412	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00412"><\/a>00412     <span class="keyword">static<\/span> Entity entity[ NUM_ENTITY ];$/;"	a
l00413	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00413"><\/a>00413     <span class="keyword">static<\/span> <span class="keywordtype">bool<\/span> condenseWhiteSpace;$/;"	a
l00414	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00414"><\/a>00414 };$/;"	a
l00415	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00415"><\/a>00415 $/;"	a
l00416	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00416"><\/a>00416 $/;"	a
l00423	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00423"><\/a><a class="code" href="classTiXmlNode.html">00423<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlBase.html" title="TiXmlBase is a base class for every class in TinyXml.">TiXmlBase<\/a>$/;"	a
l00424	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00424"><\/a>00424 {$/;"	a
l00425	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00425"><\/a>00425     <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>;$/;"	a
l00426	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00426"><\/a>00426     <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>;$/;"	a
l00427	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00427"><\/a>00427 $/;"	a
l00428	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00428"><\/a>00428 <span class="keyword">public<\/span>:$/;"	a
l00429	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00429"><\/a>00429 <span class="preprocessor">    #ifdef TIXML_USE_STL    <\/span>$/;"	a
l00430	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00430"><\/a>00430 <span class="preprocessor"><\/span>$/;"	a
l00434	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00434"><\/a>00434         <span class="keyword">friend<\/span> std::istream&amp; <a class="code" href="classTiXmlNode.html#ab57bd426563c926844f65a78412e18b9" title="An input stream operator, for every class.">operator &gt;&gt; <\/a>(std::istream&amp; in, <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base);$/;"	a
l00435	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00435"><\/a>00435 $/;"	a
l00452	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00452"><\/a>00452         <span class="keyword">friend<\/span> std::ostream&amp; <a class="code" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7" title="An output stream operator, for every class.">operator&lt;&lt; <\/a>(std::ostream&amp; out, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base);$/;"	a
l00453	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00453"><\/a>00453 $/;"	a
l00455	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00455"><\/a>00455         <span class="keyword">friend<\/span> std::string&amp; <a class="code" href="classTiXmlNode.html#a86cd49cfb17a844c0010b3136ac966c7" title="An output stream operator, for every class.">operator&lt;&lt; <\/a>(std::string&amp; out, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base );$/;"	a
l00456	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00456"><\/a>00456 $/;"	a
l00457	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00457"><\/a>00457 <span class="preprocessor">    #endif<\/span>$/;"	a
l00458	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00458"><\/a>00458 <span class="preprocessor"><\/span>$/;"	a
l00462	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00462"><\/a><a class="code" href="classTiXmlNode.html#a836eded4920ab9e9ef28496f48cd95a2">00462<\/a>     <span class="keyword">enum<\/span> <a class="code" href="classTiXmlNode.html#a836eded4920ab9e9ef28496f48cd95a2" title="The types of XML nodes supported by TinyXml.">NodeType<\/a>$/;"	a
l00463	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00463"><\/a>00463     {$/;"	a
l00464	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00464"><\/a>00464         TINYXML_DOCUMENT,$/;"	a
l00465	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00465"><\/a>00465         TINYXML_ELEMENT,$/;"	a
l00466	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00466"><\/a>00466         TINYXML_COMMENT,$/;"	a
l00467	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00467"><\/a>00467         TINYXML_UNKNOWN,$/;"	a
l00468	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00468"><\/a>00468         TINYXML_TEXT,$/;"	a
l00469	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00469"><\/a>00469         TINYXML_DECLARATION,$/;"	a
l00470	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00470"><\/a>00470         TINYXML_TYPECOUNT$/;"	a
l00471	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00471"><\/a>00471     };$/;"	a
l00472	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00472"><\/a>00472 $/;"	a
l00473	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00473"><\/a>00473     <span class="keyword">virtual<\/span> ~<a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>();$/;"	a
l00474	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00474"><\/a>00474 $/;"	a
l00487	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00487"><\/a><a class="code" href="classTiXmlNode.html#a77943eb90d12c2892b1337a9f5918b41">00487<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *<a class="code" href="classTiXmlNode.html#a77943eb90d12c2892b1337a9f5918b41" title="The meaning of &amp;#39;value&amp;#39; changes for the specific type of TiXmlNode.">Value<\/a>()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> value.c_str (); }$/;"	a
l00488	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00488"><\/a>00488 $/;"	a
l00489	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00489"><\/a>00489 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00490	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00490"><\/a>00490 <span class="preprocessor"><\/span>$/;"	a
l00494	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00494"><\/a><a class="code" href="classTiXmlNode.html#a6d9e505619d39bf50bfd9609c9169ea5">00494<\/a>     <span class="keyword">const<\/span> std::string&amp; <a class="code" href="classTiXmlNode.html#a6d9e505619d39bf50bfd9609c9169ea5" title="Return Value() as a std::string.">ValueStr<\/a>()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> value; }$/;"	a
l00495	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00495"><\/a>00495 <span class="preprocessor">    #endif<\/span>$/;"	a
l00496	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00496"><\/a>00496 <span class="preprocessor"><\/span>$/;"	a
l00497	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00497"><\/a>00497     <span class="keyword">const<\/span> TIXML_STRING&amp; ValueTStr()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> value; }$/;"	a
l00498	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00498"><\/a>00498 $/;"	a
l00508	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00508"><\/a><a class="code" href="classTiXmlNode.html#a2a38329ca5d3f28f98ce932b8299ae90">00508<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlNode.html#a2a38329ca5d3f28f98ce932b8299ae90" title="Changes the value of the node.">SetValue<\/a>(<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value) { value = _value;}$/;"	a
l00509	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00509"><\/a>00509 $/;"	a
l00510	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00510"><\/a>00510 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00512	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00512"><\/a><a class="code" href="classTiXmlNode.html#a2598d5f448042c1abbeae4503dd45ff2">00512<\/a> <span class="preprocessor">    void SetValue( const std::string&amp; _value )  { value = _value; }<\/span>$/;"	a
l00513	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00513"><\/a>00513 <span class="preprocessor"><\/span><span class="preprocessor">    #endif<\/span>$/;"	a
l00514	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00514"><\/a>00514 <span class="preprocessor"><\/span>$/;"	a
l00516	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00516"><\/a>00516     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlNode.html#a708e7f953df61d4d2d12f73171550a4b" title="Delete all the children of this node. Does not affect &amp;#39;this&amp;#39;.">Clear<\/a>();$/;"	a
l00517	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00517"><\/a>00517 $/;"	a
l00519	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00519"><\/a><a class="code" href="classTiXmlNode.html#ab643043132ffd794f8602685d34a982e">00519<\/a>     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#ab643043132ffd794f8602685d34a982e" title="One step up the DOM.">Parent<\/a>()                         { <span class="keywordflow">return<\/span> parent; }$/;"	a
l00520	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00520"><\/a>00520     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#ab643043132ffd794f8602685d34a982e" title="One step up the DOM.">Parent<\/a>()<span class="keyword"> const             <\/span>{ <span class="keywordflow">return<\/span> parent; }$/;"	a
l00521	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00521"><\/a>00521 $/;"	a
l00522	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00522"><\/a><a class="code" href="classTiXmlNode.html#a44c8eee26bbe2d1b2762038df9dde2f0">00522<\/a>     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a44c8eee26bbe2d1b2762038df9dde2f0" title="The first child of this node. Will be null if there are no children.">FirstChild<\/a>()<span class="keyword">   const       <\/span>{ <span class="keywordflow">return<\/span> firstChild; }  $/;"	a
l00523	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00523"><\/a>00523     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a44c8eee26bbe2d1b2762038df9dde2f0" title="The first child of this node. Will be null if there are no children.">FirstChild<\/a>()                     { <span class="keywordflow">return<\/span> firstChild; }$/;"	a
l00524	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00524"><\/a>00524     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a44c8eee26bbe2d1b2762038df9dde2f0" title="The first child of this node. Will be null if there are no children.">FirstChild<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * value ) <span class="keyword">const<\/span>;            $/;"	a
l00525	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00525"><\/a>00525 $/;"	a
l00526	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00526"><\/a><a class="code" href="classTiXmlNode.html#abc8bf32be6419ec453a731868de19554">00526<\/a>     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#abc8bf32be6419ec453a731868de19554" title="The first child of this node with the matching &amp;#39;value&amp;#39;. Will be null if none...">FirstChild<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value ) {$/;"	a
l00527	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00527"><\/a>00527         <span class="comment">\/\/ Call through to the const version - safe since nothing is changed. Exiting syntax: cast this to a const (always safe)<\/span>$/;"	a
l00528	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00528"><\/a>00528         <span class="comment">\/\/ call the method, cast the return back to non-const.<\/span>$/;"	a
l00529	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00529"><\/a>00529         <span class="keywordflow">return<\/span> <span class="keyword">const_cast&lt;<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <span class="keyword">&gt;<\/span> ((<span class="keyword">const_cast&lt;<\/span> <span class="keyword">const <\/span><a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <span class="keyword">&gt;<\/span>(<span class="keyword">this<\/span>))-&gt;FirstChild( _value ));$/;"	a
l00530	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00530"><\/a>00530     }$/;"	a
l00531	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00531"><\/a>00531     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* LastChild()<span class="keyword"> const  <\/span>{ <span class="keywordflow">return<\/span> lastChild; }       $/;"	a
l00532	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00532"><\/a><a class="code" href="classTiXmlNode.html#a6432d2b2495f6caf9cb4278df706a031">00532<\/a>     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a6432d2b2495f6caf9cb4278df706a031" title="The last child of this node. Will be null if there are no children.">LastChild<\/a>()  { <span class="keywordflow">return<\/span> lastChild; }$/;"	a
l00533	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00533"><\/a>00533     $/;"	a
l00534	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00534"><\/a>00534     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* LastChild( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * value ) <span class="keyword">const<\/span>;         $/;"	a
l00535	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00535"><\/a><a class="code" href="classTiXmlNode.html#abad5bf1059c48127b958711ef89e8e5d">00535<\/a>     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#abad5bf1059c48127b958711ef89e8e5d" title="The last child of this node matching &amp;#39;value&amp;#39;. Will be null if there are no...">LastChild<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value ) {$/;"	a
l00536	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00536"><\/a>00536         <span class="keywordflow">return<\/span> <span class="keyword">const_cast&lt;<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <span class="keyword">&gt;<\/span> ((<span class="keyword">const_cast&lt;<\/span> <span class="keyword">const <\/span><a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <span class="keyword">&gt;<\/span>(<span class="keyword">this<\/span>))-&gt;LastChild( _value ));$/;"	a
l00537	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00537"><\/a>00537     }$/;"	a
l00538	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00538"><\/a>00538 $/;"	a
l00539	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00539"><\/a>00539 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00540	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00540"><\/a><a class="code" href="classTiXmlNode.html#a07f6200a5956c723c5b52d70f29c46f6">00540<\/a> <span class="preprocessor"><\/span>    <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a07f6200a5956c723c5b52d70f29c46f6" title="STL std::string form.">FirstChild<\/a>( <span class="keyword">const<\/span> std::string&amp; _value )<span class="keyword"> const  <\/span>{   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#a07f6200a5956c723c5b52d70f29c46f6" title="STL std::string form.">FirstChild<\/a> (_value.c_str ());    }   $/;"	a
l00541	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00541"><\/a><a class="code" href="classTiXmlNode.html#a10d2669ccb5e29e02fcb0e4408685ef6">00541<\/a>     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a10d2669ccb5e29e02fcb0e4408685ef6" title="STL std::string form.">FirstChild<\/a>( <span class="keyword">const<\/span> std::string&amp; _value )              {   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#a10d2669ccb5e29e02fcb0e4408685ef6" title="STL std::string form.">FirstChild<\/a> (_value.c_str ());    }   $/;"	a
l00542	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00542"><\/a><a class="code" href="classTiXmlNode.html#a256d0cdbfcfeccae83f3a1c9747a8b63">00542<\/a>     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a256d0cdbfcfeccae83f3a1c9747a8b63" title="STL std::string form.">LastChild<\/a>( <span class="keyword">const<\/span> std::string&amp; _value )<span class="keyword"> const   <\/span>{   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#a256d0cdbfcfeccae83f3a1c9747a8b63" title="STL std::string form.">LastChild<\/a> (_value.c_str ()); }   $/;"	a
l00543	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00543"><\/a><a class="code" href="classTiXmlNode.html#a69772c9202f70553f940b15c06b07be3">00543<\/a>     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a69772c9202f70553f940b15c06b07be3" title="STL std::string form.">LastChild<\/a>( <span class="keyword">const<\/span> std::string&amp; _value )               {   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#a69772c9202f70553f940b15c06b07be3" title="STL std::string form.">LastChild<\/a> (_value.c_str ()); }   $/;"	a
l00544	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00544"><\/a>00544 <span class="preprocessor">    #endif<\/span>$/;"	a
l00545	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00545"><\/a>00545 <span class="preprocessor"><\/span>$/;"	a
l00562	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00562"><\/a>00562     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a8621196ba3705fa226bef4a761cc51b6" title="An alternate way to walk the children of a node.">IterateChildren<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* previous ) <span class="keyword">const<\/span>;$/;"	a
l00563	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00563"><\/a>00563     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a8621196ba3705fa226bef4a761cc51b6" title="An alternate way to walk the children of a node.">IterateChildren<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* previous ) {$/;"	a
l00564	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00564"><\/a>00564         <span class="keywordflow">return<\/span> <span class="keyword">const_cast&lt;<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <span class="keyword">&gt;<\/span>( (<span class="keyword">const_cast&lt;<\/span> <span class="keyword">const <\/span><a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <span class="keyword">&gt;<\/span>(<span class="keyword">this<\/span>))-&gt;IterateChildren( previous ) );$/;"	a
l00565	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00565"><\/a>00565     }$/;"	a
l00566	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00566"><\/a>00566 $/;"	a
l00568	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00568"><\/a>00568     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a8621196ba3705fa226bef4a761cc51b6" title="An alternate way to walk the children of a node.">IterateChildren<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * value, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* previous ) <span class="keyword">const<\/span>;$/;"	a
l00569	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00569"><\/a>00569     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a8621196ba3705fa226bef4a761cc51b6" title="An alternate way to walk the children of a node.">IterateChildren<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* previous ) {$/;"	a
l00570	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00570"><\/a>00570         <span class="keywordflow">return<\/span> <span class="keyword">const_cast&lt;<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <span class="keyword">&gt;<\/span>( (<span class="keyword">const_cast&lt;<\/span> <span class="keyword">const <\/span><a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <span class="keyword">&gt;<\/span>(<span class="keyword">this<\/span>))-&gt;IterateChildren( _value, previous ) );$/;"	a
l00571	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00571"><\/a>00571     }$/;"	a
l00572	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00572"><\/a>00572 $/;"	a
l00573	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00573"><\/a>00573 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00574	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00574"><\/a><a class="code" href="classTiXmlNode.html#a1cbaaf8e82c09ad763d52616d75724df">00574<\/a> <span class="preprocessor"><\/span>    <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a1cbaaf8e82c09ad763d52616d75724df" title="STL std::string form.">IterateChildren<\/a>( <span class="keyword">const<\/span> std::string&amp; _value, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* previous )<span class="keyword"> const  <\/span>{   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#a1cbaaf8e82c09ad763d52616d75724df" title="STL std::string form.">IterateChildren<\/a> (_value.c_str (), previous); }   $/;"	a
l00575	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00575"><\/a><a class="code" href="classTiXmlNode.html#a16e9ad53e2f5445b14bf325c90aa862c">00575<\/a>     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a16e9ad53e2f5445b14bf325c90aa862c" title="STL std::string form.">IterateChildren<\/a>( <span class="keyword">const<\/span> std::string&amp; _value, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* previous ) {    <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#a16e9ad53e2f5445b14bf325c90aa862c" title="STL std::string form.">IterateChildren<\/a> (_value.c_str (), previous); }   $/;"	a
l00576	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00576"><\/a>00576 <span class="preprocessor">    #endif<\/span>$/;"	a
l00577	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00577"><\/a>00577 <span class="preprocessor"><\/span>$/;"	a
l00581	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00581"><\/a>00581     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#ad7d4630e1a2a916edda16be22448a8ba" title="Add a new node related to this.">InsertEndChild<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; addThis );$/;"	a
l00582	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00582"><\/a>00582 $/;"	a
l00583	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00583"><\/a>00583 $/;"	a
l00593	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00593"><\/a>00593     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a5d29442ae46de6d0168429156197bfc6" title="Add a new node related to this.">LinkEndChild<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* addThis );$/;"	a
l00594	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00594"><\/a>00594 $/;"	a
l00598	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00598"><\/a>00598     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a0c146fa2fff0157b681594102f48cbc7" title="Add a new node related to this.">InsertBeforeChild<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* beforeThis, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; addThis );$/;"	a
l00599	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00599"><\/a>00599 $/;"	a
l00603	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00603"><\/a>00603     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#ad9b75e54ec19301c8b4d5ff583d0b3d5" title="Add a new node related to this.">InsertAfterChild<\/a>(  <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* afterThis, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; addThis );$/;"	a
l00604	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00604"><\/a>00604 $/;"	a
l00608	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00608"><\/a>00608     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a0c49e739a17b9938050c22cd89617fbd" title="Replace a child of this node.">ReplaceChild<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* replaceThis, <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; withThis );$/;"	a
l00609	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00609"><\/a>00609 $/;"	a
l00611	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00611"><\/a>00611     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlNode.html#ae19d8510efc90596552f4feeac9a8fbf" title="Delete a child of this node.">RemoveChild<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* removeThis );$/;"	a
l00612	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00612"><\/a>00612 $/;"	a
l00614	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00614"><\/a><a class="code" href="classTiXmlNode.html#ac2cd892768726270e511b2ab32de4d10">00614<\/a>     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#ac2cd892768726270e511b2ab32de4d10" title="Navigate to a sibling node.">PreviousSibling<\/a>()<span class="keyword"> const            <\/span>{ <span class="keywordflow">return<\/span> prev; }$/;"	a
l00615	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00615"><\/a>00615     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#ac2cd892768726270e511b2ab32de4d10" title="Navigate to a sibling node.">PreviousSibling<\/a>()                        { <span class="keywordflow">return<\/span> prev; }$/;"	a
l00616	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00616"><\/a>00616 $/;"	a
l00618	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00618"><\/a>00618     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#ac2cd892768726270e511b2ab32de4d10" title="Navigate to a sibling node.">PreviousSibling<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * ) <span class="keyword">const<\/span>;$/;"	a
l00619	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00619"><\/a>00619     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#ac2cd892768726270e511b2ab32de4d10" title="Navigate to a sibling node.">PreviousSibling<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *_prev ) {$/;"	a
l00620	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00620"><\/a>00620         <span class="keywordflow">return<\/span> <span class="keyword">const_cast&lt;<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <span class="keyword">&gt;<\/span>( (<span class="keyword">const_cast&lt;<\/span> <span class="keyword">const <\/span><a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <span class="keyword">&gt;<\/span>(<span class="keyword">this<\/span>))-&gt;PreviousSibling( _prev ) );$/;"	a
l00621	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00621"><\/a>00621     }$/;"	a
l00622	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00622"><\/a>00622 $/;"	a
l00623	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00623"><\/a>00623 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00624	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00624"><\/a><a class="code" href="classTiXmlNode.html#a658276f57d35d5d4256d1dc1a2c398ab">00624<\/a> <span class="preprocessor"><\/span>    <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a658276f57d35d5d4256d1dc1a2c398ab" title="STL std::string form.">PreviousSibling<\/a>( <span class="keyword">const<\/span> std::string&amp; _value )<span class="keyword"> const <\/span>{   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#a658276f57d35d5d4256d1dc1a2c398ab" title="STL std::string form.">PreviousSibling<\/a> (_value.c_str ());   }   $/;"	a
l00625	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00625"><\/a><a class="code" href="classTiXmlNode.html#acc8a0434c7f401d4a3b6dee77c1a5912">00625<\/a>     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#acc8a0434c7f401d4a3b6dee77c1a5912" title="STL std::string form.">PreviousSibling<\/a>( <span class="keyword">const<\/span> std::string&amp; _value )             {   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#acc8a0434c7f401d4a3b6dee77c1a5912" title="STL std::string form.">PreviousSibling<\/a> (_value.c_str ());   }   $/;"	a
l00626	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00626"><\/a><a class="code" href="classTiXmlNode.html#a1b94d2f7fa7ab25a5a8e8d4340c449c9">00626<\/a>     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a1b94d2f7fa7ab25a5a8e8d4340c449c9" title="STL std::string form.">NextSibling<\/a>( <span class="keyword">const<\/span> std::string&amp; _value)<span class="keyword"> const      <\/span>{   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#a1b94d2f7fa7ab25a5a8e8d4340c449c9" title="STL std::string form.">NextSibling<\/a> (_value.c_str ());   }   $/;"	a
l00627	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00627"><\/a><a class="code" href="classTiXmlNode.html#a1757c1f4d01e8c9596ffdbd561c76aea">00627<\/a>     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a1757c1f4d01e8c9596ffdbd561c76aea" title="STL std::string form.">NextSibling<\/a>( <span class="keyword">const<\/span> std::string&amp; _value)                  {   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#a1757c1f4d01e8c9596ffdbd561c76aea" title="STL std::string form.">NextSibling<\/a> (_value.c_str ());   }   $/;"	a
l00628	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00628"><\/a>00628 <span class="preprocessor">    #endif<\/span>$/;"	a
l00629	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00629"><\/a>00629 <span class="preprocessor"><\/span>$/;"	a
l00631	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00631"><\/a><a class="code" href="classTiXmlNode.html#af854baeba384f5fe9859f5aee03b548e">00631<\/a>     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#af854baeba384f5fe9859f5aee03b548e" title="Navigate to a sibling node.">NextSibling<\/a>()<span class="keyword"> const                <\/span>{ <span class="keywordflow">return<\/span> next; }$/;"	a
l00632	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00632"><\/a>00632     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#af854baeba384f5fe9859f5aee03b548e" title="Navigate to a sibling node.">NextSibling<\/a>()                            { <span class="keywordflow">return<\/span> next; }$/;"	a
l00633	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00633"><\/a>00633 $/;"	a
l00635	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00635"><\/a>00635     <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#af854baeba384f5fe9859f5aee03b548e" title="Navigate to a sibling node.">NextSibling<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * ) <span class="keyword">const<\/span>;$/;"	a
l00636	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00636"><\/a>00636     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#af854baeba384f5fe9859f5aee03b548e" title="Navigate to a sibling node.">NextSibling<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _next ) {$/;"	a
l00637	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00637"><\/a>00637         <span class="keywordflow">return<\/span> <span class="keyword">const_cast&lt;<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <span class="keyword">&gt;<\/span>( (<span class="keyword">const_cast&lt;<\/span> <span class="keyword">const <\/span><a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <span class="keyword">&gt;<\/span>(<span class="keyword">this<\/span>))-&gt;NextSibling( _next ) );$/;"	a
l00638	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00638"><\/a>00638     }$/;"	a
l00639	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00639"><\/a>00639 $/;"	a
l00644	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00644"><\/a>00644     <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#a73acf929d49d10bd0e5fb3d31b0372d1" title="Convenience function to get through elements.">NextSiblingElement<\/a>() <span class="keyword">const<\/span>;$/;"	a
l00645	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00645"><\/a>00645     <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#a73acf929d49d10bd0e5fb3d31b0372d1" title="Convenience function to get through elements.">NextSiblingElement<\/a>() {$/;"	a
l00646	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00646"><\/a>00646         <span class="keywordflow">return<\/span> <span class="keyword">const_cast&lt;<\/span> <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <span class="keyword">&gt;<\/span>( (<span class="keyword">const_cast&lt;<\/span> <span class="keyword">const <\/span><a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <span class="keyword">&gt;<\/span>(<span class="keyword">this<\/span>))-&gt;NextSiblingElement() );$/;"	a
l00647	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00647"><\/a>00647     }$/;"	a
l00648	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00648"><\/a>00648 $/;"	a
l00653	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00653"><\/a>00653     <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#a73acf929d49d10bd0e5fb3d31b0372d1" title="Convenience function to get through elements.">NextSiblingElement<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * ) <span class="keyword">const<\/span>;$/;"	a
l00654	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00654"><\/a>00654     <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#a73acf929d49d10bd0e5fb3d31b0372d1" title="Convenience function to get through elements.">NextSiblingElement<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *_next ) {$/;"	a
l00655	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00655"><\/a>00655         <span class="keywordflow">return<\/span> <span class="keyword">const_cast&lt;<\/span> <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <span class="keyword">&gt;<\/span>( (<span class="keyword">const_cast&lt;<\/span> <span class="keyword">const <\/span><a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <span class="keyword">&gt;<\/span>(<span class="keyword">this<\/span>))-&gt;NextSiblingElement( _next ) );$/;"	a
l00656	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00656"><\/a>00656     }$/;"	a
l00657	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00657"><\/a>00657 $/;"	a
l00658	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00658"><\/a>00658 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00659	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00659"><\/a><a class="code" href="classTiXmlNode.html#a7572d0af9d1e696ee3f05d8bb5ebb463">00659<\/a> <span class="preprocessor"><\/span>    <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#a7572d0af9d1e696ee3f05d8bb5ebb463" title="STL std::string form.">NextSiblingElement<\/a>( <span class="keyword">const<\/span> std::string&amp; _value)<span class="keyword"> const    <\/span>{   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#a7572d0af9d1e696ee3f05d8bb5ebb463" title="STL std::string form.">NextSiblingElement<\/a> (_value.c_str ());    }   $/;"	a
l00660	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00660"><\/a><a class="code" href="classTiXmlNode.html#a506958e34406729a4e4c5326ea39d081">00660<\/a>     <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#a506958e34406729a4e4c5326ea39d081" title="STL std::string form.">NextSiblingElement<\/a>( <span class="keyword">const<\/span> std::string&amp; _value)                {   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#a506958e34406729a4e4c5326ea39d081" title="STL std::string form.">NextSiblingElement<\/a> (_value.c_str ());    }   $/;"	a
l00661	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00661"><\/a>00661 <span class="preprocessor">    #endif<\/span>$/;"	a
l00662	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00662"><\/a>00662 <span class="preprocessor"><\/span>$/;"	a
l00664	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00664"><\/a>00664     <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#af4fb652f6bd79ae0d5ce7d0f7d3c0fba" title="Convenience function to get through elements.">FirstChildElement<\/a>() <span class="keyword">const<\/span>;$/;"	a
l00665	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00665"><\/a>00665     <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#af4fb652f6bd79ae0d5ce7d0f7d3c0fba" title="Convenience function to get through elements.">FirstChildElement<\/a>() {$/;"	a
l00666	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00666"><\/a>00666         <span class="keywordflow">return<\/span> <span class="keyword">const_cast&lt;<\/span> <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <span class="keyword">&gt;<\/span>( (<span class="keyword">const_cast&lt;<\/span> <span class="keyword">const <\/span><a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <span class="keyword">&gt;<\/span>(<span class="keyword">this<\/span>))-&gt;FirstChildElement() );$/;"	a
l00667	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00667"><\/a>00667     }$/;"	a
l00668	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00668"><\/a>00668 $/;"	a
l00670	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00670"><\/a>00670     <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#af4fb652f6bd79ae0d5ce7d0f7d3c0fba" title="Convenience function to get through elements.">FirstChildElement<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value ) <span class="keyword">const<\/span>;$/;"	a
l00671	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00671"><\/a>00671     <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#af4fb652f6bd79ae0d5ce7d0f7d3c0fba" title="Convenience function to get through elements.">FirstChildElement<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value ) {$/;"	a
l00672	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00672"><\/a>00672         <span class="keywordflow">return<\/span> <span class="keyword">const_cast&lt;<\/span> <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <span class="keyword">&gt;<\/span>( (<span class="keyword">const_cast&lt;<\/span> <span class="keyword">const <\/span><a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <span class="keyword">&gt;<\/span>(<span class="keyword">this<\/span>))-&gt;FirstChildElement( _value ) );$/;"	a
l00673	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00673"><\/a>00673     }$/;"	a
l00674	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00674"><\/a>00674 $/;"	a
l00675	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00675"><\/a>00675 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00676	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00676"><\/a><a class="code" href="classTiXmlNode.html#a327ad4bbd90073c5dfc931b07314f5f7">00676<\/a> <span class="preprocessor"><\/span>    <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#a327ad4bbd90073c5dfc931b07314f5f7" title="STL std::string form.">FirstChildElement<\/a>( <span class="keyword">const<\/span> std::string&amp; _value )<span class="keyword"> const    <\/span>{   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#a327ad4bbd90073c5dfc931b07314f5f7" title="STL std::string form.">FirstChildElement<\/a> (_value.c_str ()); }   $/;"	a
l00677	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00677"><\/a><a class="code" href="classTiXmlNode.html#a7f1d7291880534c1e5cdeb392d8c1f45">00677<\/a>     <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlNode.html#a7f1d7291880534c1e5cdeb392d8c1f45" title="STL std::string form.">FirstChildElement<\/a>( <span class="keyword">const<\/span> std::string&amp; _value )                {   <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#a7f1d7291880534c1e5cdeb392d8c1f45" title="STL std::string form.">FirstChildElement<\/a> (_value.c_str ()); }   $/;"	a
l00678	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00678"><\/a>00678 <span class="preprocessor">    #endif<\/span>$/;"	a
l00679	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00679"><\/a>00679 <span class="preprocessor"><\/span>$/;"	a
l00684	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00684"><\/a><a class="code" href="classTiXmlNode.html#a57b99d5c97d67a42b9752f5210a1ba5e">00684<\/a>     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlNode.html#a57b99d5c97d67a42b9752f5210a1ba5e" title="Query the type (as an enumerated value, above) of this node.">Type<\/a>()<span class="keyword"> const    <\/span>{ <span class="keywordflow">return<\/span> type; }$/;"	a
l00685	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00685"><\/a>00685 $/;"	a
l00689	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00689"><\/a>00689     <span class="keyword">const<\/span> <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>* <a class="code" href="classTiXmlNode.html#a80e397fa973cf5323e33b07154b024f3" title="Return a pointer to the Document this node lives in.">GetDocument<\/a>() <span class="keyword">const<\/span>;$/;"	a
l00690	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00690"><\/a>00690     <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>* <a class="code" href="classTiXmlNode.html#a80e397fa973cf5323e33b07154b024f3" title="Return a pointer to the Document this node lives in.">GetDocument<\/a>() {$/;"	a
l00691	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00691"><\/a>00691         <span class="keywordflow">return<\/span> <span class="keyword">const_cast&lt;<\/span> <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>* <span class="keyword">&gt;<\/span>( (<span class="keyword">const_cast&lt;<\/span> <span class="keyword">const <\/span><a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <span class="keyword">&gt;<\/span>(<span class="keyword">this<\/span>))-&gt;GetDocument() );$/;"	a
l00692	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00692"><\/a>00692     }$/;"	a
l00693	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00693"><\/a>00693 $/;"	a
l00695	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00695"><\/a><a class="code" href="classTiXmlNode.html#aeed21ad30630ef6e7faf096127edc9f3">00695<\/a>     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlNode.html#aeed21ad30630ef6e7faf096127edc9f3" title="Returns true if this node has no children.">NoChildren<\/a>()<span class="keyword"> const                     <\/span>{ <span class="keywordflow">return<\/span> !firstChild; }$/;"	a
l00696	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00696"><\/a>00696 $/;"	a
l00697	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00697"><\/a><a class="code" href="classTiXmlNode.html#a8a4cda4b15c29f64cff419309aebed08">00697<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>*    <a class="code" href="classTiXmlNode.html#a8a4cda4b15c29f64cff419309aebed08" title="Cast to a more defined type. Will return null if not of the requested type.">ToDocument<\/a>()<span class="keyword">    const <\/span>{ <span class="keywordflow">return<\/span> 0; } $/;"	a
l00698	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00698"><\/a><a class="code" href="classTiXmlNode.html#a72abed96dc9667ab9e0a2a275301bb1c">00698<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>*     <a class="code" href="classTiXmlNode.html#a72abed96dc9667ab9e0a2a275301bb1c" title="Cast to a more defined type. Will return null if not of the requested type.">ToElement<\/a>()<span class="keyword">     const <\/span>{ <span class="keywordflow">return<\/span> 0; } $/;"	a
l00699	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00699"><\/a><a class="code" href="classTiXmlNode.html#aa0a5086f9eaee910bbfdc7f975e26574">00699<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlComment.html" title="An XML comment.">TiXmlComment<\/a>*     <a class="code" href="classTiXmlNode.html#aa0a5086f9eaee910bbfdc7f975e26574" title="Cast to a more defined type. Will return null if not of the requested type.">ToComment<\/a>()<span class="keyword">     const <\/span>{ <span class="keywordflow">return<\/span> 0; } $/;"	a
l00700	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00700"><\/a><a class="code" href="classTiXmlNode.html#afd7205cf31d7a376929f8a36930627a2">00700<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&amp;#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a>*     <a class="code" href="classTiXmlNode.html#afd7205cf31d7a376929f8a36930627a2" title="Cast to a more defined type. Will return null if not of the requested type.">ToUnknown<\/a>()<span class="keyword">     const <\/span>{ <span class="keywordflow">return<\/span> 0; } $/;"	a
l00701	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00701"><\/a><a class="code" href="classTiXmlNode.html#a95a46a52c525992d6b4ee08beb14cd69">00701<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlText.html" title="XML text.">TiXmlText<\/a>*        <a class="code" href="classTiXmlNode.html#a95a46a52c525992d6b4ee08beb14cd69" title="Cast to a more defined type. Will return null if not of the requested type.">ToText<\/a>()<span class="keyword">        const <\/span>{ <span class="keywordflow">return<\/span> 0; } $/;"	a
l00702	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00702"><\/a><a class="code" href="classTiXmlNode.html#a9f43e6984fc7d4afd6eb32714c6b7b72">00702<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlDeclaration.html" title="In correct XML the declaration is the first entry in the file.">TiXmlDeclaration<\/a>* <a class="code" href="classTiXmlNode.html#a9f43e6984fc7d4afd6eb32714c6b7b72" title="Cast to a more defined type. Will return null if not of the requested type.">ToDeclaration<\/a>()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> 0; } $/;"	a
l00703	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00703"><\/a>00703 $/;"	a
l00704	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00704"><\/a><a class="code" href="classTiXmlNode.html#a6a4c8ac28ee7a745d059db6691e03bae">00704<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>*          <a class="code" href="classTiXmlNode.html#a6a4c8ac28ee7a745d059db6691e03bae" title="Cast to a more defined type. Will return null if not of the requested type.">ToDocument<\/a>()    { <span class="keywordflow">return<\/span> 0; } $/;"	a
l00705	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00705"><\/a><a class="code" href="classTiXmlNode.html#aa65d000223187d22a4dcebd7479e9ebc">00705<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>*           <a class="code" href="classTiXmlNode.html#aa65d000223187d22a4dcebd7479e9ebc" title="Cast to a more defined type. Will return null if not of the requested type.">ToElement<\/a>()     { <span class="keywordflow">return<\/span> 0; } $/;"	a
l00706	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00706"><\/a><a class="code" href="classTiXmlNode.html#a383e06a0787f7063953934867990f849">00706<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlComment.html" title="An XML comment.">TiXmlComment<\/a>*           <a class="code" href="classTiXmlNode.html#a383e06a0787f7063953934867990f849" title="Cast to a more defined type. Will return null if not of the requested type.">ToComment<\/a>()     { <span class="keywordflow">return<\/span> 0; } $/;"	a
l00707	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00707"><\/a><a class="code" href="classTiXmlNode.html#a06de5af852668c7e4af0d09c205f0b0d">00707<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&amp;#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a>*           <a class="code" href="classTiXmlNode.html#a06de5af852668c7e4af0d09c205f0b0d" title="Cast to a more defined type. Will return null if not of the requested type.">ToUnknown<\/a>()     { <span class="keywordflow">return<\/span> 0; } $/;"	a
l00708	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00708"><\/a><a class="code" href="classTiXmlNode.html#a3ddfbcac78fbea041fad57e5c6d60a03">00708<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlText.html" title="XML text.">TiXmlText<\/a>*              <a class="code" href="classTiXmlNode.html#a3ddfbcac78fbea041fad57e5c6d60a03" title="Cast to a more defined type. Will return null if not of the requested type.">ToText<\/a>()        { <span class="keywordflow">return<\/span> 0; } $/;"	a
l00709	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00709"><\/a><a class="code" href="classTiXmlNode.html#a4027136ca820ff4a636b607231b6a6df">00709<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlDeclaration.html" title="In correct XML the declaration is the first entry in the file.">TiXmlDeclaration<\/a>*       <a class="code" href="classTiXmlNode.html#a4027136ca820ff4a636b607231b6a6df" title="Cast to a more defined type. Will return null if not of the requested type.">ToDeclaration<\/a>() { <span class="keywordflow">return<\/span> 0; } $/;"	a
l00710	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00710"><\/a>00710 $/;"	a
l00714	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00714"><\/a>00714     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlNode.html#a4508cc3a2d7a98e96a54cc09c37a78a4" title="Create an exact duplicate of this node and return it.">Clone<\/a>() <span class="keyword">const<\/span> = 0;$/;"	a
l00715	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00715"><\/a>00715 $/;"	a
l00738	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00738"><\/a>00738     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlNode.html#acc0f88b7462c6cb73809d410a4f5bb86" title="Accept a hierchical visit the nodes in the TinyXML DOM.">Accept<\/a>( <a class="code" href="classTiXmlVisitor.html" title="Implements the interface to the &amp;quot;Visitor pattern&amp;quot; (see the Accept() method...">TiXmlVisitor<\/a>* visitor ) <span class="keyword">const<\/span> = 0;$/;"	a
l00739	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00739"><\/a>00739 $/;"	a
l00740	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00740"><\/a>00740 <span class="keyword">protected<\/span>:$/;"	a
l00741	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00741"><\/a>00741     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>( <a class="code" href="classTiXmlNode.html#a836eded4920ab9e9ef28496f48cd95a2" title="The types of XML nodes supported by TinyXml.">NodeType<\/a> _type );$/;"	a
l00742	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00742"><\/a>00742 $/;"	a
l00743	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00743"><\/a>00743     <span class="comment">\/\/ Copy to the allocated object. Shared functionality between Clone, Copy constructor,<\/span>$/;"	a
l00744	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00744"><\/a>00744     <span class="comment">\/\/ and the assignment operator.<\/span>$/;"	a
l00745	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00745"><\/a>00745     <span class="keywordtype">void<\/span> CopyTo( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* target ) <span class="keyword">const<\/span>;$/;"	a
l00746	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00746"><\/a>00746 $/;"	a
l00747	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00747"><\/a>00747 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00748	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00748"><\/a>00748 <span class="preprocessor"><\/span>        <span class="comment">\/\/ The real work of the input operator.<\/span>$/;"	a
l00749	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00749"><\/a>00749     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream* in, TIXML_STRING* tag ) = 0;$/;"	a
l00750	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00750"><\/a>00750 <span class="preprocessor">    #endif<\/span>$/;"	a
l00751	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00751"><\/a>00751 <span class="preprocessor"><\/span>$/;"	a
l00752	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00752"><\/a>00752     <span class="comment">\/\/ Figure out what is at *p, and parse it. Returns null if it is not an xml node.<\/span>$/;"	a
l00753	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00753"><\/a>00753     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* Identify( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* start, TiXmlEncoding encoding );$/;"	a
l00754	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00754"><\/a>00754 $/;"	a
l00755	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00755"><\/a>00755     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>*      parent;$/;"	a
l00756	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00756"><\/a>00756     <a class="code" href="classTiXmlNode.html#a836eded4920ab9e9ef28496f48cd95a2" title="The types of XML nodes supported by TinyXml.">NodeType<\/a>        type;$/;"	a
l00757	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00757"><\/a>00757 $/;"	a
l00758	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00758"><\/a>00758     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>*      firstChild;$/;"	a
l00759	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00759"><\/a>00759     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>*      lastChild;$/;"	a
l00760	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00760"><\/a>00760 $/;"	a
l00761	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00761"><\/a>00761     TIXML_STRING    value;$/;"	a
l00762	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00762"><\/a>00762 $/;"	a
l00763	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00763"><\/a>00763     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>*      prev;$/;"	a
l00764	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00764"><\/a>00764     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>*      next;$/;"	a
l00765	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00765"><\/a>00765 $/;"	a
l00766	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00766"><\/a>00766 <span class="keyword">private<\/span>:$/;"	a
l00767	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00767"><\/a>00767     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; );              <span class="comment">\/\/ not implemented.<\/span>$/;"	a
l00768	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00768"><\/a>00768     <span class="keywordtype">void<\/span> operator=( <span class="keyword">const<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>&amp; base );    <span class="comment">\/\/ not allowed.<\/span>$/;"	a
l00769	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00769"><\/a>00769 };$/;"	a
l00770	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00770"><\/a>00770 $/;"	a
l00771	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00771"><\/a>00771 $/;"	a
l00779	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00779"><\/a><a class="code" href="classTiXmlAttribute.html">00779<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlBase.html" title="TiXmlBase is a base class for every class in TinyXml.">TiXmlBase<\/a>$/;"	a
l00780	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00780"><\/a>00780 {$/;"	a
l00781	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00781"><\/a>00781     <span class="keyword">friend<\/span> <span class="keyword">class <\/span>TiXmlAttributeSet;$/;"	a
l00782	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00782"><\/a>00782 $/;"	a
l00783	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00783"><\/a>00783 <span class="keyword">public<\/span>:$/;"	a
l00785	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00785"><\/a><a class="code" href="classTiXmlAttribute.html#a9cfa3c8179873fd485d83003b114f8e1">00785<\/a>     <a class="code" href="classTiXmlAttribute.html#a9cfa3c8179873fd485d83003b114f8e1" title="Construct an empty attribute.">TiXmlAttribute<\/a>() : <a class="code" href="classTiXmlBase.html" title="TiXmlBase is a base class for every class in TinyXml.">TiXmlBase<\/a>()$/;"	a
l00786	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00786"><\/a>00786     {$/;"	a
l00787	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00787"><\/a>00787         document = 0;$/;"	a
l00788	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00788"><\/a>00788         prev = next = 0;$/;"	a
l00789	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00789"><\/a>00789     }$/;"	a
l00790	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00790"><\/a>00790 $/;"	a
l00791	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00791"><\/a>00791 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00793	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00793"><\/a><a class="code" href="classTiXmlAttribute.html#a052213522caac3979960e0714063861d">00793<\/a> <span class="preprocessor">    TiXmlAttribute( const std::string&amp; _name, const std::string&amp; _value )<\/span>$/;"	a
l00794	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00794"><\/a>00794 <span class="preprocessor"><\/span>    {$/;"	a
l00795	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00795"><\/a>00795         name = _name;$/;"	a
l00796	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00796"><\/a>00796         value = _value;$/;"	a
l00797	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00797"><\/a>00797         document = 0;$/;"	a
l00798	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00798"><\/a>00798         prev = next = 0;$/;"	a
l00799	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00799"><\/a>00799     }$/;"	a
l00800	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00800"><\/a>00800 <span class="preprocessor">    #endif<\/span>$/;"	a
l00801	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00801"><\/a>00801 <span class="preprocessor"><\/span>$/;"	a
l00803	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00803"><\/a><a class="code" href="classTiXmlAttribute.html#a759d0b76fb8fcf765ecab243bc14f05e">00803<\/a>     <a class="code" href="classTiXmlAttribute.html#a9cfa3c8179873fd485d83003b114f8e1" title="Construct an empty attribute.">TiXmlAttribute<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _name, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value )$/;"	a
l00804	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00804"><\/a>00804     {$/;"	a
l00805	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00805"><\/a>00805         name = _name;$/;"	a
l00806	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00806"><\/a>00806         value = _value;$/;"	a
l00807	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00807"><\/a>00807         document = 0;$/;"	a
l00808	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00808"><\/a>00808         prev = next = 0;$/;"	a
l00809	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00809"><\/a>00809     }$/;"	a
l00810	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00810"><\/a>00810 $/;"	a
l00811	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00811"><\/a><a class="code" href="classTiXmlAttribute.html#a298a57287d305904ba6bd96ae6f78d3d">00811<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>*     <a class="code" href="classTiXmlAttribute.html#a298a57287d305904ba6bd96ae6f78d3d" title="Return the name of this attribute.">Name<\/a>()<span class="keyword">  const       <\/span>{ <span class="keywordflow">return<\/span> name.c_str(); }        $/;"	a
l00812	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00812"><\/a><a class="code" href="classTiXmlAttribute.html#a0f874490eac8ca00ee0070765d0e97e3">00812<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>*     <a class="code" href="classTiXmlAttribute.html#a0f874490eac8ca00ee0070765d0e97e3" title="Return the value of this attribute.">Value<\/a>()<span class="keyword"> const       <\/span>{ <span class="keywordflow">return<\/span> value.c_str(); }       $/;"	a
l00813	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00813"><\/a>00813 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00814	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00814"><\/a><a class="code" href="classTiXmlAttribute.html#a87705c3ccf9ee9417beb4f7cbacd4d33">00814<\/a> <span class="preprocessor"><\/span>    <span class="keyword">const<\/span> std::string&amp; <a class="code" href="classTiXmlAttribute.html#a87705c3ccf9ee9417beb4f7cbacd4d33" title="Return the value of this attribute.">ValueStr<\/a>()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> value; }               $/;"	a
l00815	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00815"><\/a>00815 <span class="preprocessor">    #endif<\/span>$/;"	a
l00816	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00816"><\/a>00816 <span class="preprocessor"><\/span>    <span class="keywordtype">int<\/span>             <a class="code" href="classTiXmlAttribute.html#aa1a20ad59dc7e89a0ab265396360d50f" title="Return the value of this attribute, converted to an integer.">IntValue<\/a>() <span class="keyword">const<\/span>;                                   $/;"	a
l00817	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00817"><\/a>00817     <span class="keywordtype">double<\/span>          <a class="code" href="classTiXmlAttribute.html#a2880ddef53fc7522c99535273954d230" title="Return the value of this attribute, converted to a double.">DoubleValue<\/a>() <span class="keyword">const<\/span>;                                $/;"	a
l00818	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00818"><\/a>00818 $/;"	a
l00819	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00819"><\/a>00819     <span class="comment">\/\/ Get the tinyxml string representation<\/span>$/;"	a
l00820	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00820"><\/a>00820     <span class="keyword">const<\/span> TIXML_STRING&amp; NameTStr()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> name; }$/;"	a
l00821	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00821"><\/a>00821 $/;"	a
l00831	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00831"><\/a>00831     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlAttribute.html#ad6c93088ee21af41a107931223339344" title="QueryIntValue examines the value string.">QueryIntValue<\/a>( <span class="keywordtype">int<\/span>* _value ) <span class="keyword">const<\/span>;$/;"	a
l00833	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00833"><\/a>00833     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlAttribute.html#ac87b2a8489906a5d7aa2875f20be3513" title="QueryDoubleValue examines the value string. See QueryIntValue().">QueryDoubleValue<\/a>( <span class="keywordtype">double<\/span>* _value ) <span class="keyword">const<\/span>;$/;"	a
l00834	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00834"><\/a>00834 $/;"	a
l00835	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00835"><\/a><a class="code" href="classTiXmlAttribute.html#ab7fa3d21ff8d7c5764cf9af15b667a99">00835<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlAttribute.html#ab7fa3d21ff8d7c5764cf9af15b667a99" title="Set the name of this attribute.">SetName<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _name )   { name = _name; }               $/;"	a
l00836	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00836"><\/a><a class="code" href="classTiXmlAttribute.html#a2dae44178f668b3cb48101be4f2236a0">00836<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlAttribute.html#a2dae44178f668b3cb48101be4f2236a0" title="Set the value.">SetValue<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _value ) { value = _value; }             $/;"	a
l00837	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00837"><\/a>00837 $/;"	a
l00838	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00838"><\/a>00838     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlAttribute.html#a7e065df640116a62ea4f4b7da5449cc8" title="Set the value from an integer.">SetIntValue<\/a>( <span class="keywordtype">int<\/span> _value );                                     $/;"	a
l00839	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00839"><\/a>00839     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlAttribute.html#a0316da31373496c4368ad549bf711394" title="Set the value from a double.">SetDoubleValue<\/a>( <span class="keywordtype">double<\/span> _value );                               $/;"	a
l00840	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00840"><\/a>00840 $/;"	a
l00841	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00841"><\/a>00841 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00843	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00843"><\/a><a class="code" href="classTiXmlAttribute.html#ab296ff0c9a8c701055cd257a8a976e57">00843<\/a> <span class="preprocessor">    void SetName( const std::string&amp; _name )    { name = _name; }   <\/span>$/;"	a
l00845	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00845"><\/a><a class="code" href="classTiXmlAttribute.html#ab43f67a0cc3ec1d80e62606500f0925f">00845<\/a> <span class="preprocessor">    void SetValue( const std::string&amp; _value )  { value = _value; }<\/span>$/;"	a
l00846	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00846"><\/a>00846 <span class="preprocessor"><\/span><span class="preprocessor">    #endif<\/span>$/;"	a
l00847	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00847"><\/a>00847 <span class="preprocessor"><\/span>$/;"	a
l00849	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00849"><\/a>00849     <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* <a class="code" href="classTiXmlAttribute.html#a1c78e92e223a40843f644ba48ef69f67" title="Get the next sibling attribute in the DOM. Returns null at end.">Next<\/a>() <span class="keyword">const<\/span>;$/;"	a
l00850	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00850"><\/a>00850     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* <a class="code" href="classTiXmlAttribute.html#a1c78e92e223a40843f644ba48ef69f67" title="Get the next sibling attribute in the DOM. Returns null at end.">Next<\/a>() {$/;"	a
l00851	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00851"><\/a>00851         <span class="keywordflow">return<\/span> <span class="keyword">const_cast&lt;<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* <span class="keyword">&gt;<\/span>( (<span class="keyword">const_cast&lt;<\/span> <span class="keyword">const <\/span><a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* <span class="keyword">&gt;<\/span>(<span class="keyword">this<\/span>))-&gt;Next() ); $/;"	a
l00852	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00852"><\/a>00852     }$/;"	a
l00853	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00853"><\/a>00853 $/;"	a
l00855	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00855"><\/a>00855     <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* <a class="code" href="classTiXmlAttribute.html#a6ebbfe333fe76cd834bd6cbcca3130cf" title="Get the previous sibling attribute in the DOM. Returns null at beginning.">Previous<\/a>() <span class="keyword">const<\/span>;$/;"	a
l00856	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00856"><\/a>00856     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* <a class="code" href="classTiXmlAttribute.html#a6ebbfe333fe76cd834bd6cbcca3130cf" title="Get the previous sibling attribute in the DOM. Returns null at beginning.">Previous<\/a>() {$/;"	a
l00857	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00857"><\/a>00857         <span class="keywordflow">return<\/span> <span class="keyword">const_cast&lt;<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* <span class="keyword">&gt;<\/span>( (<span class="keyword">const_cast&lt;<\/span> <span class="keyword">const <\/span><a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* <span class="keyword">&gt;<\/span>(<span class="keyword">this<\/span>))-&gt;Previous() ); $/;"	a
l00858	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00858"><\/a>00858     }$/;"	a
l00859	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00859"><\/a>00859 $/;"	a
l00860	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00860"><\/a>00860     <span class="keywordtype">bool<\/span> operator==( <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>&amp; rhs )<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> rhs.name == name; }$/;"	a
l00861	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00861"><\/a>00861     <span class="keywordtype">bool<\/span> operator&lt;( <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>&amp; rhs )<span class="keyword">  const <\/span>{ <span class="keywordflow">return<\/span> name &lt; rhs.name; }$/;"	a
l00862	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00862"><\/a>00862     <span class="keywordtype">bool<\/span> operator&gt;( <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>&amp; rhs )<span class="keyword">  const <\/span>{ <span class="keywordflow">return<\/span> name &gt; rhs.name; }$/;"	a
l00863	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00863"><\/a>00863 $/;"	a
l00864	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00864"><\/a>00864     <span class="comment">\/*  Attribute parsing starts: first letter of the name<\/span>$/;"	a
l00865	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00865"><\/a>00865 <span class="comment">                         returns: the next char after the value end quote<\/span>$/;"	a
l00866	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00866"><\/a>00866 <span class="comment">    *\/<\/span>$/;"	a
l00867	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00867"><\/a>00867     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* Parse( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	a
l00868	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00868"><\/a>00868 $/;"	a
l00869	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00869"><\/a>00869     <span class="comment">\/\/ Prints this Attribute to a FILE stream.<\/span>$/;"	a
l00870	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00870"><\/a><a class="code" href="classTiXmlAttribute.html#acc04956c1d5c4c31fe74f7a7528d109a">00870<\/a>     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlAttribute.html#acc04956c1d5c4c31fe74f7a7528d109a" title="All TinyXml classes can print themselves to a filestream or the string class (TiXmlString...">Print<\/a>( FILE* cfile, <span class="keywordtype">int<\/span> depth )<span class="keyword"> const <\/span>{$/;"	a
l00871	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00871"><\/a>00871         <a class="code" href="classTiXmlAttribute.html#acc04956c1d5c4c31fe74f7a7528d109a" title="All TinyXml classes can print themselves to a filestream or the string class (TiXmlString...">Print<\/a>( cfile, depth, 0 );$/;"	a
l00872	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00872"><\/a>00872     }$/;"	a
l00873	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00873"><\/a>00873     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlAttribute.html#acc04956c1d5c4c31fe74f7a7528d109a" title="All TinyXml classes can print themselves to a filestream or the string class (TiXmlString...">Print<\/a>( FILE* cfile, <span class="keywordtype">int<\/span> depth, TIXML_STRING* str ) <span class="keyword">const<\/span>;$/;"	a
l00874	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00874"><\/a>00874 $/;"	a
l00875	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00875"><\/a>00875     <span class="comment">\/\/ [internal use]<\/span>$/;"	a
l00876	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00876"><\/a>00876     <span class="comment">\/\/ Set the document pointer so the attribute can report errors.<\/span>$/;"	a
l00877	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00877"><\/a>00877     <span class="keywordtype">void<\/span> SetDocument( <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>* doc )  { document = doc; }$/;"	a
l00878	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00878"><\/a>00878 $/;"	a
l00879	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00879"><\/a>00879 <span class="keyword">private<\/span>:$/;"	a
l00880	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00880"><\/a>00880     <a class="code" href="classTiXmlAttribute.html#a9cfa3c8179873fd485d83003b114f8e1" title="Construct an empty attribute.">TiXmlAttribute<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>&amp; );                <span class="comment">\/\/ not implemented.<\/span>$/;"	a
l00881	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00881"><\/a>00881     <span class="keywordtype">void<\/span> operator=( <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>&amp; base );   <span class="comment">\/\/ not allowed.<\/span>$/;"	a
l00882	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00882"><\/a>00882 $/;"	a
l00883	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00883"><\/a>00883     <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>*  document;   <span class="comment">\/\/ A pointer back to a document, for error reporting.<\/span>$/;"	a
l00884	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00884"><\/a>00884     TIXML_STRING name;$/;"	a
l00885	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00885"><\/a>00885     TIXML_STRING value;$/;"	a
l00886	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00886"><\/a>00886     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* prev;$/;"	a
l00887	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00887"><\/a>00887     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* next;$/;"	a
l00888	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00888"><\/a>00888 };$/;"	a
l00889	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00889"><\/a>00889 $/;"	a
l00890	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00890"><\/a>00890 $/;"	a
l00891	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00891"><\/a>00891 <span class="comment">\/*  A class used to manage a group of attributes.<\/span>$/;"	a
l00892	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00892"><\/a>00892 <span class="comment">    It is only used internally, both by the ELEMENT and the DECLARATION.<\/span>$/;"	a
l00893	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00893"><\/a>00893 <span class="comment">    <\/span>$/;"	a
l00894	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00894"><\/a>00894 <span class="comment">    The set can be changed transparent to the Element and Declaration<\/span>$/;"	a
l00895	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00895"><\/a>00895 <span class="comment">    classes that use it, but NOT transparent to the Attribute<\/span>$/;"	a
l00896	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00896"><\/a>00896 <span class="comment">    which has to implement a next() and previous() method. Which makes<\/span>$/;"	a
l00897	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00897"><\/a>00897 <span class="comment">    it a bit problematic and prevents the use of STL.<\/span>$/;"	a
l00898	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00898"><\/a>00898 <span class="comment"><\/span>$/;"	a
l00899	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00899"><\/a>00899 <span class="comment">    This version is implemented with circular lists because:<\/span>$/;"	a
l00900	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00900"><\/a>00900 <span class="comment">        - I like circular lists<\/span>$/;"	a
l00901	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00901"><\/a>00901 <span class="comment">        - it demonstrates some independence from the (typical) doubly linked list.<\/span>$/;"	a
l00902	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00902"><\/a>00902 <span class="comment">*\/<\/span>$/;"	a
l00903	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00903"><\/a>00903 <span class="keyword">class <\/span>TiXmlAttributeSet$/;"	a
l00904	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00904"><\/a>00904 {$/;"	a
l00905	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00905"><\/a>00905 <span class="keyword">public<\/span>:$/;"	a
l00906	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00906"><\/a>00906     TiXmlAttributeSet();$/;"	a
l00907	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00907"><\/a>00907     ~TiXmlAttributeSet();$/;"	a
l00908	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00908"><\/a>00908 $/;"	a
l00909	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00909"><\/a>00909     <span class="keywordtype">void<\/span> Add( <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* attribute );$/;"	a
l00910	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00910"><\/a>00910     <span class="keywordtype">void<\/span> Remove( <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* attribute );$/;"	a
l00911	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00911"><\/a>00911 $/;"	a
l00912	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00912"><\/a>00912     <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* First()<span class="keyword">   const   <\/span>{ <span class="keywordflow">return<\/span> ( sentinel.next == &amp;sentinel ) ? 0 : sentinel.next; }$/;"	a
l00913	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00913"><\/a>00913     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* First()                 { <span class="keywordflow">return<\/span> ( sentinel.next == &amp;sentinel ) ? 0 : sentinel.next; }$/;"	a
l00914	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00914"><\/a>00914     <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* Last()<span class="keyword"> const      <\/span>{ <span class="keywordflow">return<\/span> ( sentinel.prev == &amp;sentinel ) ? 0 : sentinel.prev; }$/;"	a
l00915	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00915"><\/a>00915     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* Last()                  { <span class="keywordflow">return<\/span> ( sentinel.prev == &amp;sentinel ) ? 0 : sentinel.prev; }$/;"	a
l00916	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00916"><\/a>00916 $/;"	a
l00917	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00917"><\/a>00917     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* Find( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _name ) <span class="keyword">const<\/span>;$/;"	a
l00918	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00918"><\/a>00918     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* FindOrCreate( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _name );$/;"	a
l00919	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00919"><\/a>00919 $/;"	a
l00920	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00920"><\/a>00920 <span class="preprocessor">#   ifdef TIXML_USE_STL<\/span>$/;"	a
l00921	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00921"><\/a>00921 <span class="preprocessor"><\/span>    <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* Find( <span class="keyword">const<\/span> std::string&amp; _name ) <span class="keyword">const<\/span>;$/;"	a
l00922	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00922"><\/a>00922     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* FindOrCreate( <span class="keyword">const<\/span> std::string&amp; _name );$/;"	a
l00923	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00923"><\/a>00923 <span class="preprocessor">#   endif<\/span>$/;"	a
l00924	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00924"><\/a>00924 <span class="preprocessor"><\/span>$/;"	a
l00925	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00925"><\/a>00925 $/;"	a
l00926	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00926"><\/a>00926 <span class="keyword">private<\/span>:$/;"	a
l00927	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00927"><\/a>00927     <span class="comment">\/\/*ME:  Because of hidden\/disabled copy-construktor in TiXmlAttribute (sentinel-element),<\/span>$/;"	a
l00928	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00928"><\/a>00928     <span class="comment">\/\/*ME:  this class must be also use a hidden\/disabled copy-constructor !!!<\/span>$/;"	a
l00929	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00929"><\/a>00929     TiXmlAttributeSet( <span class="keyword">const<\/span> TiXmlAttributeSet&amp; );  <span class="comment">\/\/ not allowed<\/span>$/;"	a
l00930	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00930"><\/a>00930     <span class="keywordtype">void<\/span> operator=( <span class="keyword">const<\/span> TiXmlAttributeSet&amp; ); <span class="comment">\/\/ not allowed (as TiXmlAttribute)<\/span>$/;"	a
l00931	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00931"><\/a>00931 $/;"	a
l00932	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00932"><\/a>00932     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a> sentinel;$/;"	a
l00933	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00933"><\/a>00933 };$/;"	a
l00934	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00934"><\/a>00934 $/;"	a
l00935	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00935"><\/a>00935 $/;"	a
l00940	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00940"><\/a><a class="code" href="classTiXmlElement.html">00940<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>$/;"	a
l00941	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00941"><\/a>00941 {$/;"	a
l00942	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00942"><\/a>00942 <span class="keyword">public<\/span>:$/;"	a
l00944	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00944"><\/a>00944     <a class="code" href="classTiXmlElement.html#a01bc3ab372d35da08efcbbe65ad90c60" title="Construct an element.">TiXmlElement<\/a> (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * in_value);$/;"	a
l00945	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00945"><\/a>00945 $/;"	a
l00946	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00946"><\/a>00946 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l00948	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00948"><\/a>00948 <span class="preprocessor">    TiXmlElement( const std::string&amp; _value );<\/span>$/;"	a
l00949	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00949"><\/a>00949 <span class="preprocessor"><\/span><span class="preprocessor">    #endif<\/span>$/;"	a
l00950	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00950"><\/a>00950 <span class="preprocessor"><\/span>$/;"	a
l00951	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00951"><\/a>00951     <a class="code" href="classTiXmlElement.html#a01bc3ab372d35da08efcbbe65ad90c60" title="Construct an element.">TiXmlElement<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>&amp; );$/;"	a
l00952	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00952"><\/a>00952 $/;"	a
l00953	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00953"><\/a>00953     <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>&amp; operator=( <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>&amp; base );$/;"	a
l00954	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00954"><\/a>00954 $/;"	a
l00955	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00955"><\/a>00955     <span class="keyword">virtual<\/span> ~<a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>();$/;"	a
l00956	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00956"><\/a>00956 $/;"	a
l00960	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00960"><\/a>00960     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlElement.html#ae419a442a9701a62b0c3d8fd1cbdd12d" title="Given an attribute name, Attribute() returns the value for the attribute of that...">Attribute<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* name ) <span class="keyword">const<\/span>;$/;"	a
l00961	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00961"><\/a>00961 $/;"	a
l00968	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00968"><\/a>00968     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlElement.html#ae419a442a9701a62b0c3d8fd1cbdd12d" title="Given an attribute name, Attribute() returns the value for the attribute of that...">Attribute<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* name, <span class="keywordtype">int<\/span>* i ) <span class="keyword">const<\/span>;$/;"	a
l00969	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00969"><\/a>00969 $/;"	a
l00976	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00976"><\/a>00976     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlElement.html#ae419a442a9701a62b0c3d8fd1cbdd12d" title="Given an attribute name, Attribute() returns the value for the attribute of that...">Attribute<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* name, <span class="keywordtype">double<\/span>* d ) <span class="keyword">const<\/span>;$/;"	a
l00977	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00977"><\/a>00977 $/;"	a
l00985	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00985"><\/a>00985     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlElement.html#aea0bfe471380f281c5945770ddbf52b9" title="QueryIntAttribute examines the attribute - it is an alternative to the Attribute()...">QueryIntAttribute<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* name, <span class="keywordtype">int<\/span>* _value ) <span class="keyword">const<\/span>;$/;"	a
l00987	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00987"><\/a>00987     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlElement.html#ae48df644f890ab86fa19839ac401f00d" title="QueryUnsignedAttribute examines the attribute - see QueryIntAttribute().">QueryUnsignedAttribute<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* name, <span class="keywordtype">unsigned<\/span>* _value ) <span class="keyword">const<\/span>;$/;"	a
l00992	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00992"><\/a>00992     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlElement.html#af4a1d3f88c28eb0f3115dc39ebd83fff" title="QueryBoolAttribute examines the attribute - see QueryIntAttribute().">QueryBoolAttribute<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* name, <span class="keywordtype">bool<\/span>* _value ) <span class="keyword">const<\/span>;$/;"	a
l00994	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00994"><\/a>00994     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlElement.html#a898d7730ecc341f0bffc7a9dadbf1ce7" title="QueryDoubleAttribute examines the attribute - see QueryIntAttribute().">QueryDoubleAttribute<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* name, <span class="keywordtype">double<\/span>* _value ) <span class="keyword">const<\/span>;$/;"	a
l00996	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00996"><\/a><a class="code" href="classTiXmlElement.html#aa04d3af11601ef5a5f88295203a843be">00996<\/a>     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlElement.html#aa04d3af11601ef5a5f88295203a843be" title="QueryFloatAttribute examines the attribute - see QueryIntAttribute().">QueryFloatAttribute<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* name, <span class="keywordtype">float<\/span>* _value )<span class="keyword"> const <\/span>{$/;"	a
l00997	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00997"><\/a>00997         <span class="keywordtype">double<\/span> d;$/;"	a
l00998	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00998"><\/a>00998         <span class="keywordtype">int<\/span> result = <a class="code" href="classTiXmlElement.html#a898d7730ecc341f0bffc7a9dadbf1ce7" title="QueryDoubleAttribute examines the attribute - see QueryIntAttribute().">QueryDoubleAttribute<\/a>( name, &amp;d );$/;"	a
l00999	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l00999"><\/a>00999         <span class="keywordflow">if<\/span> ( result == TIXML_SUCCESS ) {$/;"	a
l01000	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01000"><\/a>01000             *_value = (float)d;$/;"	a
l01001	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01001"><\/a>01001         }$/;"	a
l01002	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01002"><\/a>01002         <span class="keywordflow">return<\/span> result;$/;"	a
l01003	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01003"><\/a>01003     }$/;"	a
l01004	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01004"><\/a>01004 $/;"	a
l01005	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01005"><\/a>01005 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01007	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01007"><\/a><a class="code" href="classTiXmlElement.html#a14321ac360efe906ed449d9db3fd9961">01007<\/a> <span class="preprocessor">    int QueryStringAttribute( const char* name, std::string* _value ) const {<\/span>$/;"	a
l01008	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01008"><\/a>01008 <span class="preprocessor"><\/span>        <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* cstr = <a class="code" href="classTiXmlElement.html#ae419a442a9701a62b0c3d8fd1cbdd12d" title="Given an attribute name, Attribute() returns the value for the attribute of that...">Attribute<\/a>( name );$/;"	a
l01009	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01009"><\/a>01009         <span class="keywordflow">if<\/span> ( cstr ) {$/;"	a
l01010	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01010"><\/a>01010             *_value = std::string( cstr );$/;"	a
l01011	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01011"><\/a>01011             <span class="keywordflow">return<\/span> TIXML_SUCCESS;$/;"	a
l01012	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01012"><\/a>01012         }$/;"	a
l01013	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01013"><\/a>01013         <span class="keywordflow">return<\/span> TIXML_NO_ATTRIBUTE;$/;"	a
l01014	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01014"><\/a>01014     }$/;"	a
l01015	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01015"><\/a>01015 $/;"	a
l01024	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01024"><\/a><a class="code" href="classTiXmlElement.html#ae3b9a03b0a56663a40801c7256683576">01024<\/a>     <span class="keyword">template<\/span>&lt; <span class="keyword">typename<\/span> T &gt; <span class="keywordtype">int<\/span> QueryValueAttribute( <span class="keyword">const<\/span> std::string&amp; name, T* outValue )<span class="keyword"> const<\/span>$/;"	a
l01025	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01025"><\/a>01025 <span class="keyword">    <\/span>{$/;"	a
l01026	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01026"><\/a>01026         <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* node = attributeSet.Find( name );$/;"	a
l01027	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01027"><\/a>01027         <span class="keywordflow">if<\/span> ( !node )$/;"	a
l01028	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01028"><\/a>01028             <span class="keywordflow">return<\/span> TIXML_NO_ATTRIBUTE;$/;"	a
l01029	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01029"><\/a>01029 $/;"	a
l01030	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01030"><\/a>01030         std::stringstream sstream( node-&gt;<a class="code" href="classTiXmlAttribute.html#a87705c3ccf9ee9417beb4f7cbacd4d33" title="Return the value of this attribute.">ValueStr<\/a>() );$/;"	a
l01031	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01031"><\/a>01031         sstream &gt;&gt; *outValue;$/;"	a
l01032	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01032"><\/a>01032         <span class="keywordflow">if<\/span> ( !sstream.fail() )$/;"	a
l01033	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01033"><\/a>01033             <span class="keywordflow">return<\/span> TIXML_SUCCESS;$/;"	a
l01034	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01034"><\/a>01034         <span class="keywordflow">return<\/span> TIXML_WRONG_TYPE;$/;"	a
l01035	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01035"><\/a>01035     }$/;"	a
l01036	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01036"><\/a>01036 $/;"	a
l01037	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01037"><\/a>01037     <span class="keywordtype">int<\/span> QueryValueAttribute( <span class="keyword">const<\/span> std::string&amp; name, std::string* outValue )<span class="keyword"> const<\/span>$/;"	a
l01038	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01038"><\/a>01038 <span class="keyword">    <\/span>{$/;"	a
l01039	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01039"><\/a>01039         <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* node = attributeSet.Find( name );$/;"	a
l01040	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01040"><\/a>01040         <span class="keywordflow">if<\/span> ( !node )$/;"	a
l01041	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01041"><\/a>01041             <span class="keywordflow">return<\/span> TIXML_NO_ATTRIBUTE;$/;"	a
l01042	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01042"><\/a>01042         *outValue = node-&gt;<a class="code" href="classTiXmlAttribute.html#a87705c3ccf9ee9417beb4f7cbacd4d33" title="Return the value of this attribute.">ValueStr<\/a>();$/;"	a
l01043	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01043"><\/a>01043         <span class="keywordflow">return<\/span> TIXML_SUCCESS;$/;"	a
l01044	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01044"><\/a>01044     }$/;"	a
l01045	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01045"><\/a>01045 <span class="preprocessor">    #endif<\/span>$/;"	a
l01046	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01046"><\/a>01046 <span class="preprocessor"><\/span>$/;"	a
l01050	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01050"><\/a>01050     <span class="keywordtype">void<\/span> SetAttribute( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* name, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * _value );$/;"	a
l01051	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01051"><\/a>01051 $/;"	a
l01052	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01052"><\/a>01052 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01053	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01053"><\/a>01053 <span class="preprocessor"><\/span>    <span class="keyword">const<\/span> std::string* Attribute( <span class="keyword">const<\/span> std::string&amp; name ) <span class="keyword">const<\/span>;$/;"	a
l01054	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01054"><\/a>01054     <span class="keyword">const<\/span> std::string* Attribute( <span class="keyword">const<\/span> std::string&amp; name, <span class="keywordtype">int<\/span>* i ) <span class="keyword">const<\/span>;$/;"	a
l01055	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01055"><\/a>01055     <span class="keyword">const<\/span> std::string* Attribute( <span class="keyword">const<\/span> std::string&amp; name, <span class="keywordtype">double<\/span>* d ) <span class="keyword">const<\/span>;$/;"	a
l01056	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01056"><\/a>01056     <span class="keywordtype">int<\/span> QueryIntAttribute( <span class="keyword">const<\/span> std::string&amp; name, <span class="keywordtype">int<\/span>* _value ) <span class="keyword">const<\/span>;$/;"	a
l01057	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01057"><\/a>01057     <span class="keywordtype">int<\/span> QueryDoubleAttribute( <span class="keyword">const<\/span> std::string&amp; name, <span class="keywordtype">double<\/span>* _value ) <span class="keyword">const<\/span>;$/;"	a
l01058	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01058"><\/a>01058 $/;"	a
l01060	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01060"><\/a>01060     <span class="keywordtype">void<\/span> SetAttribute( <span class="keyword">const<\/span> std::string&amp; name, <span class="keyword">const<\/span> std::string&amp; _value );$/;"	a
l01062	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01062"><\/a>01062     <span class="keywordtype">void<\/span> SetAttribute( <span class="keyword">const<\/span> std::string&amp; name, <span class="keywordtype">int<\/span> _value );$/;"	a
l01064	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01064"><\/a>01064     <span class="keywordtype">void<\/span> SetDoubleAttribute( <span class="keyword">const<\/span> std::string&amp; name, <span class="keywordtype">double<\/span> value );$/;"	a
l01065	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01065"><\/a>01065 <span class="preprocessor">    #endif<\/span>$/;"	a
l01066	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01066"><\/a>01066 <span class="preprocessor"><\/span>$/;"	a
l01070	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01070"><\/a>01070     <span class="keywordtype">void<\/span> SetAttribute( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * name, <span class="keywordtype">int<\/span> value );$/;"	a
l01071	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01071"><\/a>01071 $/;"	a
l01075	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01075"><\/a>01075     <span class="keywordtype">void<\/span> SetDoubleAttribute( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * name, <span class="keywordtype">double<\/span> value );$/;"	a
l01076	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01076"><\/a>01076 $/;"	a
l01079	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01079"><\/a>01079     <span class="keywordtype">void<\/span> RemoveAttribute( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * name );$/;"	a
l01080	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01080"><\/a>01080 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01081	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01081"><\/a><a class="code" href="classTiXmlElement.html#a1afa6aea716511326a608e4c05df4f3a">01081<\/a> <span class="preprocessor"><\/span>    <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlElement.html#a1afa6aea716511326a608e4c05df4f3a" title="STL std::string form.">RemoveAttribute<\/a>( <span class="keyword">const<\/span> std::string&amp; name ) {   <a class="code" href="classTiXmlElement.html#a1afa6aea716511326a608e4c05df4f3a" title="STL std::string form.">RemoveAttribute<\/a> (name.c_str ());    }   $/;"	a
l01082	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01082"><\/a>01082 <span class="preprocessor">    #endif<\/span>$/;"	a
l01083	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01083"><\/a>01083 <span class="preprocessor"><\/span>$/;"	a
l01084	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01084"><\/a><a class="code" href="classTiXmlElement.html#a516054c9073647d6cb29b6abe9fa0592">01084<\/a>     <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* <a class="code" href="classTiXmlElement.html#a516054c9073647d6cb29b6abe9fa0592" title="Access the first attribute in this element.">FirstAttribute<\/a>()<span class="keyword"> const    <\/span>{ <span class="keywordflow">return<\/span> attributeSet.First(); }        $/;"	a
l01085	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01085"><\/a>01085     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* FirstAttribute()                { <span class="keywordflow">return<\/span> attributeSet.First(); }$/;"	a
l01086	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01086"><\/a><a class="code" href="classTiXmlElement.html#a86191b49f9177be132b85b14655f1381">01086<\/a>     <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* <a class="code" href="classTiXmlElement.html#a86191b49f9177be132b85b14655f1381" title="Access the last attribute in this element.">LastAttribute<\/a>()<span class="keyword">   const   <\/span>{ <span class="keywordflow">return<\/span> attributeSet.Last(); }     $/;"	a
l01087	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01087"><\/a>01087     <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* LastAttribute()                 { <span class="keywordflow">return<\/span> attributeSet.Last(); }$/;"	a
l01088	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01088"><\/a>01088 $/;"	a
l01121	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01121"><\/a>01121     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* GetText() <span class="keyword">const<\/span>;$/;"	a
l01122	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01122"><\/a>01122 $/;"	a
l01124	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01124"><\/a>01124     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* Clone() <span class="keyword">const<\/span>;$/;"	a
l01125	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01125"><\/a>01125     <span class="comment">\/\/ Print the Element to a FILE stream.<\/span>$/;"	a
l01126	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01126"><\/a>01126     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> Print( FILE* cfile, <span class="keywordtype">int<\/span> depth ) <span class="keyword">const<\/span>;$/;"	a
l01127	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01127"><\/a>01127 $/;"	a
l01128	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01128"><\/a>01128     <span class="comment">\/*  Attribtue parsing starts: next char past &#39;&lt;&#39;<\/span>$/;"	a
l01129	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01129"><\/a>01129 <span class="comment">                         returns: next char past &#39;&gt;&#39;<\/span>$/;"	a
l01130	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01130"><\/a>01130 <span class="comment">    *\/<\/span>$/;"	a
l01131	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01131"><\/a>01131     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* Parse( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	a
l01132	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01132"><\/a>01132 $/;"	a
l01133	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01133"><\/a><a class="code" href="classTiXmlElement.html#ac5b8d0e25fa23fd9acbb6d146082901c">01133<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>*     <a class="code" href="classTiXmlElement.html#ac5b8d0e25fa23fd9acbb6d146082901c" title="Cast to a more defined type. Will return null not of the requested type.">ToElement<\/a>()<span class="keyword">     const <\/span>{ <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01134	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01134"><\/a><a class="code" href="classTiXmlElement.html#a9def86337ea7a755eb41cac980f60c7a">01134<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>*           <a class="code" href="classTiXmlElement.html#a9def86337ea7a755eb41cac980f60c7a" title="Cast to a more defined type. Will return null not of the requested type.">ToElement<\/a>()           { <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01135	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01135"><\/a>01135 $/;"	a
l01138	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01138"><\/a>01138     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> Accept( <a class="code" href="classTiXmlVisitor.html" title="Implements the interface to the &amp;quot;Visitor pattern&amp;quot; (see the Accept() method...">TiXmlVisitor<\/a>* visitor ) <span class="keyword">const<\/span>;$/;"	a
l01139	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01139"><\/a>01139 $/;"	a
l01140	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01140"><\/a>01140 <span class="keyword">protected<\/span>:$/;"	a
l01141	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01141"><\/a>01141 $/;"	a
l01142	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01142"><\/a>01142     <span class="keywordtype">void<\/span> CopyTo( <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* target ) <span class="keyword">const<\/span>;$/;"	a
l01143	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01143"><\/a>01143     <span class="keywordtype">void<\/span> ClearThis();   <span class="comment">\/\/ like clear, but initializes &#39;this&#39; object as well<\/span>$/;"	a
l01144	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01144"><\/a>01144 $/;"	a
l01145	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01145"><\/a>01145     <span class="comment">\/\/ Used to be public [internal use]<\/span>$/;"	a
l01146	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01146"><\/a>01146 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01147	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01147"><\/a>01147 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	a
l01148	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01148"><\/a>01148 <span class="preprocessor">    #endif<\/span>$/;"	a
l01149	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01149"><\/a>01149 <span class="preprocessor"><\/span>    <span class="comment">\/*  [internal use]<\/span>$/;"	a
l01150	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01150"><\/a>01150 <span class="comment">        Reads the &quot;value&quot; of the element -- another element, or text.<\/span>$/;"	a
l01151	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01151"><\/a>01151 <span class="comment">        This should terminate with the current end tag.<\/span>$/;"	a
l01152	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01152"><\/a>01152 <span class="comment">    *\/<\/span>$/;"	a
l01153	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01153"><\/a>01153     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* ReadValue( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* in, TiXmlParsingData* prevData, TiXmlEncoding encoding );$/;"	a
l01154	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01154"><\/a>01154 $/;"	a
l01155	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01155"><\/a>01155 <span class="keyword">private<\/span>:$/;"	a
l01156	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01156"><\/a>01156     TiXmlAttributeSet attributeSet;$/;"	a
l01157	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01157"><\/a>01157 };$/;"	a
l01158	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01158"><\/a>01158 $/;"	a
l01159	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01159"><\/a>01159 $/;"	a
l01162	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01162"><\/a><a class="code" href="classTiXmlComment.html">01162<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlComment.html" title="An XML comment.">TiXmlComment<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>$/;"	a
l01163	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01163"><\/a>01163 {$/;"	a
l01164	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01164"><\/a>01164 <span class="keyword">public<\/span>:$/;"	a
l01166	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01166"><\/a><a class="code" href="classTiXmlComment.html#aaa3252031d3e8bd3a2bf51a1c61201b7">01166<\/a>     <a class="code" href="classTiXmlComment.html#aaa3252031d3e8bd3a2bf51a1c61201b7" title="Constructs an empty comment.">TiXmlComment<\/a>() : <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>::TINYXML_COMMENT ) {}$/;"	a
l01168	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01168"><\/a><a class="code" href="classTiXmlComment.html#a37e7802ef17bc03ebe5ae79bf0713d47">01168<\/a>     <a class="code" href="classTiXmlComment.html#a37e7802ef17bc03ebe5ae79bf0713d47" title="Construct a comment from text.">TiXmlComment<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _value ) : <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>::TINYXML_COMMENT ) {$/;"	a
l01169	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01169"><\/a>01169         <a class="code" href="classTiXmlNode.html#a2a38329ca5d3f28f98ce932b8299ae90" title="Changes the value of the node.">SetValue<\/a>( _value );$/;"	a
l01170	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01170"><\/a>01170     }$/;"	a
l01171	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01171"><\/a>01171     <a class="code" href="classTiXmlComment.html#aaa3252031d3e8bd3a2bf51a1c61201b7" title="Constructs an empty comment.">TiXmlComment<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlComment.html" title="An XML comment.">TiXmlComment<\/a>&amp; );$/;"	a
l01172	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01172"><\/a>01172     <a class="code" href="classTiXmlComment.html" title="An XML comment.">TiXmlComment<\/a>&amp; operator=( <span class="keyword">const<\/span> <a class="code" href="classTiXmlComment.html" title="An XML comment.">TiXmlComment<\/a>&amp; base );$/;"	a
l01173	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01173"><\/a>01173 $/;"	a
l01174	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01174"><\/a>01174     <span class="keyword">virtual<\/span> ~<a class="code" href="classTiXmlComment.html" title="An XML comment.">TiXmlComment<\/a>() {}$/;"	a
l01175	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01175"><\/a>01175 $/;"	a
l01177	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01177"><\/a>01177     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlComment.html#a0d6662bdc52488b9e12b3c7a0453d028" title="Returns a copy of this Comment.">Clone<\/a>() <span class="keyword">const<\/span>;$/;"	a
l01178	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01178"><\/a>01178     <span class="comment">\/\/ Write this Comment to a FILE stream.<\/span>$/;"	a
l01179	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01179"><\/a>01179     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlComment.html#a6b316527aaa8da0370cd68c22a5a0f5f" title="All TinyXml classes can print themselves to a filestream or the string class (TiXmlString...">Print<\/a>( FILE* cfile, <span class="keywordtype">int<\/span> depth ) <span class="keyword">const<\/span>;$/;"	a
l01180	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01180"><\/a>01180 $/;"	a
l01181	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01181"><\/a>01181     <span class="comment">\/*  Attribtue parsing starts: at the ! of the !--<\/span>$/;"	a
l01182	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01182"><\/a>01182 <span class="comment">                         returns: next char past &#39;&gt;&#39;<\/span>$/;"	a
l01183	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01183"><\/a>01183 <span class="comment">    *\/<\/span>$/;"	a
l01184	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01184"><\/a>01184     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* Parse( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	a
l01185	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01185"><\/a>01185 $/;"	a
l01186	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01186"><\/a><a class="code" href="classTiXmlComment.html#a00fb4215c20a2399ea05ac9b9e7e68a0">01186<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlComment.html" title="An XML comment.">TiXmlComment<\/a>*  <a class="code" href="classTiXmlComment.html#a00fb4215c20a2399ea05ac9b9e7e68a0" title="Cast to a more defined type. Will return null not of the requested type.">ToComment<\/a>()<span class="keyword"> const  <\/span>{ <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01187	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01187"><\/a><a class="code" href="classTiXmlComment.html#acc7c7e07e13c23f17797d642981511df">01187<\/a>     <span class="keyword">virtual<\/span>       <a class="code" href="classTiXmlComment.html" title="An XML comment.">TiXmlComment<\/a>*  <a class="code" href="classTiXmlComment.html#acc7c7e07e13c23f17797d642981511df" title="Cast to a more defined type. Will return null not of the requested type.">ToComment<\/a>()        { <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01188	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01188"><\/a>01188 $/;"	a
l01191	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01191"><\/a>01191     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlComment.html#af3ac1b99fbbe9ea4fb6e14146156e43e" title="Walk the XML tree visiting this node and all of its children.">Accept<\/a>( <a class="code" href="classTiXmlVisitor.html" title="Implements the interface to the &amp;quot;Visitor pattern&amp;quot; (see the Accept() method...">TiXmlVisitor<\/a>* visitor ) <span class="keyword">const<\/span>;$/;"	a
l01192	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01192"><\/a>01192 $/;"	a
l01193	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01193"><\/a>01193 <span class="keyword">protected<\/span>:$/;"	a
l01194	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01194"><\/a>01194     <span class="keywordtype">void<\/span> CopyTo( <a class="code" href="classTiXmlComment.html" title="An XML comment.">TiXmlComment<\/a>* target ) <span class="keyword">const<\/span>;$/;"	a
l01195	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01195"><\/a>01195 $/;"	a
l01196	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01196"><\/a>01196     <span class="comment">\/\/ used to be public<\/span>$/;"	a
l01197	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01197"><\/a>01197 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01198	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01198"><\/a>01198 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	a
l01199	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01199"><\/a>01199 <span class="preprocessor">    #endif<\/span>$/;"	a
l01200	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01200"><\/a>01200 <span class="preprocessor"><\/span><span class="comment">\/\/  virtual void StreamOut( TIXML_OSTREAM * out ) const;<\/span>$/;"	a
l01201	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01201"><\/a>01201 $/;"	a
l01202	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01202"><\/a>01202 <span class="keyword">private<\/span>:$/;"	a
l01203	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01203"><\/a>01203 $/;"	a
l01204	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01204"><\/a>01204 };$/;"	a
l01205	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01205"><\/a>01205 $/;"	a
l01206	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01206"><\/a>01206 $/;"	a
l01212	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01212"><\/a><a class="code" href="classTiXmlText.html">01212<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlText.html" title="XML text.">TiXmlText<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>$/;"	a
l01213	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01213"><\/a>01213 {$/;"	a
l01214	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01214"><\/a>01214     <span class="keyword">friend<\/span> <span class="keyword">class <\/span><a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>;$/;"	a
l01215	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01215"><\/a>01215 <span class="keyword">public<\/span>:$/;"	a
l01220	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01220"><\/a><a class="code" href="classTiXmlText.html#af659e77c6b87d684827f35a8f4895960">01220<\/a>     <a class="code" href="classTiXmlText.html#af659e77c6b87d684827f35a8f4895960" title="Constructor for text element.">TiXmlText<\/a> (<span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * initValue ) : <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a> (<a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>::TINYXML_TEXT)$/;"	a
l01221	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01221"><\/a>01221     {$/;"	a
l01222	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01222"><\/a>01222         <a class="code" href="classTiXmlNode.html#a2a38329ca5d3f28f98ce932b8299ae90" title="Changes the value of the node.">SetValue<\/a>( initValue );$/;"	a
l01223	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01223"><\/a>01223         cdata = <span class="keyword">false<\/span>;$/;"	a
l01224	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01224"><\/a>01224     }$/;"	a
l01225	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01225"><\/a>01225     <span class="keyword">virtual<\/span> ~<a class="code" href="classTiXmlText.html" title="XML text.">TiXmlText<\/a>() {}$/;"	a
l01226	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01226"><\/a>01226 $/;"	a
l01227	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01227"><\/a>01227 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01229	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01229"><\/a><a class="code" href="classTiXmlText.html#a439792f6183a3d3fb6f2bc2b16fa5691">01229<\/a> <span class="preprocessor">    TiXmlText( const std::string&amp; initValue ) : TiXmlNode (TiXmlNode::TINYXML_TEXT)<\/span>$/;"	a
l01230	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01230"><\/a>01230 <span class="preprocessor"><\/span>    {$/;"	a
l01231	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01231"><\/a>01231         <a class="code" href="classTiXmlNode.html#a2a38329ca5d3f28f98ce932b8299ae90" title="Changes the value of the node.">SetValue<\/a>( initValue );$/;"	a
l01232	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01232"><\/a>01232         cdata = <span class="keyword">false<\/span>;$/;"	a
l01233	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01233"><\/a>01233     }$/;"	a
l01234	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01234"><\/a>01234 <span class="preprocessor">    #endif<\/span>$/;"	a
l01235	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01235"><\/a>01235 <span class="preprocessor"><\/span>$/;"	a
l01236	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01236"><\/a>01236     <a class="code" href="classTiXmlText.html#af659e77c6b87d684827f35a8f4895960" title="Constructor for text element.">TiXmlText<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlText.html" title="XML text.">TiXmlText<\/a>&amp; copy ) : <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>::TINYXML_TEXT )   { copy.CopyTo( <span class="keyword">this<\/span> ); }$/;"	a
l01237	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01237"><\/a>01237     <a class="code" href="classTiXmlText.html" title="XML text.">TiXmlText<\/a>&amp; operator=( <span class="keyword">const<\/span> <a class="code" href="classTiXmlText.html" title="XML text.">TiXmlText<\/a>&amp; base )                               { base.CopyTo( <span class="keyword">this<\/span> ); <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>; }$/;"	a
l01238	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01238"><\/a>01238 $/;"	a
l01239	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01239"><\/a>01239     <span class="comment">\/\/ Write this text object to a FILE stream.<\/span>$/;"	a
l01240	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01240"><\/a>01240     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlText.html#a0cafbf6f236c7f02d12b2bffc2b7976b" title="All TinyXml classes can print themselves to a filestream or the string class (TiXmlString...">Print<\/a>( FILE* cfile, <span class="keywordtype">int<\/span> depth ) <span class="keyword">const<\/span>;$/;"	a
l01241	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01241"><\/a>01241 $/;"	a
l01243	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01243"><\/a><a class="code" href="classTiXmlText.html#ad1a6a6b83fa2271022dd97c072a2b586">01243<\/a>     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlText.html#ad1a6a6b83fa2271022dd97c072a2b586" title="Queries whether this represents text using a CDATA section.">CDATA<\/a>()<span class="keyword"> const              <\/span>{ <span class="keywordflow">return<\/span> cdata; }$/;"	a
l01245	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01245"><\/a><a class="code" href="classTiXmlText.html#acb17ff7c5d09b2c839393445a3de5ea9">01245<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlText.html#acb17ff7c5d09b2c839393445a3de5ea9" title="Turns on or off a CDATA representation of text.">SetCDATA<\/a>( <span class="keywordtype">bool<\/span> _cdata )    { cdata = _cdata; }$/;"	a
l01246	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01246"><\/a>01246 $/;"	a
l01247	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01247"><\/a>01247     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* Parse( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	a
l01248	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01248"><\/a>01248 $/;"	a
l01249	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01249"><\/a><a class="code" href="classTiXmlText.html#a895bf34ffad17f7439ab2a52b9651648">01249<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlText.html" title="XML text.">TiXmlText<\/a>* <a class="code" href="classTiXmlText.html#a895bf34ffad17f7439ab2a52b9651648" title="Cast to a more defined type. Will return null not of the requested type.">ToText<\/a>()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01250	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01250"><\/a><a class="code" href="classTiXmlText.html#ae7c3a8fd3e4dbf6c0c4363a943d72f5b">01250<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlText.html" title="XML text.">TiXmlText<\/a>*       <a class="code" href="classTiXmlText.html#ae7c3a8fd3e4dbf6c0c4363a943d72f5b" title="Cast to a more defined type. Will return null not of the requested type.">ToText<\/a>()       { <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01251	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01251"><\/a>01251 $/;"	a
l01254	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01254"><\/a>01254     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlText.html#a8483d4415ce9de6c4fa8f63d067d5de6" title="Walk the XML tree visiting this node and all of its children.">Accept<\/a>( <a class="code" href="classTiXmlVisitor.html" title="Implements the interface to the &amp;quot;Visitor pattern&amp;quot; (see the Accept() method...">TiXmlVisitor<\/a>* content ) <span class="keyword">const<\/span>;$/;"	a
l01255	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01255"><\/a>01255 $/;"	a
l01256	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01256"><\/a>01256 <span class="keyword">protected<\/span> :$/;"	a
l01258	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01258"><\/a>01258     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlText.html#a0c411e93a27537369479d034cc82da3b" title="[internal use] Creates a new Element and returns it.">Clone<\/a>() <span class="keyword">const<\/span>;$/;"	a
l01259	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01259"><\/a>01259     <span class="keywordtype">void<\/span> CopyTo( <a class="code" href="classTiXmlText.html" title="XML text.">TiXmlText<\/a>* target ) <span class="keyword">const<\/span>;$/;"	a
l01260	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01260"><\/a>01260 $/;"	a
l01261	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01261"><\/a>01261     <span class="keywordtype">bool<\/span> Blank() <span class="keyword">const<\/span>; <span class="comment">\/\/ returns true if all white space and new lines<\/span>$/;"	a
l01262	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01262"><\/a>01262     <span class="comment">\/\/ [internal use]<\/span>$/;"	a
l01263	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01263"><\/a>01263 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01264	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01264"><\/a>01264 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	a
l01265	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01265"><\/a>01265 <span class="preprocessor">    #endif<\/span>$/;"	a
l01266	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01266"><\/a>01266 <span class="preprocessor"><\/span>$/;"	a
l01267	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01267"><\/a>01267 <span class="keyword">private<\/span>:$/;"	a
l01268	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01268"><\/a>01268     <span class="keywordtype">bool<\/span> cdata;         <span class="comment">\/\/ true if this should be input and output as a CDATA style text element<\/span>$/;"	a
l01269	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01269"><\/a>01269 };$/;"	a
l01270	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01270"><\/a>01270 $/;"	a
l01271	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01271"><\/a>01271 $/;"	a
l01285	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01285"><\/a><a class="code" href="classTiXmlDeclaration.html">01285<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlDeclaration.html" title="In correct XML the declaration is the first entry in the file.">TiXmlDeclaration<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>$/;"	a
l01286	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01286"><\/a>01286 {$/;"	a
l01287	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01287"><\/a>01287 <span class="keyword">public<\/span>:$/;"	a
l01289	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01289"><\/a><a class="code" href="classTiXmlDeclaration.html#aa0484d059bea0ea1acb47c9094382d79">01289<\/a>     <a class="code" href="classTiXmlDeclaration.html#aa0484d059bea0ea1acb47c9094382d79" title="Construct an empty declaration.">TiXmlDeclaration<\/a>()   : <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>::TINYXML_DECLARATION ) {}$/;"	a
l01290	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01290"><\/a>01290 $/;"	a
l01291	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01291"><\/a>01291 <span class="preprocessor">#ifdef TIXML_USE_STL<\/span>$/;"	a
l01293	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01293"><\/a>01293 <span class="preprocessor">    TiXmlDeclaration(   const std::string&amp; _version,<\/span>$/;"	a
l01294	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01294"><\/a>01294 <span class="preprocessor"><\/span>                        <span class="keyword">const<\/span> std::string&amp; _encoding,$/;"	a
l01295	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01295"><\/a>01295                         <span class="keyword">const<\/span> std::string&amp; _standalone );$/;"	a
l01296	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01296"><\/a>01296 <span class="preprocessor">#endif<\/span>$/;"	a
l01297	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01297"><\/a>01297 <span class="preprocessor"><\/span>$/;"	a
l01299	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01299"><\/a>01299     <a class="code" href="classTiXmlDeclaration.html#aa0484d059bea0ea1acb47c9094382d79" title="Construct an empty declaration.">TiXmlDeclaration<\/a>(   <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _version,$/;"	a
l01300	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01300"><\/a>01300                         <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _encoding,$/;"	a
l01301	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01301"><\/a>01301                         <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _standalone );$/;"	a
l01302	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01302"><\/a>01302 $/;"	a
l01303	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01303"><\/a>01303     <a class="code" href="classTiXmlDeclaration.html#aa0484d059bea0ea1acb47c9094382d79" title="Construct an empty declaration.">TiXmlDeclaration<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlDeclaration.html" title="In correct XML the declaration is the first entry in the file.">TiXmlDeclaration<\/a>&amp; copy );$/;"	a
l01304	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01304"><\/a>01304     <a class="code" href="classTiXmlDeclaration.html" title="In correct XML the declaration is the first entry in the file.">TiXmlDeclaration<\/a>&amp; operator=( <span class="keyword">const<\/span> <a class="code" href="classTiXmlDeclaration.html" title="In correct XML the declaration is the first entry in the file.">TiXmlDeclaration<\/a>&amp; copy );$/;"	a
l01305	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01305"><\/a>01305 $/;"	a
l01306	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01306"><\/a>01306     <span class="keyword">virtual<\/span> ~<a class="code" href="classTiXmlDeclaration.html" title="In correct XML the declaration is the first entry in the file.">TiXmlDeclaration<\/a>() {}$/;"	a
l01307	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01307"><\/a>01307 $/;"	a
l01309	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01309"><\/a><a class="code" href="classTiXmlDeclaration.html#a02ee557b1a4545c3219ed377c103ec76">01309<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *<a class="code" href="classTiXmlDeclaration.html#a02ee557b1a4545c3219ed377c103ec76" title="Version. Will return an empty string if none was found.">Version<\/a>()<span class="keyword"> const         <\/span>{ <span class="keywordflow">return<\/span> version.c_str (); }$/;"	a
l01311	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01311"><\/a><a class="code" href="classTiXmlDeclaration.html#a5d974231f9e9a2f0542f15f3a46cdb76">01311<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *<a class="code" href="classTiXmlDeclaration.html#a5d974231f9e9a2f0542f15f3a46cdb76" title="Encoding. Will return an empty string if none was found.">Encoding<\/a>()<span class="keyword"> const        <\/span>{ <span class="keywordflow">return<\/span> encoding.c_str (); }$/;"	a
l01313	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01313"><\/a><a class="code" href="classTiXmlDeclaration.html#a9ff06afc033d7ef730ec7c6825b97ad9">01313<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> *<a class="code" href="classTiXmlDeclaration.html#a9ff06afc033d7ef730ec7c6825b97ad9" title="Is this a standalone document?">Standalone<\/a>()<span class="keyword"> const      <\/span>{ <span class="keywordflow">return<\/span> standalone.c_str (); }$/;"	a
l01314	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01314"><\/a>01314 $/;"	a
l01316	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01316"><\/a>01316     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlDeclaration.html#a7cf459186040141cda7a180a6585ce2e" title="Creates a copy of this Declaration and returns it.">Clone<\/a>() <span class="keyword">const<\/span>;$/;"	a
l01317	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01317"><\/a>01317     <span class="comment">\/\/ Print this declaration to a FILE stream.<\/span>$/;"	a
l01318	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01318"><\/a>01318     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> Print( FILE* cfile, <span class="keywordtype">int<\/span> depth, TIXML_STRING* str ) <span class="keyword">const<\/span>;$/;"	a
l01319	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01319"><\/a><a class="code" href="classTiXmlDeclaration.html#abf6303db4bd05b5be554036817ff1cb4">01319<\/a>     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlDeclaration.html#abf6303db4bd05b5be554036817ff1cb4" title="All TinyXml classes can print themselves to a filestream or the string class (TiXmlString...">Print<\/a>( FILE* cfile, <span class="keywordtype">int<\/span> depth )<span class="keyword"> const <\/span>{$/;"	a
l01320	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01320"><\/a>01320         Print( cfile, depth, 0 );$/;"	a
l01321	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01321"><\/a>01321     }$/;"	a
l01322	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01322"><\/a>01322 $/;"	a
l01323	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01323"><\/a>01323     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* Parse( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	a
l01324	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01324"><\/a>01324 $/;"	a
l01325	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01325"><\/a><a class="code" href="classTiXmlDeclaration.html#a1e085d3fefd1dbf5ccdbff729931a967">01325<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlDeclaration.html" title="In correct XML the declaration is the first entry in the file.">TiXmlDeclaration<\/a>* <a class="code" href="classTiXmlDeclaration.html#a1e085d3fefd1dbf5ccdbff729931a967" title="Cast to a more defined type. Will return null not of the requested type.">ToDeclaration<\/a>()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01326	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01326"><\/a><a class="code" href="classTiXmlDeclaration.html#a6bd3d1daddcaeb9543c24bfd090969ce">01326<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlDeclaration.html" title="In correct XML the declaration is the first entry in the file.">TiXmlDeclaration<\/a>*       <a class="code" href="classTiXmlDeclaration.html#a6bd3d1daddcaeb9543c24bfd090969ce" title="Cast to a more defined type. Will return null not of the requested type.">ToDeclaration<\/a>()       { <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01327	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01327"><\/a>01327 $/;"	a
l01330	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01330"><\/a>01330     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDeclaration.html#a22315a535983b86535cdba3458669e3e" title="Walk the XML tree visiting this node and all of its children.">Accept<\/a>( <a class="code" href="classTiXmlVisitor.html" title="Implements the interface to the &amp;quot;Visitor pattern&amp;quot; (see the Accept() method...">TiXmlVisitor<\/a>* visitor ) <span class="keyword">const<\/span>;$/;"	a
l01331	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01331"><\/a>01331 $/;"	a
l01332	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01332"><\/a>01332 <span class="keyword">protected<\/span>:$/;"	a
l01333	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01333"><\/a>01333     <span class="keywordtype">void<\/span> CopyTo( <a class="code" href="classTiXmlDeclaration.html" title="In correct XML the declaration is the first entry in the file.">TiXmlDeclaration<\/a>* target ) <span class="keyword">const<\/span>;$/;"	a
l01334	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01334"><\/a>01334     <span class="comment">\/\/ used to be public<\/span>$/;"	a
l01335	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01335"><\/a>01335 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01336	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01336"><\/a>01336 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	a
l01337	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01337"><\/a>01337 <span class="preprocessor">    #endif<\/span>$/;"	a
l01338	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01338"><\/a>01338 <span class="preprocessor"><\/span>$/;"	a
l01339	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01339"><\/a>01339 <span class="keyword">private<\/span>:$/;"	a
l01340	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01340"><\/a>01340 $/;"	a
l01341	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01341"><\/a>01341     TIXML_STRING version;$/;"	a
l01342	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01342"><\/a>01342     TIXML_STRING encoding;$/;"	a
l01343	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01343"><\/a>01343     TIXML_STRING standalone;$/;"	a
l01344	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01344"><\/a>01344 };$/;"	a
l01345	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01345"><\/a>01345 $/;"	a
l01346	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01346"><\/a>01346 $/;"	a
l01354	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01354"><\/a><a class="code" href="classTiXmlUnknown.html">01354<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&amp;#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>$/;"	a
l01355	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01355"><\/a>01355 {$/;"	a
l01356	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01356"><\/a>01356 <span class="keyword">public<\/span>:$/;"	a
l01357	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01357"><\/a>01357     <a class="code" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&amp;#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a>() : <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>( TiXmlNode::TINYXML_UNKNOWN )    {}$/;"	a
l01358	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01358"><\/a>01358     <span class="keyword">virtual<\/span> ~<a class="code" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&amp;#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a>() {}$/;"	a
l01359	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01359"><\/a>01359 $/;"	a
l01360	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01360"><\/a>01360     <a class="code" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&amp;#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&amp;#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a>&amp; copy ) : <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>( TiXmlNode::TINYXML_UNKNOWN )      { copy.CopyTo( <span class="keyword">this<\/span> ); }$/;"	a
l01361	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01361"><\/a>01361     <a class="code" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&amp;#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a>&amp; operator=( <span class="keyword">const<\/span> <a class="code" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&amp;#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a>&amp; copy )                                     { copy.CopyTo( <span class="keyword">this<\/span> ); <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>; }$/;"	a
l01362	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01362"><\/a>01362 $/;"	a
l01364	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01364"><\/a>01364     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlUnknown.html#a0960bb7428b3f341da46244229604d73" title="Creates a copy of this Unknown and returns it.">Clone<\/a>() <span class="keyword">const<\/span>;$/;"	a
l01365	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01365"><\/a>01365     <span class="comment">\/\/ Print this Unknown to a FILE stream.<\/span>$/;"	a
l01366	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01366"><\/a>01366     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlUnknown.html#a31ba089a40fb5a1869750fce09b0bacb" title="All TinyXml classes can print themselves to a filestream or the string class (TiXmlString...">Print<\/a>( FILE* cfile, <span class="keywordtype">int<\/span> depth ) <span class="keyword">const<\/span>;$/;"	a
l01367	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01367"><\/a>01367 $/;"	a
l01368	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01368"><\/a>01368     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* Parse( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data, TiXmlEncoding encoding );$/;"	a
l01369	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01369"><\/a>01369 $/;"	a
l01370	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01370"><\/a><a class="code" href="classTiXmlUnknown.html#ab0313e5fe77987d746ac1a97a254419d">01370<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&amp;#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a>*     <a class="code" href="classTiXmlUnknown.html#ab0313e5fe77987d746ac1a97a254419d" title="Cast to a more defined type. Will return null not of the requested type.">ToUnknown<\/a>()<span class="keyword">     const   <\/span>{ <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01371	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01371"><\/a><a class="code" href="classTiXmlUnknown.html#a67c9fd22940e8c47f706a72cdd2e332c">01371<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&amp;#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a>*           <a class="code" href="classTiXmlUnknown.html#a67c9fd22940e8c47f706a72cdd2e332c" title="Cast to a more defined type. Will return null not of the requested type.">ToUnknown<\/a>()             { <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01372	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01372"><\/a>01372 $/;"	a
l01375	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01375"><\/a>01375     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlUnknown.html#ad7122e5135581b3c832a1a3217760a93" title="Walk the XML tree visiting this node and all of its children.">Accept<\/a>( <a class="code" href="classTiXmlVisitor.html" title="Implements the interface to the &amp;quot;Visitor pattern&amp;quot; (see the Accept() method...">TiXmlVisitor<\/a>* content ) <span class="keyword">const<\/span>;$/;"	a
l01376	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01376"><\/a>01376 $/;"	a
l01377	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01377"><\/a>01377 <span class="keyword">protected<\/span>:$/;"	a
l01378	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01378"><\/a>01378     <span class="keywordtype">void<\/span> CopyTo( <a class="code" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&amp;#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a>* target ) <span class="keyword">const<\/span>;$/;"	a
l01379	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01379"><\/a>01379 $/;"	a
l01380	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01380"><\/a>01380 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01381	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01381"><\/a>01381 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	a
l01382	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01382"><\/a>01382 <span class="preprocessor">    #endif<\/span>$/;"	a
l01383	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01383"><\/a>01383 <span class="preprocessor"><\/span>$/;"	a
l01384	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01384"><\/a>01384 <span class="keyword">private<\/span>:$/;"	a
l01385	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01385"><\/a>01385 $/;"	a
l01386	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01386"><\/a>01386 };$/;"	a
l01387	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01387"><\/a>01387 $/;"	a
l01388	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01388"><\/a>01388 $/;"	a
l01393	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01393"><\/a><a class="code" href="classTiXmlDocument.html">01393<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>$/;"	a
l01394	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01394"><\/a>01394 {$/;"	a
l01395	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01395"><\/a>01395 <span class="keyword">public<\/span>:$/;"	a
l01397	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01397"><\/a>01397     <a class="code" href="classTiXmlDocument.html#a9f5e84335708fde98400230f9f12659c" title="Create an empty document, that has no name.">TiXmlDocument<\/a>();$/;"	a
l01399	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01399"><\/a>01399     <a class="code" href="classTiXmlDocument.html#a9f5e84335708fde98400230f9f12659c" title="Create an empty document, that has no name.">TiXmlDocument<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * documentName );$/;"	a
l01400	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01400"><\/a>01400 $/;"	a
l01401	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01401"><\/a>01401 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01403	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01403"><\/a>01403 <span class="preprocessor">    TiXmlDocument( const std::string&amp; documentName );<\/span>$/;"	a
l01404	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01404"><\/a>01404 <span class="preprocessor"><\/span><span class="preprocessor">    #endif<\/span>$/;"	a
l01405	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01405"><\/a>01405 <span class="preprocessor"><\/span>$/;"	a
l01406	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01406"><\/a>01406     <a class="code" href="classTiXmlDocument.html#a9f5e84335708fde98400230f9f12659c" title="Create an empty document, that has no name.">TiXmlDocument<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>&amp; copy );$/;"	a
l01407	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01407"><\/a>01407     <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>&amp; operator=( <span class="keyword">const<\/span> <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>&amp; copy );$/;"	a
l01408	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01408"><\/a>01408 $/;"	a
l01409	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01409"><\/a>01409     <span class="keyword">virtual<\/span> ~<a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>() {}$/;"	a
l01410	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01410"><\/a>01410 $/;"	a
l01415	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01415"><\/a>01415     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#a4c852a889c02cf251117fd1d9fe1845f" title="Load a file using the current document value.">LoadFile<\/a>( TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	a
l01417	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01417"><\/a>01417     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#a21c0aeb0d0a720169ad4ac89523ebe93" title="Save a file using the current document value. Returns true if successful.">SaveFile<\/a>() <span class="keyword">const<\/span>;$/;"	a
l01419	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01419"><\/a>01419     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#a4c852a889c02cf251117fd1d9fe1845f" title="Load a file using the current document value.">LoadFile<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * filename, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	a
l01421	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01421"><\/a>01421     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#a21c0aeb0d0a720169ad4ac89523ebe93" title="Save a file using the current document value. Returns true if successful.">SaveFile<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * filename ) <span class="keyword">const<\/span>;$/;"	a
l01427	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01427"><\/a>01427     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#a4c852a889c02cf251117fd1d9fe1845f" title="Load a file using the current document value.">LoadFile<\/a>( FILE*, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	a
l01429	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01429"><\/a>01429     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#a21c0aeb0d0a720169ad4ac89523ebe93" title="Save a file using the current document value. Returns true if successful.">SaveFile<\/a>( FILE* ) <span class="keyword">const<\/span>;$/;"	a
l01430	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01430"><\/a>01430 $/;"	a
l01431	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01431"><\/a>01431 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01432	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01432"><\/a><a class="code" href="classTiXmlDocument.html#a18ae6ed34fed7991ebc220862dfac884">01432<\/a> <span class="preprocessor"><\/span>    <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#a4c852a889c02cf251117fd1d9fe1845f" title="Load a file using the current document value.">LoadFile<\/a>( <span class="keyword">const<\/span> std::string&amp; filename, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING )           $/;"	a
l01433	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01433"><\/a>01433     {$/;"	a
l01434	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01434"><\/a>01434         <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlDocument.html#a4c852a889c02cf251117fd1d9fe1845f" title="Load a file using the current document value.">LoadFile<\/a>( filename.c_str(), encoding );$/;"	a
l01435	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01435"><\/a>01435     }$/;"	a
l01436	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01436"><\/a><a class="code" href="classTiXmlDocument.html#a3d4fae0463f3f03679ba0b7cf6f2df52">01436<\/a>     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#a21c0aeb0d0a720169ad4ac89523ebe93" title="Save a file using the current document value. Returns true if successful.">SaveFile<\/a>( <span class="keyword">const<\/span> std::string&amp; filename ) <span class="keyword">const<\/span>      $/;"	a
l01437	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01437"><\/a>01437     {$/;"	a
l01438	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01438"><\/a>01438         <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlDocument.html#a21c0aeb0d0a720169ad4ac89523ebe93" title="Save a file using the current document value. Returns true if successful.">SaveFile<\/a>( filename.c_str() );$/;"	a
l01439	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01439"><\/a>01439     }$/;"	a
l01440	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01440"><\/a>01440 <span class="preprocessor">    #endif<\/span>$/;"	a
l01441	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01441"><\/a>01441 <span class="preprocessor"><\/span>$/;"	a
l01446	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01446"><\/a>01446     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlDocument.html#a17ebabe36926ef398e78dec0d0ad0378" title="Parse the given null terminated block of xml data.">Parse<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* p, TiXmlParsingData* data = 0, TiXmlEncoding encoding = TIXML_DEFAULT_ENCODING );$/;"	a
l01447	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01447"><\/a>01447 $/;"	a
l01452	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01452"><\/a><a class="code" href="classTiXmlDocument.html#ad09d17927f908f40efb406af2fb873be">01452<\/a>     <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlDocument.html#ad09d17927f908f40efb406af2fb873be" title="Get the root element -- the only top level element -- of the document.">RootElement<\/a>()<span class="keyword"> const     <\/span>{ <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#af4fb652f6bd79ae0d5ce7d0f7d3c0fba" title="Convenience function to get through elements.">FirstChildElement<\/a>(); }$/;"	a
l01453	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01453"><\/a>01453     <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlDocument.html#ad09d17927f908f40efb406af2fb873be" title="Get the root element -- the only top level element -- of the document.">RootElement<\/a>()                 { <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlNode.html#af4fb652f6bd79ae0d5ce7d0f7d3c0fba" title="Convenience function to get through elements.">FirstChildElement<\/a>(); }$/;"	a
l01454	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01454"><\/a>01454 $/;"	a
l01460	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01460"><\/a><a class="code" href="classTiXmlDocument.html#a6dfc01a6e5d58e56acd537dfd3bdeb29">01460<\/a>     <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#a6dfc01a6e5d58e56acd537dfd3bdeb29" title="If an error occurs, Error will be set to true.">Error<\/a>()<span class="keyword"> const                      <\/span>{ <span class="keywordflow">return<\/span> error; }$/;"	a
l01461	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01461"><\/a>01461 $/;"	a
l01463	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01463"><\/a><a class="code" href="classTiXmlDocument.html#a9d0f689f6e09ea494ea547be8d79c25e">01463<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * <a class="code" href="classTiXmlDocument.html#a9d0f689f6e09ea494ea547be8d79c25e" title="Contains a textual (english) description of the error if one occurs.">ErrorDesc<\/a>()<span class="keyword"> const  <\/span>{ <span class="keywordflow">return<\/span> errorDesc.c_str (); }$/;"	a
l01464	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01464"><\/a>01464 $/;"	a
l01468	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01468"><\/a><a class="code" href="classTiXmlDocument.html#af96fc2f3f9ec6422782bfe916c9e778f">01468<\/a>     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlDocument.html#af96fc2f3f9ec6422782bfe916c9e778f" title="Generally, you probably want the error string ( ErrorDesc() ).">ErrorId<\/a>()<span class="keyword">   const               <\/span>{ <span class="keywordflow">return<\/span> errorId; }$/;"	a
l01469	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01469"><\/a>01469 $/;"	a
l01477	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01477"><\/a><a class="code" href="classTiXmlDocument.html#af30efc75e804aa2e92fb8be3a8cb676e">01477<\/a>     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlDocument.html#af30efc75e804aa2e92fb8be3a8cb676e" title="Returns the location (if known) of the error.">ErrorRow<\/a>()<span class="keyword"> const    <\/span>{ <span class="keywordflow">return<\/span> errorLocation.row+1; }$/;"	a
l01478	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01478"><\/a><a class="code" href="classTiXmlDocument.html#aa90bc630ee5203c6109ca5fad3323649">01478<\/a>     <span class="keywordtype">int<\/span> <a class="code" href="classTiXmlDocument.html#aa90bc630ee5203c6109ca5fad3323649" title="The column where the error occured. See ErrorRow().">ErrorCol<\/a>()<span class="keyword"> const    <\/span>{ <span class="keywordflow">return<\/span> errorLocation.col+1; } $/;"	a
l01479	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01479"><\/a>01479 $/;"	a
l01504	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01504"><\/a><a class="code" href="classTiXmlDocument.html#a51dac56316f89b35bdb7d0d433ba988e">01504<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlDocument.html#a51dac56316f89b35bdb7d0d433ba988e" title="SetTabSize() allows the error reporting functions (ErrorRow() and ErrorCol()) to...">SetTabSize<\/a>( <span class="keywordtype">int<\/span> _tabsize )     { tabsize = _tabsize; }$/;"	a
l01505	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01505"><\/a>01505 $/;"	a
l01506	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01506"><\/a>01506     <span class="keywordtype">int<\/span> TabSize()<span class="keyword"> const <\/span>{ <span class="keywordflow">return<\/span> tabsize; }$/;"	a
l01507	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01507"><\/a>01507 $/;"	a
l01511	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01511"><\/a><a class="code" href="classTiXmlDocument.html#ac66b8c28db86363315712a3574e87c35">01511<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlDocument.html#ac66b8c28db86363315712a3574e87c35" title="If you have handled the error, it can be reset with this call.">ClearError<\/a>()                       {   error = <span class="keyword">false<\/span>; $/;"	a
l01512	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01512"><\/a>01512                                                 errorId = 0; $/;"	a
l01513	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01513"><\/a>01513                                                 errorDesc = <span class="stringliteral">&quot;&quot;<\/span>; $/;"	a
l01514	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01514"><\/a>01514                                                 errorLocation.row = errorLocation.col = 0; $/;"	a
l01515	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01515"><\/a>01515                                                 <span class="comment">\/\/errorLocation.last = 0; <\/span>$/;"	a
l01516	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01516"><\/a>01516                                             }$/;"	a
l01517	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01517"><\/a>01517 $/;"	a
l01519	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01519"><\/a><a class="code" href="classTiXmlDocument.html#af08389ec70ee9b2de7f800e206a18510">01519<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlDocument.html#af08389ec70ee9b2de7f800e206a18510" title="Write the document to standard out using formatted printing (&amp;quot;pretty print&amp;quot;)...">Print<\/a>()<span class="keyword"> const                      <\/span>{ <a class="code" href="classTiXmlDocument.html#af08389ec70ee9b2de7f800e206a18510" title="Write the document to standard out using formatted printing (&amp;quot;pretty print&amp;quot;)...">Print<\/a>( stdout, 0 ); }$/;"	a
l01520	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01520"><\/a>01520 $/;"	a
l01521	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01521"><\/a>01521     <span class="comment">\/* Write the document to a string using formatted printing (&quot;pretty print&quot;). This<\/span>$/;"	a
l01522	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01522"><\/a>01522 <span class="comment">        will allocate a character array (new char[]) and return it as a pointer. The<\/span>$/;"	a
l01523	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01523"><\/a>01523 <span class="comment">        calling code pust call delete[] on the return char* to avoid a memory leak.<\/span>$/;"	a
l01524	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01524"><\/a>01524 <span class="comment">    *\/<\/span>$/;"	a
l01525	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01525"><\/a>01525     <span class="comment">\/\/char* PrintToMemory() const; <\/span>$/;"	a
l01526	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01526"><\/a>01526 $/;"	a
l01528	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01528"><\/a>01528     <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlDocument.html#af08389ec70ee9b2de7f800e206a18510" title="Write the document to standard out using formatted printing (&amp;quot;pretty print&amp;quot;)...">Print<\/a>( FILE* cfile, <span class="keywordtype">int<\/span> depth = 0 ) <span class="keyword">const<\/span>;$/;"	a
l01529	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01529"><\/a>01529     <span class="comment">\/\/ [internal use]<\/span>$/;"	a
l01530	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01530"><\/a>01530     <span class="keywordtype">void<\/span> SetError( <span class="keywordtype">int<\/span> err, <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* errorLocation, TiXmlParsingData* prevData, TiXmlEncoding encoding );$/;"	a
l01531	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01531"><\/a>01531 $/;"	a
l01532	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01532"><\/a><a class="code" href="classTiXmlDocument.html#a1dc977bde3e4fe85a8eb9d88a35ef5a4">01532<\/a>     <span class="keyword">virtual<\/span> <span class="keyword">const<\/span> <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>*    <a class="code" href="classTiXmlDocument.html#a1dc977bde3e4fe85a8eb9d88a35ef5a4" title="Cast to a more defined type. Will return null not of the requested type.">ToDocument<\/a>()<span class="keyword">    const <\/span>{ <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01533	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01533"><\/a><a class="code" href="classTiXmlDocument.html#a1025d942a1f328fd742d545e37efdd42">01533<\/a>     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>*          <a class="code" href="classTiXmlDocument.html#a1025d942a1f328fd742d545e37efdd42" title="Cast to a more defined type. Will return null not of the requested type.">ToDocument<\/a>()          { <span class="keywordflow">return<\/span> <span class="keyword">this<\/span>; } $/;"	a
l01534	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01534"><\/a>01534 $/;"	a
l01537	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01537"><\/a>01537     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlDocument.html#aa545aae325d9752ad64120bc4ecf939a" title="Walk the XML tree visiting this node and all of its children.">Accept<\/a>( <a class="code" href="classTiXmlVisitor.html" title="Implements the interface to the &amp;quot;Visitor pattern&amp;quot; (see the Accept() method...">TiXmlVisitor<\/a>* content ) <span class="keyword">const<\/span>;$/;"	a
l01538	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01538"><\/a>01538 $/;"	a
l01539	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01539"><\/a>01539 <span class="keyword">protected<\/span> :$/;"	a
l01540	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01540"><\/a>01540     <span class="comment">\/\/ [internal use]<\/span>$/;"	a
l01541	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01541"><\/a>01541     <span class="keyword">virtual<\/span> <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlDocument.html#a4968661cab4a1f44a23329c6f8db1907" title="Create an exact duplicate of this node and return it.">Clone<\/a>() <span class="keyword">const<\/span>;$/;"	a
l01542	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01542"><\/a>01542 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01543	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01543"><\/a>01543 <span class="preprocessor"><\/span>    <span class="keyword">virtual<\/span> <span class="keywordtype">void<\/span> StreamIn( std::istream * in, TIXML_STRING * tag );$/;"	a
l01544	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01544"><\/a>01544 <span class="preprocessor">    #endif<\/span>$/;"	a
l01545	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01545"><\/a>01545 <span class="preprocessor"><\/span>$/;"	a
l01546	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01546"><\/a>01546 <span class="keyword">private<\/span>:$/;"	a
l01547	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01547"><\/a>01547     <span class="keywordtype">void<\/span> CopyTo( <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>* target ) <span class="keyword">const<\/span>;$/;"	a
l01548	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01548"><\/a>01548 $/;"	a
l01549	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01549"><\/a>01549     <span class="keywordtype">bool<\/span> error;$/;"	a
l01550	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01550"><\/a>01550     <span class="keywordtype">int<\/span>  errorId;$/;"	a
l01551	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01551"><\/a>01551     TIXML_STRING errorDesc;$/;"	a
l01552	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01552"><\/a>01552     <span class="keywordtype">int<\/span> tabsize;$/;"	a
l01553	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01553"><\/a>01553     TiXmlCursor errorLocation;$/;"	a
l01554	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01554"><\/a>01554     <span class="keywordtype">bool<\/span> useMicrosoftBOM;       <span class="comment">\/\/ the UTF-8 BOM were found when read. Note this, and try to write.<\/span>$/;"	a
l01555	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01555"><\/a>01555 };$/;"	a
l01556	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01556"><\/a>01556 $/;"	a
l01557	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01557"><\/a>01557 $/;"	a
l01638	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01638"><\/a><a class="code" href="classTiXmlHandle.html">01638<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlHandle.html" title="A TiXmlHandle is a class that wraps a node pointer with null checks; this is an incredibly...">TiXmlHandle<\/a>$/;"	a
l01639	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01639"><\/a>01639 {$/;"	a
l01640	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01640"><\/a>01640 <span class="keyword">public<\/span>:$/;"	a
l01642	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01642"><\/a><a class="code" href="classTiXmlHandle.html#aba18fd7bdefb942ecdea4bf4b8e29ec8">01642<\/a>     <a class="code" href="classTiXmlHandle.html#aba18fd7bdefb942ecdea4bf4b8e29ec8" title="Create a handle from any node (at any depth of the tree.) This can be a null pointer...">TiXmlHandle<\/a>( <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* _node )                 { this-&gt;node = _node; }$/;"	a
l01644	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01644"><\/a><a class="code" href="classTiXmlHandle.html#a236d7855e1e56ccc7b980630c48c7fd7">01644<\/a>     <a class="code" href="classTiXmlHandle.html#a236d7855e1e56ccc7b980630c48c7fd7" title="Copy constructor.">TiXmlHandle<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlHandle.html" title="A TiXmlHandle is a class that wraps a node pointer with null checks; this is an incredibly...">TiXmlHandle<\/a>&amp; ref )           { this-&gt;node = ref.node; }$/;"	a
l01645	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01645"><\/a>01645     <a class="code" href="classTiXmlHandle.html" title="A TiXmlHandle is a class that wraps a node pointer with null checks; this is an incredibly...">TiXmlHandle<\/a> operator=( <span class="keyword">const<\/span> <a class="code" href="classTiXmlHandle.html" title="A TiXmlHandle is a class that wraps a node pointer with null checks; this is an incredibly...">TiXmlHandle<\/a>&amp; ref ) { <span class="keywordflow">if<\/span> ( &amp;ref != <span class="keyword">this<\/span> ) this-&gt;node = ref.node; <span class="keywordflow">return<\/span> *<span class="keyword">this<\/span>; }$/;"	a
l01646	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01646"><\/a>01646 $/;"	a
l01648	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01648"><\/a>01648     <a class="code" href="classTiXmlHandle.html" title="A TiXmlHandle is a class that wraps a node pointer with null checks; this is an incredibly...">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#acdb1faaf88a700b40ca2c8d9aee21139" title="Return a handle to the first child node.">FirstChild<\/a>() <span class="keyword">const<\/span>;$/;"	a
l01650	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01650"><\/a>01650     <a class="code" href="classTiXmlHandle.html" title="A TiXmlHandle is a class that wraps a node pointer with null checks; this is an incredibly...">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#acdb1faaf88a700b40ca2c8d9aee21139" title="Return a handle to the first child node.">FirstChild<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * value ) <span class="keyword">const<\/span>;$/;"	a
l01652	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01652"><\/a>01652     <a class="code" href="classTiXmlHandle.html" title="A TiXmlHandle is a class that wraps a node pointer with null checks; this is an incredibly...">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#a24d1112e995e937e4dddb202d4113d4a" title="Return a handle to the first child element.">FirstChildElement<\/a>() <span class="keyword">const<\/span>;$/;"	a
l01654	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01654"><\/a>01654     <a class="code" href="classTiXmlHandle.html" title="A TiXmlHandle is a class that wraps a node pointer with null checks; this is an incredibly...">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#a24d1112e995e937e4dddb202d4113d4a" title="Return a handle to the first child element.">FirstChildElement<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span> * value ) <span class="keyword">const<\/span>;$/;"	a
l01655	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01655"><\/a>01655 $/;"	a
l01659	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01659"><\/a>01659     <a class="code" href="classTiXmlHandle.html" title="A TiXmlHandle is a class that wraps a node pointer with null checks; this is an incredibly...">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#a072492b4be1acdb0db2d03cd8f71ccc4" title="Return a handle to the &amp;quot;index&amp;quot; child with the given name.">Child<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* value, <span class="keywordtype">int<\/span> index ) <span class="keyword">const<\/span>;$/;"	a
l01663	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01663"><\/a>01663     <a class="code" href="classTiXmlHandle.html" title="A TiXmlHandle is a class that wraps a node pointer with null checks; this is an incredibly...">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#a072492b4be1acdb0db2d03cd8f71ccc4" title="Return a handle to the &amp;quot;index&amp;quot; child with the given name.">Child<\/a>( <span class="keywordtype">int<\/span> index ) <span class="keyword">const<\/span>;$/;"	a
l01668	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01668"><\/a>01668     <a class="code" href="classTiXmlHandle.html" title="A TiXmlHandle is a class that wraps a node pointer with null checks; this is an incredibly...">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#a979a3f850984a176ee884e394c7eed2d" title="Return a handle to the &amp;quot;index&amp;quot; child element with the given name.">ChildElement<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* value, <span class="keywordtype">int<\/span> index ) <span class="keyword">const<\/span>;$/;"	a
l01673	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01673"><\/a>01673     <a class="code" href="classTiXmlHandle.html" title="A TiXmlHandle is a class that wraps a node pointer with null checks; this is an incredibly...">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#a979a3f850984a176ee884e394c7eed2d" title="Return a handle to the &amp;quot;index&amp;quot; child element with the given name.">ChildElement<\/a>( <span class="keywordtype">int<\/span> index ) <span class="keyword">const<\/span>;$/;"	a
l01674	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01674"><\/a>01674 $/;"	a
l01675	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01675"><\/a>01675 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01676	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01676"><\/a>01676 <span class="preprocessor"><\/span>    <a class="code" href="classTiXmlHandle.html" title="A TiXmlHandle is a class that wraps a node pointer with null checks; this is an incredibly...">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#acdb1faaf88a700b40ca2c8d9aee21139" title="Return a handle to the first child node.">FirstChild<\/a>( <span class="keyword">const<\/span> std::string&amp; _value )<span class="keyword"> const               <\/span>{ <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlHandle.html#acdb1faaf88a700b40ca2c8d9aee21139" title="Return a handle to the first child node.">FirstChild<\/a>( _value.c_str() ); }$/;"	a
l01677	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01677"><\/a>01677     <a class="code" href="classTiXmlHandle.html" title="A TiXmlHandle is a class that wraps a node pointer with null checks; this is an incredibly...">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#a24d1112e995e937e4dddb202d4113d4a" title="Return a handle to the first child element.">FirstChildElement<\/a>( <span class="keyword">const<\/span> std::string&amp; _value )<span class="keyword"> const        <\/span>{ <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlHandle.html#a24d1112e995e937e4dddb202d4113d4a" title="Return a handle to the first child element.">FirstChildElement<\/a>( _value.c_str() ); }$/;"	a
l01678	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01678"><\/a>01678 $/;"	a
l01679	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01679"><\/a>01679     <a class="code" href="classTiXmlHandle.html" title="A TiXmlHandle is a class that wraps a node pointer with null checks; this is an incredibly...">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#a072492b4be1acdb0db2d03cd8f71ccc4" title="Return a handle to the &amp;quot;index&amp;quot; child with the given name.">Child<\/a>( <span class="keyword">const<\/span> std::string&amp; _value, <span class="keywordtype">int<\/span> index )<span class="keyword"> const         <\/span>{ <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlHandle.html#a072492b4be1acdb0db2d03cd8f71ccc4" title="Return a handle to the &amp;quot;index&amp;quot; child with the given name.">Child<\/a>( _value.c_str(), index ); }$/;"	a
l01680	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01680"><\/a>01680     <a class="code" href="classTiXmlHandle.html" title="A TiXmlHandle is a class that wraps a node pointer with null checks; this is an incredibly...">TiXmlHandle<\/a> <a class="code" href="classTiXmlHandle.html#a979a3f850984a176ee884e394c7eed2d" title="Return a handle to the &amp;quot;index&amp;quot; child element with the given name.">ChildElement<\/a>( <span class="keyword">const<\/span> std::string&amp; _value, <span class="keywordtype">int<\/span> index )<span class="keyword"> const  <\/span>{ <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlHandle.html#a979a3f850984a176ee884e394c7eed2d" title="Return a handle to the &amp;quot;index&amp;quot; child element with the given name.">ChildElement<\/a>( _value.c_str(), index ); }$/;"	a
l01681	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01681"><\/a>01681 <span class="preprocessor">    #endif<\/span>$/;"	a
l01682	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01682"><\/a>01682 <span class="preprocessor"><\/span>$/;"	a
l01685	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01685"><\/a><a class="code" href="classTiXmlHandle.html#af678e5088e83be67baf76f699756f2c3">01685<\/a>     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlHandle.html#af678e5088e83be67baf76f699756f2c3" title="Return the handle as a TiXmlNode.">ToNode<\/a>()<span class="keyword"> const           <\/span>{ <span class="keywordflow">return<\/span> node; } $/;"	a
l01688	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01688"><\/a><a class="code" href="classTiXmlHandle.html#abc6e7ed383a5fe1e52b0c0004b457b9e">01688<\/a>     <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlHandle.html#abc6e7ed383a5fe1e52b0c0004b457b9e" title="Return the handle as a TiXmlElement.">ToElement<\/a>()<span class="keyword"> const     <\/span>{ <span class="keywordflow">return<\/span> ( ( node &amp;&amp; node-&gt;ToElement() ) ? node-&gt;ToElement() : 0 ); }$/;"	a
l01691	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01691"><\/a><a class="code" href="classTiXmlHandle.html#a4ac53a652296203a5b5e13854d923586">01691<\/a>     <a class="code" href="classTiXmlText.html" title="XML text.">TiXmlText<\/a>* <a class="code" href="classTiXmlHandle.html#a4ac53a652296203a5b5e13854d923586" title="Return the handle as a TiXmlText.">ToText<\/a>()<span class="keyword"> const           <\/span>{ <span class="keywordflow">return<\/span> ( ( node &amp;&amp; node-&gt;ToText() ) ? node-&gt;ToText() : 0 ); }$/;"	a
l01694	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01694"><\/a><a class="code" href="classTiXmlHandle.html#a1381c17507a130767b1e23afc93b3674">01694<\/a>     <a class="code" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&amp;#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a>* <a class="code" href="classTiXmlHandle.html#a1381c17507a130767b1e23afc93b3674" title="Return the handle as a TiXmlUnknown.">ToUnknown<\/a>()<span class="keyword"> const     <\/span>{ <span class="keywordflow">return<\/span> ( ( node &amp;&amp; node-&gt;ToUnknown() ) ? node-&gt;ToUnknown() : 0 ); }$/;"	a
l01695	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01695"><\/a>01695 $/;"	a
l01699	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01699"><\/a><a class="code" href="classTiXmlHandle.html#ab44b723a8dc9af72838a303c079d0376">01699<\/a>     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* <a class="code" href="classTiXmlHandle.html#ab44b723a8dc9af72838a303c079d0376">Node<\/a>()<span class="keyword"> const         <\/span>{ <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlHandle.html#af678e5088e83be67baf76f699756f2c3" title="Return the handle as a TiXmlNode.">ToNode<\/a>(); } $/;"	a
l01703	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01703"><\/a><a class="code" href="classTiXmlHandle.html#acb5fe8388a526289ea65e817a51e05e7">01703<\/a>     <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>* <a class="code" href="classTiXmlHandle.html#acb5fe8388a526289ea65e817a51e05e7">Element<\/a>()<span class="keyword"> const   <\/span>{ <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlHandle.html#abc6e7ed383a5fe1e52b0c0004b457b9e" title="Return the handle as a TiXmlElement.">ToElement<\/a>(); }$/;"	a
l01707	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01707"><\/a><a class="code" href="classTiXmlHandle.html#a9fc739c8a18d160006f82572fc143d13">01707<\/a>     <a class="code" href="classTiXmlText.html" title="XML text.">TiXmlText<\/a>* <a class="code" href="classTiXmlHandle.html#a9fc739c8a18d160006f82572fc143d13">Text<\/a>()<span class="keyword"> const         <\/span>{ <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlHandle.html#a4ac53a652296203a5b5e13854d923586" title="Return the handle as a TiXmlText.">ToText<\/a>(); }$/;"	a
l01711	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01711"><\/a><a class="code" href="classTiXmlHandle.html#a49675b74357ba2aae124657a9a1ef465">01711<\/a>     <a class="code" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&amp;#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a>* <a class="code" href="classTiXmlHandle.html#a49675b74357ba2aae124657a9a1ef465">Unknown<\/a>()<span class="keyword"> const   <\/span>{ <span class="keywordflow">return<\/span> <a class="code" href="classTiXmlHandle.html#a1381c17507a130767b1e23afc93b3674" title="Return the handle as a TiXmlUnknown.">ToUnknown<\/a>(); }$/;"	a
l01712	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01712"><\/a>01712 $/;"	a
l01713	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01713"><\/a>01713 <span class="keyword">private<\/span>:$/;"	a
l01714	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01714"><\/a>01714     <a class="code" href="classTiXmlNode.html" title="The parent class for everything in the Document Object Model.">TiXmlNode<\/a>* node;$/;"	a
l01715	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01715"><\/a>01715 };$/;"	a
l01716	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01716"><\/a>01716 $/;"	a
l01717	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01717"><\/a>01717 $/;"	a
l01737	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01737"><\/a><a class="code" href="classTiXmlPrinter.html">01737<\/a> <span class="keyword">class <\/span><a class="code" href="classTiXmlPrinter.html" title="Print to memory functionality.">TiXmlPrinter<\/a> : <span class="keyword">public<\/span> <a class="code" href="classTiXmlVisitor.html" title="Implements the interface to the &amp;quot;Visitor pattern&amp;quot; (see the Accept() method...">TiXmlVisitor<\/a>$/;"	a
l01738	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01738"><\/a>01738 {$/;"	a
l01739	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01739"><\/a>01739 <span class="keyword">public<\/span>:$/;"	a
l01740	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01740"><\/a>01740     <a class="code" href="classTiXmlPrinter.html" title="Print to memory functionality.">TiXmlPrinter<\/a>() : depth( 0 ), simpleTextPrint( <span class="keyword">false<\/span> ),$/;"	a
l01741	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01741"><\/a>01741                      buffer(), indent( <span class="stringliteral">&quot;    &quot;<\/span> ), lineBreak( <span class="stringliteral">&quot;\\n&quot;<\/span> ) {}$/;"	a
l01742	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01742"><\/a>01742 $/;"	a
l01743	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01743"><\/a>01743     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlPrinter.html#a799f4f0388570cbb54c0d3c345fef7c1" title="Visit a document.">VisitEnter<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>&amp; doc );$/;"	a
l01744	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01744"><\/a>01744     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlPrinter.html#a66b33edd76c538b462f789b797a4fdf2" title="Visit a document.">VisitExit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlDocument.html" title="Always the top level node.">TiXmlDocument<\/a>&amp; doc );$/;"	a
l01745	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01745"><\/a>01745 $/;"	a
l01746	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01746"><\/a>01746     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlPrinter.html#a799f4f0388570cbb54c0d3c345fef7c1" title="Visit a document.">VisitEnter<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>&amp; element, <span class="keyword">const<\/span> <a class="code" href="classTiXmlAttribute.html" title="An attribute is a name-value pair.">TiXmlAttribute<\/a>* firstAttribute );$/;"	a
l01747	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01747"><\/a>01747     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlPrinter.html#a66b33edd76c538b462f789b797a4fdf2" title="Visit a document.">VisitExit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlElement.html" title="The element is a container class.">TiXmlElement<\/a>&amp; element );$/;"	a
l01748	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01748"><\/a>01748 $/;"	a
l01749	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01749"><\/a>01749     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlPrinter.html#ace1b14d33eede2575c0743e2350f6a38" title="Visit a declaration.">Visit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlDeclaration.html" title="In correct XML the declaration is the first entry in the file.">TiXmlDeclaration<\/a>&amp; declaration );$/;"	a
l01750	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01750"><\/a>01750     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlPrinter.html#ace1b14d33eede2575c0743e2350f6a38" title="Visit a declaration.">Visit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlText.html" title="XML text.">TiXmlText<\/a>&amp; text );$/;"	a
l01751	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01751"><\/a>01751     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlPrinter.html#ace1b14d33eede2575c0743e2350f6a38" title="Visit a declaration.">Visit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlComment.html" title="An XML comment.">TiXmlComment<\/a>&amp; comment );$/;"	a
l01752	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01752"><\/a>01752     <span class="keyword">virtual<\/span> <span class="keywordtype">bool<\/span> <a class="code" href="classTiXmlPrinter.html#ace1b14d33eede2575c0743e2350f6a38" title="Visit a declaration.">Visit<\/a>( <span class="keyword">const<\/span> <a class="code" href="classTiXmlUnknown.html" title="Any tag that tinyXml doesn&amp;#39;t recognize is saved as an unknown.">TiXmlUnknown<\/a>&amp; unknown );$/;"	a
l01753	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01753"><\/a>01753 $/;"	a
l01757	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01757"><\/a><a class="code" href="classTiXmlPrinter.html#a213377a4070c7e625bae59716b089e5e">01757<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlPrinter.html#a213377a4070c7e625bae59716b089e5e" title="Set the indent characters for printing.">SetIndent<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _indent )           { indent = _indent ? _indent : <span class="stringliteral">&quot;&quot;<\/span> ; }$/;"	a
l01759	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01759"><\/a><a class="code" href="classTiXmlPrinter.html#abb33ec7d4bad6aaeb57f4304394b133d">01759<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlPrinter.html#abb33ec7d4bad6aaeb57f4304394b133d" title="Query the indention string.">Indent<\/a>()                            { <span class="keywordflow">return<\/span> indent.c_str(); }$/;"	a
l01764	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01764"><\/a><a class="code" href="classTiXmlPrinter.html#a4be1e37e69e3858c59635aa947174fe6">01764<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlPrinter.html#a4be1e37e69e3858c59635aa947174fe6" title="Set the line breaking string.">SetLineBreak<\/a>( <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* _lineBreak )     { lineBreak = _lineBreak ? _lineBreak : <span class="stringliteral">&quot;&quot;<\/span>; }$/;"	a
l01766	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01766"><\/a><a class="code" href="classTiXmlPrinter.html#a11f1b4804a460b175ec244eb5724d96d">01766<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlPrinter.html#a11f1b4804a460b175ec244eb5724d96d" title="Query the current line breaking string.">LineBreak<\/a>()                         { <span class="keywordflow">return<\/span> lineBreak.c_str(); }$/;"	a
l01767	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01767"><\/a>01767 $/;"	a
l01771	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01771"><\/a><a class="code" href="classTiXmlPrinter.html#ab23a90629e374cb1cadca090468bbd19">01771<\/a>     <span class="keywordtype">void<\/span> <a class="code" href="classTiXmlPrinter.html#ab23a90629e374cb1cadca090468bbd19" title="Switch over to &amp;quot;stream printing&amp;quot; which is the most dense formatting without...">SetStreamPrinting<\/a>()                        { indent = <span class="stringliteral">&quot;&quot;<\/span>;$/;"	a
l01772	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01772"><\/a>01772                                                       lineBreak = <span class="stringliteral">&quot;&quot;<\/span>;$/;"	a
l01773	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01773"><\/a>01773                                                     }   $/;"	a
l01775	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01775"><\/a><a class="code" href="classTiXmlPrinter.html#a859eede9597d3e0355b77757be48735e">01775<\/a>     <span class="keyword">const<\/span> <span class="keywordtype">char<\/span>* <a class="code" href="classTiXmlPrinter.html#a859eede9597d3e0355b77757be48735e" title="Return the result.">CStr<\/a>()                              { <span class="keywordflow">return<\/span> buffer.c_str(); }$/;"	a
l01777	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01777"><\/a><a class="code" href="classTiXmlPrinter.html#ad01375ae9199bd2f48252eaddce3039d">01777<\/a>     <span class="keywordtype">size_t<\/span> <a class="code" href="classTiXmlPrinter.html#ad01375ae9199bd2f48252eaddce3039d" title="Return the length of the result string.">Size<\/a>()                                   { <span class="keywordflow">return<\/span> buffer.size(); }$/;"	a
l01778	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01778"><\/a>01778 $/;"	a
l01779	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01779"><\/a>01779 <span class="preprocessor">    #ifdef TIXML_USE_STL<\/span>$/;"	a
l01781	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01781"><\/a><a class="code" href="classTiXmlPrinter.html#a3bd4daf44309b41f5813a833caa0d1c9">01781<\/a> <span class="preprocessor">    const std::string&amp; Str()                        { return buffer; }<\/span>$/;"	a
l01782	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01782"><\/a>01782 <span class="preprocessor"><\/span><span class="preprocessor">    #endif<\/span>$/;"	a
l01783	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01783"><\/a>01783 <span class="preprocessor"><\/span>$/;"	a
l01784	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01784"><\/a>01784 <span class="keyword">private<\/span>:$/;"	a
l01785	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01785"><\/a>01785     <span class="keywordtype">void<\/span> DoIndent() {$/;"	a
l01786	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01786"><\/a>01786         <span class="keywordflow">for<\/span>( <span class="keywordtype">int<\/span> i=0; i&lt;depth; ++i )$/;"	a
l01787	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01787"><\/a>01787             buffer += indent;$/;"	a
l01788	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01788"><\/a>01788     }$/;"	a
l01789	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01789"><\/a>01789     <span class="keywordtype">void<\/span> DoLineBreak() {$/;"	a
l01790	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01790"><\/a>01790         buffer += lineBreak;$/;"	a
l01791	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01791"><\/a>01791     }$/;"	a
l01792	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01792"><\/a>01792 $/;"	a
l01793	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01793"><\/a>01793     <span class="keywordtype">int<\/span> depth;$/;"	a
l01794	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01794"><\/a>01794     <span class="keywordtype">bool<\/span> simpleTextPrint;$/;"	a
l01795	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01795"><\/a>01795     TIXML_STRING buffer;$/;"	a
l01796	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01796"><\/a>01796     TIXML_STRING indent;$/;"	a
l01797	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01797"><\/a>01797     TIXML_STRING lineBreak;$/;"	a
l01798	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01798"><\/a>01798 };$/;"	a
l01799	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01799"><\/a>01799 $/;"	a
l01800	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01800"><\/a>01800 $/;"	a
l01801	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01801"><\/a>01801 <span class="preprocessor">#ifdef _MSC_VER<\/span>$/;"	a
l01802	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01802"><\/a>01802 <span class="preprocessor"><\/span><span class="preprocessor">#pragma warning( pop )<\/span>$/;"	a
l01803	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01803"><\/a>01803 <span class="preprocessor"><\/span><span class="preprocessor">#endif<\/span>$/;"	a
l01804	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01804"><\/a>01804 <span class="preprocessor"><\/span>$/;"	a
l01805	.\tinyxml\docs\tinyxml_8h_source.html	/^<a name="l01805"><\/a>01805 <span class="preprocessor">#endif<\/span>$/;"	a
lastChild	.\tinyxml\tinyxml.h	/^	TiXmlNode*		lastChild;$/;"	m	class:TiXmlNode
length	.\glm\detail\type_mat2x2.hpp	/^		GLM_FUNC_DECL static length_type length(){return 2;}$/;"	f	struct:glm::tmat2x2
length	.\glm\detail\type_mat2x3.hpp	/^		GLM_FUNC_DECL static length_type length(){return 2;}$/;"	f	struct:glm::tmat2x3
length	.\glm\detail\type_mat2x4.hpp	/^		GLM_FUNC_DECL static length_type length(){return 2;}$/;"	f	struct:glm::tmat2x4
length	.\glm\detail\type_mat3x2.hpp	/^		GLM_FUNC_DECL static length_type length(){return 3;}$/;"	f	struct:glm::tmat3x2
length	.\glm\detail\type_mat3x3.hpp	/^		GLM_FUNC_DECL static length_type length(){return 3;}$/;"	f	struct:glm::tmat3x3
length	.\glm\detail\type_mat3x4.hpp	/^		GLM_FUNC_DECL static length_type length(){return 3;}$/;"	f	struct:glm::tmat3x4
length	.\glm\detail\type_mat4x2.hpp	/^		GLM_FUNC_DECL static length_type length(){return 4;}$/;"	f	struct:glm::tmat4x2
length	.\glm\detail\type_mat4x3.hpp	/^		GLM_FUNC_DECL static length_type length(){return 4;}$/;"	f	struct:glm::tmat4x3
length	.\glm\detail\type_mat4x4.hpp	/^		GLM_FUNC_DECL static length_type length(){return 4;}$/;"	f	struct:glm::tmat4x4
length	.\glm\detail\type_vec1.hpp	/^		GLM_FUNC_DECL static length_type length(){return 1;}$/;"	f	struct:glm::tvec1
length	.\glm\detail\type_vec2.hpp	/^		GLM_FUNC_DECL static length_type length(){return 2;}$/;"	f	struct:glm::tvec2
length	.\glm\detail\type_vec3.hpp	/^		GLM_FUNC_DECL static length_type length(){return 3;}$/;"	f	struct:glm::tvec3
length	.\glm\detail\type_vec4.hpp	/^		GLM_FUNC_DECL static length_type length(){return 4;}$/;"	f	struct:glm::tvec4
length	.\glm\gtc\quaternion.hpp	/^		GLM_FUNC_DECL static length_type length(){return 4;}$/;"	f	struct:glm::tquat
length	.\glm\gtx\dual_quaternion.hpp	/^		GLM_FUNC_DECL static length_type length(){return 2;}$/;"	f	struct:glm::tdualquat
length	.\tinyxml\tinystr.h	/^	size_type length () const { return rep_->size; }$/;"	f	class:TiXmlString
length	.\util\Vector2.h	/^	float length() { return sqrt(_x * _x + _y * _y); }$/;"	f	class:Vector2D
length_t	.\glm\detail\setup.hpp	/^		typedef size_t length_t;$/;"	t	namespace:glm
length_type	.\glm\detail\type_mat2x2.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tmat2x2
length_type	.\glm\detail\type_mat2x3.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tmat2x3
length_type	.\glm\detail\type_mat2x4.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tmat2x4
length_type	.\glm\detail\type_mat3x2.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tmat3x2
length_type	.\glm\detail\type_mat3x3.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tmat3x3
length_type	.\glm\detail\type_mat3x4.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tmat3x4
length_type	.\glm\detail\type_mat4x2.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tmat4x2
length_type	.\glm\detail\type_mat4x3.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tmat4x3
length_type	.\glm\detail\type_mat4x4.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tmat4x4
length_type	.\glm\detail\type_vec1.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tvec1
length_type	.\glm\detail\type_vec2.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tvec2
length_type	.\glm\detail\type_vec3.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tvec3
length_type	.\glm\detail\type_vec4.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tvec4
length_type	.\glm\gtc\quaternion.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tquat
length_type	.\glm\gtx\dual_quaternion.hpp	/^		typedef length_t length_type;$/;"	t	struct:glm::tdualquat
lerp	.\glm\gtx\compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec2<T, P> lerp(const tvec2<T, P>& x, const tvec2<T, P>& y, T a){return mix(x, y, a);}							\/\/!< \\brief Returns x * (1.0 - a) + y * a, i.e., the linear blend of x and y using the floating-point value a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
lerp	.\glm\gtx\compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec2<T, P> lerp(const tvec2<T, P>& x, const tvec2<T, P>& y, const tvec2<T, P>& a){return mix(x, y, a);}	\/\/!< \\brief Returns the component-wise result of x * (1.0 - a) + y * a, i.e., the linear blend of x and y using vector a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
lerp	.\glm\gtx\compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec3<T, P> lerp(const tvec3<T, P>& x, const tvec3<T, P>& y, T a){return mix(x, y, a);}							\/\/!< \\brief Returns x * (1.0 - a) + y * a, i.e., the linear blend of x and y using the floating-point value a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
lerp	.\glm\gtx\compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec3<T, P> lerp(const tvec3<T, P>& x, const tvec3<T, P>& y, const tvec3<T, P>& a){return mix(x, y, a);}	\/\/!< \\brief Returns the component-wise result of x * (1.0 - a) + y * a, i.e., the linear blend of x and y using vector a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
lerp	.\glm\gtx\compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec4<T, P> lerp(const tvec4<T, P>& x, const tvec4<T, P>& y, T a){return mix(x, y, a);}							\/\/!< \\brief Returns x * (1.0 - a) + y * a, i.e., the linear blend of x and y using the floating-point value a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
lerp	.\glm\gtx\compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec4<T, P> lerp(const tvec4<T, P>& x, const tvec4<T, P>& y, const tvec4<T, P>& a){return mix(x, y, a);}	\/\/!< \\brief Returns the component-wise result of x * (1.0 - a) + y * a, i.e., the linear blend of x and y using vector a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
lerp	.\glm\gtx\compatibility.hpp	/^	template <typename T> GLM_FUNC_QUALIFIER T lerp(T x, T y, T a){return mix(x, y, a);}																					\/\/!< \\brief Returns x * (1.0 - a) + y * a, i.e., the linear blend of x and y using the floating-point value a. The value for a is not restricted to the range [0, 1]. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
letter_T	.\tinyxml\docs\classes.html	/^<tr><td><a name="letter_T"><\/a><table border="0" cellspacing="0" cellpadding="0"><tr><td><div class="ah">&nbsp;&nbsp;T&nbsp;&nbsp;<\/div><\/td><\/tr><\/table>$/;"	a
lineBreak	.\tinyxml\tinyxml.h	/^	TIXML_STRING lineBreak;$/;"	m	class:TiXmlPrinter
loadWAV	.\src\AudioEngine.cpp	/^int AudioEngine::loadWAV(const char* path, bool stereo, unsigned int format8or16)$/;"	f	class:AudioEngine
locale_	.\glm\gtx\io.hpp	/^			locale_type     locale_;$/;"	m	class:glm::io::basic_state_saver
locale_type	.\glm\gtx\io.hpp	/^			typedef ::std::locale const            locale_type;$/;"	t	class:glm::io::basic_state_saver::std
location	.\tinyxml\tinyxml.h	/^	TiXmlCursor location;$/;"	m	class:TiXmlBase
log2	.\glm\detail\_fixes.hpp	28;"	d
lowp	.\glm\detail\precision.hpp	/^		lowp = packed_lowp,$/;"	e	enum:glm::precision
lowp_bvec1	.\glm\gtc\vec1.hpp	/^	typedef lowp_bvec1_t			lowp_bvec1;$/;"	t	namespace:glm
lowp_bvec1_t	.\glm\detail\type_vec.hpp	/^	typedef tvec1<bool, lowp>		lowp_bvec1_t;$/;"	t	namespace:glm
lowp_bvec2	.\glm\detail\type_vec.hpp	/^	typedef tvec2<bool, lowp>		lowp_bvec2;$/;"	t	namespace:glm
lowp_bvec3	.\glm\detail\type_vec.hpp	/^	typedef tvec3<bool, lowp>		lowp_bvec3;$/;"	t	namespace:glm
lowp_bvec4	.\glm\detail\type_vec.hpp	/^	typedef tvec4<bool, lowp>		lowp_bvec4;$/;"	t	namespace:glm
lowp_ddualquat	.\glm\gtx\dual_quaternion.hpp	/^	typedef tdualquat<double, lowp>		lowp_ddualquat;$/;"	t	namespace:glm
lowp_dmat2	.\glm\detail\type_mat.hpp	/^	typedef tmat2x2<double, lowp>		lowp_dmat2;$/;"	t	namespace:glm
lowp_dmat2x2	.\glm\detail\type_mat.hpp	/^	typedef tmat2x2<double, lowp>		lowp_dmat2x2;$/;"	t	namespace:glm
lowp_dmat2x3	.\glm\detail\type_mat.hpp	/^	typedef tmat2x3<double, lowp>		lowp_dmat2x3;$/;"	t	namespace:glm
lowp_dmat2x4	.\glm\detail\type_mat.hpp	/^	typedef tmat2x4<double, lowp>		lowp_dmat2x4;$/;"	t	namespace:glm
lowp_dmat3	.\glm\detail\type_mat.hpp	/^	typedef tmat3x3<float, lowp>		lowp_dmat3;$/;"	t	namespace:glm
lowp_dmat3x2	.\glm\detail\type_mat.hpp	/^	typedef tmat3x2<double, lowp>		lowp_dmat3x2;$/;"	t	namespace:glm
lowp_dmat3x3	.\glm\detail\type_mat.hpp	/^	typedef tmat3x3<double, lowp>		lowp_dmat3x3;$/;"	t	namespace:glm
lowp_dmat3x4	.\glm\detail\type_mat.hpp	/^	typedef tmat3x4<double, lowp>		lowp_dmat3x4;$/;"	t	namespace:glm
lowp_dmat4	.\glm\detail\type_mat.hpp	/^	typedef tmat4x4<double, lowp>		lowp_dmat4;$/;"	t	namespace:glm
lowp_dmat4x2	.\glm\detail\type_mat.hpp	/^	typedef tmat4x2<double, lowp>		lowp_dmat4x2;$/;"	t	namespace:glm
lowp_dmat4x3	.\glm\detail\type_mat.hpp	/^	typedef tmat4x3<double, lowp>		lowp_dmat4x3;$/;"	t	namespace:glm
lowp_dmat4x4	.\glm\detail\type_mat.hpp	/^	typedef tmat4x4<double, lowp>		lowp_dmat4x4;$/;"	t	namespace:glm
lowp_dquat	.\glm\fwd.hpp	/^	typedef tquat<double, lowp>		lowp_dquat;$/;"	t	namespace:glm
lowp_dualquat	.\glm\gtx\dual_quaternion.hpp	/^	typedef tdualquat<float, lowp>		lowp_dualquat;$/;"	t	namespace:glm
lowp_dvec1	.\glm\gtc\vec1.hpp	/^	typedef lowp_dvec1_t			lowp_dvec1;$/;"	t	namespace:glm
lowp_dvec1_t	.\glm\detail\type_vec.hpp	/^	typedef tvec1<double, lowp>		lowp_dvec1_t;$/;"	t	namespace:glm
lowp_dvec2	.\glm\detail\type_vec.hpp	/^	typedef tvec2<double, lowp>		lowp_dvec2;$/;"	t	namespace:glm
lowp_dvec3	.\glm\detail\type_vec.hpp	/^	typedef tvec3<double, lowp>		lowp_dvec3;$/;"	t	namespace:glm
lowp_dvec4	.\glm\detail\type_vec.hpp	/^	typedef tvec4<double, lowp>		lowp_dvec4;$/;"	t	namespace:glm
lowp_f32	.\glm\fwd.hpp	/^	typedef float32 lowp_f32;$/;"	t	namespace:glm
lowp_f32mat2	.\glm\fwd.hpp	/^	typedef lowp_f32mat2x2 lowp_f32mat2;$/;"	t	namespace:glm
lowp_f32mat2x2	.\glm\fwd.hpp	/^	typedef tmat2x2<f32, lowp> lowp_f32mat2x2;$/;"	t	namespace:glm
lowp_f32mat2x3	.\glm\fwd.hpp	/^	typedef tmat2x3<f32, lowp> lowp_f32mat2x3;$/;"	t	namespace:glm
lowp_f32mat2x4	.\glm\fwd.hpp	/^	typedef tmat2x4<f32, lowp> lowp_f32mat2x4;$/;"	t	namespace:glm
lowp_f32mat3	.\glm\fwd.hpp	/^	typedef lowp_f32mat3x3 lowp_f32mat3;$/;"	t	namespace:glm
lowp_f32mat3x2	.\glm\fwd.hpp	/^	typedef tmat3x2<f32, lowp> lowp_f32mat3x2;$/;"	t	namespace:glm
lowp_f32mat3x3	.\glm\fwd.hpp	/^	typedef tmat3x3<f32, lowp> lowp_f32mat3x3;$/;"	t	namespace:glm
lowp_f32mat3x4	.\glm\fwd.hpp	/^	typedef tmat3x4<f32, lowp> lowp_f32mat3x4;$/;"	t	namespace:glm
lowp_f32mat4	.\glm\fwd.hpp	/^	typedef lowp_f32mat4x4 lowp_f32mat4;$/;"	t	namespace:glm
lowp_f32mat4x2	.\glm\fwd.hpp	/^	typedef tmat4x2<f32, lowp> lowp_f32mat4x2;$/;"	t	namespace:glm
lowp_f32mat4x3	.\glm\fwd.hpp	/^	typedef tmat4x3<f32, lowp> lowp_f32mat4x3;$/;"	t	namespace:glm
lowp_f32mat4x4	.\glm\fwd.hpp	/^	typedef tmat4x4<f32, lowp> lowp_f32mat4x4;$/;"	t	namespace:glm
lowp_f32quat	.\glm\fwd.hpp	/^	typedef tquat<f32, lowp> lowp_f32quat;$/;"	t	namespace:glm
lowp_f32vec1	.\glm\fwd.hpp	/^	typedef tvec1<f32, lowp> lowp_f32vec1;$/;"	t	namespace:glm
lowp_f32vec2	.\glm\fwd.hpp	/^	typedef tvec2<f32, lowp> lowp_f32vec2;$/;"	t	namespace:glm
lowp_f32vec3	.\glm\fwd.hpp	/^	typedef tvec3<f32, lowp> lowp_f32vec3;$/;"	t	namespace:glm
lowp_f32vec4	.\glm\fwd.hpp	/^	typedef tvec4<f32, lowp> lowp_f32vec4;$/;"	t	namespace:glm
lowp_f64	.\glm\fwd.hpp	/^	typedef float64 lowp_f64;$/;"	t	namespace:glm
lowp_f64mat2	.\glm\fwd.hpp	/^	typedef lowp_f64mat2x2 lowp_f64mat2;$/;"	t	namespace:glm
lowp_f64mat2x2	.\glm\fwd.hpp	/^	typedef tmat2x2<f64, lowp> lowp_f64mat2x2;$/;"	t	namespace:glm
lowp_f64mat2x3	.\glm\fwd.hpp	/^	typedef tmat2x3<f64, lowp> lowp_f64mat2x3;$/;"	t	namespace:glm
lowp_f64mat2x4	.\glm\fwd.hpp	/^	typedef tmat2x4<f64, lowp> lowp_f64mat2x4;$/;"	t	namespace:glm
lowp_f64mat3	.\glm\fwd.hpp	/^	typedef lowp_f64mat3x3 lowp_f64mat3;$/;"	t	namespace:glm
lowp_f64mat3x2	.\glm\fwd.hpp	/^	typedef tmat3x2<f64, lowp> lowp_f64mat3x2;$/;"	t	namespace:glm
lowp_f64mat3x3	.\glm\fwd.hpp	/^	typedef tmat3x3<f64, lowp> lowp_f64mat3x3;$/;"	t	namespace:glm
lowp_f64mat3x4	.\glm\fwd.hpp	/^	typedef tmat3x4<f64, lowp> lowp_f64mat3x4;$/;"	t	namespace:glm
lowp_f64mat4	.\glm\fwd.hpp	/^	typedef lowp_f64mat4x4 lowp_f64mat4;$/;"	t	namespace:glm
lowp_f64mat4x2	.\glm\fwd.hpp	/^	typedef tmat4x2<f64, lowp> lowp_f64mat4x2;$/;"	t	namespace:glm
lowp_f64mat4x3	.\glm\fwd.hpp	/^	typedef tmat4x3<f64, lowp> lowp_f64mat4x3;$/;"	t	namespace:glm
lowp_f64mat4x4	.\glm\fwd.hpp	/^	typedef tmat4x4<f64, lowp> lowp_f64mat4x4;$/;"	t	namespace:glm
lowp_f64quat	.\glm\fwd.hpp	/^	typedef tquat<f64, lowp> lowp_f64quat;$/;"	t	namespace:glm
lowp_f64vec1	.\glm\fwd.hpp	/^	typedef tvec1<f64, lowp> lowp_f64vec1;$/;"	t	namespace:glm
lowp_f64vec2	.\glm\fwd.hpp	/^	typedef tvec2<f64, lowp> lowp_f64vec2;$/;"	t	namespace:glm
lowp_f64vec3	.\glm\fwd.hpp	/^	typedef tvec3<f64, lowp> lowp_f64vec3;$/;"	t	namespace:glm
lowp_f64vec4	.\glm\fwd.hpp	/^	typedef tvec4<f64, lowp> lowp_f64vec4;$/;"	t	namespace:glm
lowp_fdualquat	.\glm\gtx\dual_quaternion.hpp	/^	typedef tdualquat<float, lowp>		lowp_fdualquat;$/;"	t	namespace:glm
lowp_float	.\glm\detail\type_float.hpp	/^	typedef lowp_float_t		lowp_float;$/;"	t	namespace:glm
lowp_float32	.\glm\fwd.hpp	/^	typedef detail::float32 lowp_float32;$/;"	t	namespace:glm
lowp_float32_t	.\glm\fwd.hpp	/^	typedef detail::float32 lowp_float32_t;$/;"	t	namespace:glm
lowp_float64	.\glm\fwd.hpp	/^	typedef detail::float64 lowp_float64;$/;"	t	namespace:glm
lowp_float64_t	.\glm\fwd.hpp	/^	typedef detail::float64 lowp_float64_t;$/;"	t	namespace:glm
lowp_float_t	.\glm\detail\type_float.hpp	/^	typedef float				lowp_float_t;$/;"	t	namespace:glm
lowp_fmat2	.\glm\fwd.hpp	/^	typedef lowp_fmat2x2 lowp_fmat2;$/;"	t	namespace:glm
lowp_fmat2x2	.\glm\fwd.hpp	/^	typedef tmat2x2<f32, lowp> lowp_fmat2x2;$/;"	t	namespace:glm
lowp_fmat2x3	.\glm\fwd.hpp	/^	typedef tmat2x3<f32, lowp> lowp_fmat2x3;$/;"	t	namespace:glm
lowp_fmat2x4	.\glm\fwd.hpp	/^	typedef tmat2x4<f32, lowp> lowp_fmat2x4;$/;"	t	namespace:glm
lowp_fmat3	.\glm\fwd.hpp	/^	typedef lowp_fmat3x3 lowp_fmat3;$/;"	t	namespace:glm
lowp_fmat3x2	.\glm\fwd.hpp	/^	typedef tmat3x2<f32, lowp> lowp_fmat3x2;$/;"	t	namespace:glm
lowp_fmat3x3	.\glm\fwd.hpp	/^	typedef tmat3x3<f32, lowp> lowp_fmat3x3;$/;"	t	namespace:glm
lowp_fmat3x4	.\glm\fwd.hpp	/^	typedef tmat3x4<f32, lowp> lowp_fmat3x4;$/;"	t	namespace:glm
lowp_fmat4	.\glm\fwd.hpp	/^	typedef lowp_fmat4x4 lowp_fmat4;$/;"	t	namespace:glm
lowp_fmat4x2	.\glm\fwd.hpp	/^	typedef tmat4x2<f32, lowp> lowp_fmat4x2;$/;"	t	namespace:glm
lowp_fmat4x3	.\glm\fwd.hpp	/^	typedef tmat4x3<f32, lowp> lowp_fmat4x3;$/;"	t	namespace:glm
lowp_fmat4x4	.\glm\fwd.hpp	/^	typedef tmat4x4<f32, lowp> lowp_fmat4x4;$/;"	t	namespace:glm
lowp_fquat	.\glm\fwd.hpp	/^	typedef lowp_quat			lowp_fquat;$/;"	t	namespace:glm
lowp_fvec1	.\glm\fwd.hpp	/^	typedef tvec1<float, lowp> lowp_fvec1;$/;"	t	namespace:glm
lowp_fvec2	.\glm\fwd.hpp	/^	typedef tvec2<float, lowp> lowp_fvec2;$/;"	t	namespace:glm
lowp_fvec3	.\glm\fwd.hpp	/^	typedef tvec3<float, lowp> lowp_fvec3;$/;"	t	namespace:glm
lowp_fvec4	.\glm\fwd.hpp	/^	typedef tvec4<float, lowp> lowp_fvec4;$/;"	t	namespace:glm
lowp_i16	.\glm\fwd.hpp	/^	typedef detail::int16 lowp_i16;$/;"	t	namespace:glm
lowp_i16	.\glm\gtc\type_precision.hpp	/^	typedef detail::int16 lowp_i16;$/;"	t	namespace:glm
lowp_i16vec1	.\glm\fwd.hpp	/^	typedef tvec1<i16, lowp>		lowp_i16vec1;$/;"	t	namespace:glm
lowp_i16vec2	.\glm\fwd.hpp	/^	typedef tvec2<i16, lowp>		lowp_i16vec2;$/;"	t	namespace:glm
lowp_i16vec3	.\glm\fwd.hpp	/^	typedef tvec3<i16, lowp>		lowp_i16vec3;$/;"	t	namespace:glm
lowp_i16vec4	.\glm\fwd.hpp	/^	typedef tvec4<i16, lowp>		lowp_i16vec4;$/;"	t	namespace:glm
lowp_i32	.\glm\fwd.hpp	/^	typedef detail::int32 lowp_i32;$/;"	t	namespace:glm
lowp_i32	.\glm\gtc\type_precision.hpp	/^	typedef detail::int32 lowp_i32;$/;"	t	namespace:glm
lowp_i32vec1	.\glm\fwd.hpp	/^	typedef tvec1<i32, lowp>		lowp_i32vec1;$/;"	t	namespace:glm
lowp_i32vec2	.\glm\fwd.hpp	/^	typedef tvec2<i32, lowp>		lowp_i32vec2;$/;"	t	namespace:glm
lowp_i32vec3	.\glm\fwd.hpp	/^	typedef tvec3<i32, lowp>		lowp_i32vec3;$/;"	t	namespace:glm
lowp_i32vec4	.\glm\fwd.hpp	/^	typedef tvec4<i32, lowp>		lowp_i32vec4;$/;"	t	namespace:glm
lowp_i64	.\glm\fwd.hpp	/^	typedef detail::int64 lowp_i64;$/;"	t	namespace:glm
lowp_i64	.\glm\gtc\type_precision.hpp	/^	typedef detail::int64 lowp_i64;$/;"	t	namespace:glm
lowp_i64vec1	.\glm\fwd.hpp	/^	typedef tvec1<i64, lowp>		lowp_i64vec1;$/;"	t	namespace:glm
lowp_i64vec2	.\glm\fwd.hpp	/^	typedef tvec2<i64, lowp>		lowp_i64vec2;$/;"	t	namespace:glm
lowp_i64vec3	.\glm\fwd.hpp	/^	typedef tvec3<i64, lowp>		lowp_i64vec3;$/;"	t	namespace:glm
lowp_i64vec4	.\glm\fwd.hpp	/^	typedef tvec4<i64, lowp>		lowp_i64vec4;$/;"	t	namespace:glm
lowp_i8	.\glm\fwd.hpp	/^	typedef detail::int8 lowp_i8;$/;"	t	namespace:glm
lowp_i8	.\glm\gtc\type_precision.hpp	/^	typedef detail::int8 lowp_i8;$/;"	t	namespace:glm
lowp_i8vec1	.\glm\fwd.hpp	/^	typedef tvec1<i8, lowp> lowp_i8vec1;$/;"	t	namespace:glm
lowp_i8vec2	.\glm\fwd.hpp	/^	typedef tvec2<i8, lowp> lowp_i8vec2;$/;"	t	namespace:glm
lowp_i8vec3	.\glm\fwd.hpp	/^	typedef tvec3<i8, lowp> lowp_i8vec3;$/;"	t	namespace:glm
lowp_i8vec4	.\glm\fwd.hpp	/^	typedef tvec4<i8, lowp> lowp_i8vec4;$/;"	t	namespace:glm
lowp_imat2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x2<int, lowp>				lowp_imat2;$/;"	t	namespace:glm
lowp_imat2x2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x2<int, lowp>				lowp_imat2x2;$/;"	t	namespace:glm
lowp_imat2x3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x3<int, lowp>				lowp_imat2x3;$/;"	t	namespace:glm
lowp_imat2x4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x4<int, lowp>				lowp_imat2x4;$/;"	t	namespace:glm
lowp_imat3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x3<int, lowp>				lowp_imat3;$/;"	t	namespace:glm
lowp_imat3x2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x2<int, lowp>				lowp_imat3x2;$/;"	t	namespace:glm
lowp_imat3x3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x3<int, lowp>				lowp_imat3x3;$/;"	t	namespace:glm
lowp_imat3x4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x4<int, lowp>				lowp_imat3x4;$/;"	t	namespace:glm
lowp_imat4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x4<int, lowp>				lowp_imat4;$/;"	t	namespace:glm
lowp_imat4x2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x2<int, lowp>				lowp_imat4x2;$/;"	t	namespace:glm
lowp_imat4x3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x3<int, lowp>				lowp_imat4x3;$/;"	t	namespace:glm
lowp_imat4x4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x4<int, lowp>				lowp_imat4x4;$/;"	t	namespace:glm
lowp_int	.\glm\detail\type_int.hpp	/^	typedef detail::lowp_int_t				lowp_int;$/;"	t	namespace:glm
lowp_int16	.\glm\fwd.hpp	/^	typedef detail::int16 lowp_int16;$/;"	t	namespace:glm
lowp_int16	.\glm\gtc\type_precision.hpp	/^	typedef detail::int16 lowp_int16;$/;"	t	namespace:glm
lowp_int16_t	.\glm\fwd.hpp	/^	typedef detail::int16 lowp_int16_t;$/;"	t	namespace:glm
lowp_int16_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::int16 lowp_int16_t;$/;"	t	namespace:glm
lowp_int32	.\glm\fwd.hpp	/^	typedef detail::int32 lowp_int32;$/;"	t	namespace:glm
lowp_int32	.\glm\gtc\type_precision.hpp	/^	typedef detail::int32 lowp_int32;$/;"	t	namespace:glm
lowp_int32_t	.\glm\fwd.hpp	/^	typedef detail::int32 lowp_int32_t;$/;"	t	namespace:glm
lowp_int32_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::int32 lowp_int32_t;$/;"	t	namespace:glm
lowp_int64	.\glm\fwd.hpp	/^	typedef detail::int64 lowp_int64;$/;"	t	namespace:glm
lowp_int64	.\glm\gtc\type_precision.hpp	/^	typedef detail::int64 lowp_int64;$/;"	t	namespace:glm
lowp_int64_t	.\glm\fwd.hpp	/^	typedef detail::int64 lowp_int64_t;$/;"	t	namespace:glm
lowp_int64_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::int64 lowp_int64_t;$/;"	t	namespace:glm
lowp_int8	.\glm\fwd.hpp	/^	typedef detail::int8 lowp_int8;$/;"	t	namespace:glm
lowp_int8	.\glm\gtc\type_precision.hpp	/^	typedef detail::int8 lowp_int8;$/;"	t	namespace:glm
lowp_int8_t	.\glm\fwd.hpp	/^	typedef detail::int8 lowp_int8_t;$/;"	t	namespace:glm
lowp_int8_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::int8 lowp_int8_t;$/;"	t	namespace:glm
lowp_int_t	.\glm\detail\type_int.hpp	/^	typedef signed int						lowp_int_t;$/;"	t	namespace:glm::detail
lowp_ivec1	.\glm\gtc\vec1.hpp	/^	typedef lowp_ivec1_t			lowp_ivec1;$/;"	t	namespace:glm
lowp_ivec1_t	.\glm\detail\type_vec.hpp	/^	typedef tvec1<int, lowp>		lowp_ivec1_t;$/;"	t	namespace:glm
lowp_ivec2	.\glm\detail\type_vec.hpp	/^	typedef tvec2<int, lowp>		lowp_ivec2;$/;"	t	namespace:glm
lowp_ivec3	.\glm\detail\type_vec.hpp	/^	typedef tvec3<int, lowp>		lowp_ivec3;$/;"	t	namespace:glm
lowp_ivec4	.\glm\detail\type_vec.hpp	/^	typedef tvec4<int, lowp>		lowp_ivec4;$/;"	t	namespace:glm
lowp_mat2	.\glm\detail\type_mat.hpp	/^	typedef tmat2x2<float, lowp>		lowp_mat2;$/;"	t	namespace:glm
lowp_mat2	.\glm\mat2x2.hpp	/^	typedef tmat2x2<float, lowp>		lowp_mat2;$/;"	t	namespace:glm
lowp_mat2x2	.\glm\detail\type_mat.hpp	/^	typedef tmat2x2<float, lowp>		lowp_mat2x2;$/;"	t	namespace:glm
lowp_mat2x2	.\glm\mat2x2.hpp	/^	typedef tmat2x2<float, lowp>		lowp_mat2x2;$/;"	t	namespace:glm
lowp_mat2x3	.\glm\detail\type_mat.hpp	/^	typedef tmat2x3<float, lowp>		lowp_mat2x3;$/;"	t	namespace:glm
lowp_mat2x3	.\glm\mat2x3.hpp	/^	typedef tmat2x3<float, lowp>		lowp_mat2x3;$/;"	t	namespace:glm
lowp_mat2x4	.\glm\detail\type_mat.hpp	/^	typedef tmat2x4<float, lowp>		lowp_mat2x4;$/;"	t	namespace:glm
lowp_mat2x4	.\glm\mat2x4.hpp	/^	typedef tmat2x4<float, lowp>		lowp_mat2x4;$/;"	t	namespace:glm
lowp_mat3	.\glm\detail\type_mat.hpp	/^	typedef tmat3x3<float, lowp>		lowp_mat3;$/;"	t	namespace:glm
lowp_mat3	.\glm\mat3x3.hpp	/^	typedef tmat3x3<float, lowp>		lowp_mat3;$/;"	t	namespace:glm
lowp_mat3x2	.\glm\detail\type_mat.hpp	/^	typedef tmat3x2<float, lowp>		lowp_mat3x2;$/;"	t	namespace:glm
lowp_mat3x2	.\glm\mat3x2.hpp	/^	typedef tmat3x2<float, lowp>		lowp_mat3x2;$/;"	t	namespace:glm
lowp_mat3x3	.\glm\detail\type_mat.hpp	/^	typedef tmat3x3<float, lowp>		lowp_mat3x3;$/;"	t	namespace:glm
lowp_mat3x3	.\glm\mat3x3.hpp	/^	typedef tmat3x3<float, lowp>		lowp_mat3x3;$/;"	t	namespace:glm
lowp_mat3x4	.\glm\detail\type_mat.hpp	/^	typedef tmat3x4<float, lowp>		lowp_mat3x4;$/;"	t	namespace:glm
lowp_mat3x4	.\glm\mat3x4.hpp	/^	typedef tmat3x4<float, lowp>		lowp_mat3x4;$/;"	t	namespace:glm
lowp_mat4	.\glm\detail\type_mat.hpp	/^	typedef tmat4x4<float, lowp>		lowp_mat4;$/;"	t	namespace:glm
lowp_mat4	.\glm\mat4x4.hpp	/^	typedef tmat4x4<float, lowp>		lowp_mat4;$/;"	t	namespace:glm
lowp_mat4x2	.\glm\detail\type_mat.hpp	/^	typedef tmat4x2<float, lowp>		lowp_mat4x2;$/;"	t	namespace:glm
lowp_mat4x2	.\glm\mat4x2.hpp	/^	typedef tmat4x2<float, lowp>		lowp_mat4x2;$/;"	t	namespace:glm
lowp_mat4x3	.\glm\detail\type_mat.hpp	/^	typedef tmat4x3<float, lowp>		lowp_mat4x3;$/;"	t	namespace:glm
lowp_mat4x3	.\glm\mat4x3.hpp	/^	typedef tmat4x3<float, lowp>		lowp_mat4x3;$/;"	t	namespace:glm
lowp_mat4x4	.\glm\detail\type_mat.hpp	/^	typedef tmat4x4<float, lowp>		lowp_mat4x4;$/;"	t	namespace:glm
lowp_mat4x4	.\glm\mat4x4.hpp	/^	typedef tmat4x4<float, lowp>		lowp_mat4x4;$/;"	t	namespace:glm
lowp_quat	.\glm\fwd.hpp	/^	typedef tquat<float, lowp>		lowp_quat;$/;"	t	namespace:glm
lowp_u16	.\glm\fwd.hpp	/^	typedef detail::uint16 lowp_u16;$/;"	t	namespace:glm
lowp_u16	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint16 lowp_u16;$/;"	t	namespace:glm
lowp_u16vec1	.\glm\fwd.hpp	/^	typedef tvec1<u16, lowp>		lowp_u16vec1;$/;"	t	namespace:glm
lowp_u16vec2	.\glm\fwd.hpp	/^	typedef tvec2<u16, lowp>		lowp_u16vec2;$/;"	t	namespace:glm
lowp_u16vec3	.\glm\fwd.hpp	/^	typedef tvec3<u16, lowp>		lowp_u16vec3;$/;"	t	namespace:glm
lowp_u16vec4	.\glm\fwd.hpp	/^	typedef tvec4<u16, lowp>		lowp_u16vec4;$/;"	t	namespace:glm
lowp_u32	.\glm\fwd.hpp	/^	typedef detail::uint32 lowp_u32;$/;"	t	namespace:glm
lowp_u32	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint32 lowp_u32;$/;"	t	namespace:glm
lowp_u32vec1	.\glm\fwd.hpp	/^	typedef tvec1<u32, lowp>		lowp_u32vec1;$/;"	t	namespace:glm
lowp_u32vec2	.\glm\fwd.hpp	/^	typedef tvec2<u32, lowp>		lowp_u32vec2;$/;"	t	namespace:glm
lowp_u32vec3	.\glm\fwd.hpp	/^	typedef tvec3<u32, lowp>		lowp_u32vec3;$/;"	t	namespace:glm
lowp_u32vec4	.\glm\fwd.hpp	/^	typedef tvec4<u32, lowp>		lowp_u32vec4;$/;"	t	namespace:glm
lowp_u64	.\glm\fwd.hpp	/^	typedef detail::uint64 lowp_u64;$/;"	t	namespace:glm
lowp_u64	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint64 lowp_u64;$/;"	t	namespace:glm
lowp_u64vec1	.\glm\fwd.hpp	/^	typedef tvec1<u64, lowp>		lowp_u64vec1;$/;"	t	namespace:glm
lowp_u64vec2	.\glm\fwd.hpp	/^	typedef tvec2<u64, lowp>		lowp_u64vec2;$/;"	t	namespace:glm
lowp_u64vec3	.\glm\fwd.hpp	/^	typedef tvec3<u64, lowp>		lowp_u64vec3;$/;"	t	namespace:glm
lowp_u64vec4	.\glm\fwd.hpp	/^	typedef tvec4<u64, lowp>		lowp_u64vec4;$/;"	t	namespace:glm
lowp_u8	.\glm\fwd.hpp	/^	typedef detail::uint8 lowp_u8;$/;"	t	namespace:glm
lowp_u8	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint8 lowp_u8;$/;"	t	namespace:glm
lowp_u8vec1	.\glm\fwd.hpp	/^	typedef tvec1<u8, lowp> lowp_u8vec1;$/;"	t	namespace:glm
lowp_u8vec2	.\glm\fwd.hpp	/^	typedef tvec2<u8, lowp> lowp_u8vec2;$/;"	t	namespace:glm
lowp_u8vec3	.\glm\fwd.hpp	/^	typedef tvec3<u8, lowp> lowp_u8vec3;$/;"	t	namespace:glm
lowp_u8vec4	.\glm\fwd.hpp	/^	typedef tvec4<u8, lowp> lowp_u8vec4;$/;"	t	namespace:glm
lowp_uint	.\glm\detail\type_int.hpp	/^	typedef detail::lowp_uint_t				lowp_uint;$/;"	t	namespace:glm
lowp_uint16	.\glm\fwd.hpp	/^	typedef detail::uint16 lowp_uint16;$/;"	t	namespace:glm
lowp_uint16	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint16 lowp_uint16;$/;"	t	namespace:glm
lowp_uint16_t	.\glm\fwd.hpp	/^	typedef detail::uint16 lowp_uint16_t;$/;"	t	namespace:glm
lowp_uint16_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint16 lowp_uint16_t;$/;"	t	namespace:glm
lowp_uint32	.\glm\fwd.hpp	/^	typedef detail::uint32 lowp_uint32;$/;"	t	namespace:glm
lowp_uint32	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint32 lowp_uint32;$/;"	t	namespace:glm
lowp_uint32_t	.\glm\fwd.hpp	/^	typedef detail::uint32 lowp_uint32_t;$/;"	t	namespace:glm
lowp_uint32_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint32 lowp_uint32_t;$/;"	t	namespace:glm
lowp_uint64	.\glm\fwd.hpp	/^	typedef detail::uint64 lowp_uint64;$/;"	t	namespace:glm
lowp_uint64	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint64 lowp_uint64;$/;"	t	namespace:glm
lowp_uint64_t	.\glm\fwd.hpp	/^	typedef detail::uint64 lowp_uint64_t;$/;"	t	namespace:glm
lowp_uint64_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint64 lowp_uint64_t;$/;"	t	namespace:glm
lowp_uint8	.\glm\fwd.hpp	/^	typedef detail::uint8 lowp_uint8;$/;"	t	namespace:glm
lowp_uint8	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint8 lowp_uint8;$/;"	t	namespace:glm
lowp_uint8_t	.\glm\fwd.hpp	/^	typedef detail::uint8 lowp_uint8_t;$/;"	t	namespace:glm
lowp_uint8_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint8 lowp_uint8_t;$/;"	t	namespace:glm
lowp_uint_t	.\glm\detail\type_int.hpp	/^	typedef unsigned int					lowp_uint_t;$/;"	t	namespace:glm::detail
lowp_umat2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x2<uint, lowp>				lowp_umat2;$/;"	t	namespace:glm
lowp_umat2x2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x2<uint, lowp>				lowp_umat2x2;$/;"	t	namespace:glm
lowp_umat2x3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x3<uint, lowp>				lowp_umat2x3;$/;"	t	namespace:glm
lowp_umat2x4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x4<uint, lowp>				lowp_umat2x4;$/;"	t	namespace:glm
lowp_umat3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x3<uint, lowp>				lowp_umat3;$/;"	t	namespace:glm
lowp_umat3x2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x2<uint, lowp>				lowp_umat3x2;$/;"	t	namespace:glm
lowp_umat3x3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x3<uint, lowp>				lowp_umat3x3;$/;"	t	namespace:glm
lowp_umat3x4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x4<uint, lowp>				lowp_umat3x4;$/;"	t	namespace:glm
lowp_umat4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x4<uint, lowp>				lowp_umat4;$/;"	t	namespace:glm
lowp_umat4x2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x2<uint, lowp>				lowp_umat4x2;$/;"	t	namespace:glm
lowp_umat4x3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x3<uint, lowp>				lowp_umat4x3;$/;"	t	namespace:glm
lowp_umat4x4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x4<uint, lowp>				lowp_umat4x4;$/;"	t	namespace:glm
lowp_uvec1	.\glm\gtc\vec1.hpp	/^	typedef lowp_uvec1_t			lowp_uvec1;$/;"	t	namespace:glm
lowp_uvec1_t	.\glm\detail\type_vec.hpp	/^	typedef tvec1<uint, lowp>		lowp_uvec1_t;$/;"	t	namespace:glm
lowp_uvec2	.\glm\detail\type_vec.hpp	/^	typedef tvec2<uint, lowp>		lowp_uvec2;$/;"	t	namespace:glm
lowp_uvec3	.\glm\detail\type_vec.hpp	/^	typedef tvec3<uint, lowp>		lowp_uvec3;$/;"	t	namespace:glm
lowp_uvec4	.\glm\detail\type_vec.hpp	/^	typedef tvec4<uint, lowp>		lowp_uvec4;$/;"	t	namespace:glm
lowp_vec1	.\glm\fwd.hpp	/^	typedef tvec1<float, lowp> lowp_vec1;$/;"	t	namespace:glm
lowp_vec1	.\glm\gtc\vec1.hpp	/^	typedef lowp_vec1_t				lowp_vec1;$/;"	t	namespace:glm
lowp_vec1_t	.\glm\detail\type_vec.hpp	/^	typedef tvec1<float, lowp>		lowp_vec1_t;$/;"	t	namespace:glm
lowp_vec2	.\glm\detail\type_vec.hpp	/^	typedef tvec2<float, lowp>		lowp_vec2;$/;"	t	namespace:glm
lowp_vec2	.\glm\fwd.hpp	/^	typedef tvec2<float, lowp> lowp_vec2;$/;"	t	namespace:glm
lowp_vec3	.\glm\detail\type_vec.hpp	/^	typedef tvec3<float, lowp>		lowp_vec3;$/;"	t	namespace:glm
lowp_vec3	.\glm\fwd.hpp	/^	typedef tvec3<float, lowp> lowp_vec3;$/;"	t	namespace:glm
lowp_vec4	.\glm\detail\type_vec.hpp	/^	typedef tvec4<float, lowp>		lowp_vec4;$/;"	t	namespace:glm
lowp_vec4	.\glm\fwd.hpp	/^	typedef tvec4<float, lowp> lowp_vec4;$/;"	t	namespace:glm
main	.\glm\detail\dummy.cpp	/^int main()$/;"	f
main	.\source.cpp	/^int main(int argc, char** args)$/;"	f
main	.\tinyxml\xmltest.cpp	/^int main()$/;"	f
mat2	.\glm\detail\type_mat.hpp	/^	typedef mat2x2					mat2;$/;"	t	namespace:glm
mat2x2	.\glm\detail\type_mat.hpp	/^	typedef highp_mat2x2			mat2x2;$/;"	t	namespace:glm
mat2x2	.\glm\detail\type_mat.hpp	/^	typedef lowp_mat2x2			mat2x2;$/;"	t	namespace:glm
mat2x2	.\glm\detail\type_mat.hpp	/^	typedef mediump_mat2x2		mat2x2;$/;"	t	namespace:glm
mat2x3	.\glm\detail\type_mat.hpp	/^	typedef highp_mat2x3			mat2x3;$/;"	t	namespace:glm
mat2x3	.\glm\detail\type_mat.hpp	/^	typedef lowp_mat2x3			mat2x3;$/;"	t	namespace:glm
mat2x3	.\glm\detail\type_mat.hpp	/^	typedef mediump_mat2x3		mat2x3;$/;"	t	namespace:glm
mat2x4	.\glm\detail\type_mat.hpp	/^	typedef highp_mat2x4			mat2x4;$/;"	t	namespace:glm
mat2x4	.\glm\detail\type_mat.hpp	/^	typedef lowp_mat2x4			mat2x4;$/;"	t	namespace:glm
mat2x4	.\glm\detail\type_mat.hpp	/^	typedef mediump_mat2x4		mat2x4;$/;"	t	namespace:glm
mat3	.\glm\detail\type_mat.hpp	/^	typedef mat3x3					mat3;$/;"	t	namespace:glm
mat3x2	.\glm\detail\type_mat.hpp	/^	typedef highp_mat3x2			mat3x2;$/;"	t	namespace:glm
mat3x2	.\glm\detail\type_mat.hpp	/^	typedef lowp_mat3x2			mat3x2;$/;"	t	namespace:glm
mat3x2	.\glm\detail\type_mat.hpp	/^	typedef mediump_mat3x2		mat3x2;$/;"	t	namespace:glm
mat3x3	.\glm\detail\type_mat.hpp	/^	typedef highp_mat3x3			mat3x3;$/;"	t	namespace:glm
mat3x3	.\glm\detail\type_mat.hpp	/^	typedef lowp_mat3x3			mat3x3;$/;"	t	namespace:glm
mat3x3	.\glm\detail\type_mat.hpp	/^	typedef mediump_mat3x3		mat3x3;$/;"	t	namespace:glm
mat3x4	.\glm\detail\type_mat.hpp	/^	typedef highp_mat3x4			mat3x4;$/;"	t	namespace:glm
mat3x4	.\glm\detail\type_mat.hpp	/^	typedef lowp_mat3x4			mat3x4;$/;"	t	namespace:glm
mat3x4	.\glm\detail\type_mat.hpp	/^	typedef mediump_mat3x4		mat3x4;$/;"	t	namespace:glm
mat4	.\glm\detail\type_mat.hpp	/^	typedef mat4x4					mat4;$/;"	t	namespace:glm
mat4x2	.\glm\detail\type_mat.hpp	/^	typedef highp_mat4x2			mat4x2;$/;"	t	namespace:glm
mat4x2	.\glm\detail\type_mat.hpp	/^	typedef lowp_mat4x2			mat4x2;$/;"	t	namespace:glm
mat4x2	.\glm\detail\type_mat.hpp	/^	typedef mediump_mat4x2		mat4x2;$/;"	t	namespace:glm
mat4x3	.\glm\detail\type_mat.hpp	/^	typedef highp_mat4x3			mat4x3;$/;"	t	namespace:glm
mat4x3	.\glm\detail\type_mat.hpp	/^	typedef lowp_mat4x3			mat4x3;$/;"	t	namespace:glm
mat4x3	.\glm\detail\type_mat.hpp	/^	typedef mediump_mat4x3		mat4x3;$/;"	t	namespace:glm
mat4x4	.\glm\detail\type_mat.hpp	/^	typedef highp_mat4x4			mat4x4;$/;"	t	namespace:glm
mat4x4	.\glm\detail\type_mat.hpp	/^	typedef lowp_mat4x4			mat4x4;$/;"	t	namespace:glm
mat4x4	.\glm\detail\type_mat.hpp	/^	typedef mediump_mat4x4		mat4x4;$/;"	t	namespace:glm
max	.\glm\detail\_fixes.hpp	8;"	d
mediump	.\glm\detail\precision.hpp	/^		mediump = packed_mediump,$/;"	e	enum:glm::precision
mediump_bvec1	.\glm\gtc\vec1.hpp	/^	typedef mediump_bvec1_t			mediump_bvec1;$/;"	t	namespace:glm
mediump_bvec1_t	.\glm\detail\type_vec.hpp	/^	typedef tvec1<bool, mediump>	mediump_bvec1_t;$/;"	t	namespace:glm
mediump_bvec2	.\glm\detail\type_vec.hpp	/^	typedef tvec2<bool, mediump>	mediump_bvec2;$/;"	t	namespace:glm
mediump_bvec3	.\glm\detail\type_vec.hpp	/^	typedef tvec3<bool, mediump>	mediump_bvec3;$/;"	t	namespace:glm
mediump_bvec4	.\glm\detail\type_vec.hpp	/^	typedef tvec4<bool, mediump>	mediump_bvec4;$/;"	t	namespace:glm
mediump_ddualquat	.\glm\gtx\dual_quaternion.hpp	/^	typedef tdualquat<double, mediump>	mediump_ddualquat;$/;"	t	namespace:glm
mediump_dmat2	.\glm\detail\type_mat.hpp	/^	typedef tmat2x2<double, mediump>	mediump_dmat2;$/;"	t	namespace:glm
mediump_dmat2x2	.\glm\detail\type_mat.hpp	/^	typedef tmat2x2<double, mediump>	mediump_dmat2x2;$/;"	t	namespace:glm
mediump_dmat2x3	.\glm\detail\type_mat.hpp	/^	typedef tmat2x3<double, mediump>	mediump_dmat2x3;$/;"	t	namespace:glm
mediump_dmat2x4	.\glm\detail\type_mat.hpp	/^	typedef tmat2x4<double, mediump>	mediump_dmat2x4;$/;"	t	namespace:glm
mediump_dmat3	.\glm\detail\type_mat.hpp	/^	typedef tmat3x3<double, mediump>	mediump_dmat3;$/;"	t	namespace:glm
mediump_dmat3x2	.\glm\detail\type_mat.hpp	/^	typedef tmat3x2<double, mediump>	mediump_dmat3x2;$/;"	t	namespace:glm
mediump_dmat3x3	.\glm\detail\type_mat.hpp	/^	typedef tmat3x3<double, mediump>	mediump_dmat3x3;$/;"	t	namespace:glm
mediump_dmat3x4	.\glm\detail\type_mat.hpp	/^	typedef tmat3x4<double, mediump>	mediump_dmat3x4;$/;"	t	namespace:glm
mediump_dmat4	.\glm\detail\type_mat.hpp	/^	typedef tmat4x4<double, mediump>	mediump_dmat4;$/;"	t	namespace:glm
mediump_dmat4x2	.\glm\detail\type_mat.hpp	/^	typedef tmat4x2<double, mediump>	mediump_dmat4x2;$/;"	t	namespace:glm
mediump_dmat4x3	.\glm\detail\type_mat.hpp	/^	typedef tmat4x3<double, mediump>	mediump_dmat4x3;$/;"	t	namespace:glm
mediump_dmat4x4	.\glm\detail\type_mat.hpp	/^	typedef tmat4x4<double, mediump>	mediump_dmat4x4;$/;"	t	namespace:glm
mediump_dquat	.\glm\fwd.hpp	/^	typedef tquat<double, mediump>	mediump_dquat;$/;"	t	namespace:glm
mediump_dualquat	.\glm\gtx\dual_quaternion.hpp	/^	typedef tdualquat<float, mediump>	mediump_dualquat;$/;"	t	namespace:glm
mediump_dvec1	.\glm\gtc\vec1.hpp	/^	typedef mediump_dvec1_t			mediump_dvec1;$/;"	t	namespace:glm
mediump_dvec1_t	.\glm\detail\type_vec.hpp	/^	typedef tvec1<double, mediump>	mediump_dvec1_t;$/;"	t	namespace:glm
mediump_dvec2	.\glm\detail\type_vec.hpp	/^	typedef tvec2<double, mediump>	mediump_dvec2;$/;"	t	namespace:glm
mediump_dvec3	.\glm\detail\type_vec.hpp	/^	typedef tvec3<double, mediump>	mediump_dvec3;$/;"	t	namespace:glm
mediump_dvec4	.\glm\detail\type_vec.hpp	/^	typedef tvec4<double, mediump>	mediump_dvec4;$/;"	t	namespace:glm
mediump_f32	.\glm\fwd.hpp	/^	typedef float32 mediump_f32;$/;"	t	namespace:glm
mediump_f32mat2	.\glm\fwd.hpp	/^	typedef mediump_f32mat2x2 mediump_f32mat2;$/;"	t	namespace:glm
mediump_f32mat2x2	.\glm\fwd.hpp	/^	typedef tmat2x2<f32, mediump> mediump_f32mat2x2;$/;"	t	namespace:glm
mediump_f32mat2x3	.\glm\fwd.hpp	/^	typedef tmat2x3<f32, mediump> mediump_f32mat2x3;$/;"	t	namespace:glm
mediump_f32mat2x4	.\glm\fwd.hpp	/^	typedef tmat2x4<f32, mediump> mediump_f32mat2x4;$/;"	t	namespace:glm
mediump_f32mat3	.\glm\fwd.hpp	/^	typedef mediump_f32mat3x3 mediump_f32mat3;$/;"	t	namespace:glm
mediump_f32mat3x2	.\glm\fwd.hpp	/^	typedef tmat3x2<f32, mediump> mediump_f32mat3x2;$/;"	t	namespace:glm
mediump_f32mat3x3	.\glm\fwd.hpp	/^	typedef tmat3x3<f32, mediump> mediump_f32mat3x3;$/;"	t	namespace:glm
mediump_f32mat3x4	.\glm\fwd.hpp	/^	typedef tmat3x4<f32, mediump> mediump_f32mat3x4;$/;"	t	namespace:glm
mediump_f32mat4	.\glm\fwd.hpp	/^	typedef mediump_f32mat4x4 mediump_f32mat4;$/;"	t	namespace:glm
mediump_f32mat4x2	.\glm\fwd.hpp	/^	typedef tmat4x2<f32, mediump> mediump_f32mat4x2;$/;"	t	namespace:glm
mediump_f32mat4x3	.\glm\fwd.hpp	/^	typedef tmat4x3<f32, mediump> mediump_f32mat4x3;$/;"	t	namespace:glm
mediump_f32mat4x4	.\glm\fwd.hpp	/^	typedef tmat4x4<f32, mediump> mediump_f32mat4x4;$/;"	t	namespace:glm
mediump_f32quat	.\glm\fwd.hpp	/^	typedef tquat<f32, mediump> mediump_f32quat;$/;"	t	namespace:glm
mediump_f32vec1	.\glm\fwd.hpp	/^	typedef tvec1<f32, mediump> mediump_f32vec1;$/;"	t	namespace:glm
mediump_f32vec2	.\glm\fwd.hpp	/^	typedef tvec2<f32, mediump> mediump_f32vec2;$/;"	t	namespace:glm
mediump_f32vec3	.\glm\fwd.hpp	/^	typedef tvec3<f32, mediump> mediump_f32vec3;$/;"	t	namespace:glm
mediump_f32vec4	.\glm\fwd.hpp	/^	typedef tvec4<f32, mediump> mediump_f32vec4;$/;"	t	namespace:glm
mediump_f64	.\glm\fwd.hpp	/^	typedef float64 mediump_f64;$/;"	t	namespace:glm
mediump_f64mat2	.\glm\fwd.hpp	/^	typedef mediump_f64mat2x2 mediump_f64mat2;$/;"	t	namespace:glm
mediump_f64mat2x2	.\glm\fwd.hpp	/^	typedef tmat2x2<f64, mediump> mediump_f64mat2x2;$/;"	t	namespace:glm
mediump_f64mat2x3	.\glm\fwd.hpp	/^	typedef tmat2x3<f64, mediump> mediump_f64mat2x3;$/;"	t	namespace:glm
mediump_f64mat2x4	.\glm\fwd.hpp	/^	typedef tmat2x4<f64, mediump> mediump_f64mat2x4;$/;"	t	namespace:glm
mediump_f64mat3	.\glm\fwd.hpp	/^	typedef mediump_f64mat3x3 mediump_f64mat3;$/;"	t	namespace:glm
mediump_f64mat3x2	.\glm\fwd.hpp	/^	typedef tmat3x2<f64, mediump> mediump_f64mat3x2;$/;"	t	namespace:glm
mediump_f64mat3x3	.\glm\fwd.hpp	/^	typedef tmat3x3<f64, mediump> mediump_f64mat3x3;$/;"	t	namespace:glm
mediump_f64mat3x4	.\glm\fwd.hpp	/^	typedef tmat3x4<f64, mediump> mediump_f64mat3x4;$/;"	t	namespace:glm
mediump_f64mat4	.\glm\fwd.hpp	/^	typedef mediump_f64mat4x4 mediump_f64mat4;$/;"	t	namespace:glm
mediump_f64mat4x2	.\glm\fwd.hpp	/^	typedef tmat4x2<f64, mediump> mediump_f64mat4x2;$/;"	t	namespace:glm
mediump_f64mat4x3	.\glm\fwd.hpp	/^	typedef tmat4x3<f64, mediump> mediump_f64mat4x3;$/;"	t	namespace:glm
mediump_f64mat4x4	.\glm\fwd.hpp	/^	typedef tmat4x4<f64, mediump> mediump_f64mat4x4;$/;"	t	namespace:glm
mediump_f64quat	.\glm\fwd.hpp	/^	typedef tquat<f64, mediump> mediump_f64quat;$/;"	t	namespace:glm
mediump_f64vec1	.\glm\fwd.hpp	/^	typedef tvec1<f64, mediump> mediump_f64vec1;$/;"	t	namespace:glm
mediump_f64vec2	.\glm\fwd.hpp	/^	typedef tvec2<f64, mediump> mediump_f64vec2;$/;"	t	namespace:glm
mediump_f64vec3	.\glm\fwd.hpp	/^	typedef tvec3<f64, mediump> mediump_f64vec3;$/;"	t	namespace:glm
mediump_f64vec4	.\glm\fwd.hpp	/^	typedef tvec4<f64, mediump> mediump_f64vec4;$/;"	t	namespace:glm
mediump_fdualquat	.\glm\gtx\dual_quaternion.hpp	/^	typedef tdualquat<float, mediump>	mediump_fdualquat;$/;"	t	namespace:glm
mediump_float	.\glm\detail\type_float.hpp	/^	typedef mediump_float_t		mediump_float;$/;"	t	namespace:glm
mediump_float32	.\glm\fwd.hpp	/^	typedef detail::float32 mediump_float32;$/;"	t	namespace:glm
mediump_float32_t	.\glm\fwd.hpp	/^	typedef detail::float32 mediump_float32_t;$/;"	t	namespace:glm
mediump_float64	.\glm\fwd.hpp	/^	typedef detail::float64 mediump_float64;$/;"	t	namespace:glm
mediump_float64_t	.\glm\fwd.hpp	/^	typedef detail::float64 mediump_float64_t;$/;"	t	namespace:glm
mediump_float_t	.\glm\detail\type_float.hpp	/^	typedef float				mediump_float_t;$/;"	t	namespace:glm
mediump_fmat2	.\glm\fwd.hpp	/^	typedef mediump_fmat2x2 mediump_fmat2;$/;"	t	namespace:glm
mediump_fmat2x2	.\glm\fwd.hpp	/^	typedef tmat2x2<f32, mediump> mediump_fmat2x2;$/;"	t	namespace:glm
mediump_fmat2x3	.\glm\fwd.hpp	/^	typedef tmat2x3<f32, mediump> mediump_fmat2x3;$/;"	t	namespace:glm
mediump_fmat2x4	.\glm\fwd.hpp	/^	typedef tmat2x4<f32, mediump> mediump_fmat2x4;$/;"	t	namespace:glm
mediump_fmat3	.\glm\fwd.hpp	/^	typedef mediump_fmat3x3 mediump_fmat3;$/;"	t	namespace:glm
mediump_fmat3x2	.\glm\fwd.hpp	/^	typedef tmat3x2<f32, mediump> mediump_fmat3x2;$/;"	t	namespace:glm
mediump_fmat3x3	.\glm\fwd.hpp	/^	typedef tmat3x3<f32, mediump> mediump_fmat3x3;$/;"	t	namespace:glm
mediump_fmat3x4	.\glm\fwd.hpp	/^	typedef tmat3x4<f32, mediump> mediump_fmat3x4;$/;"	t	namespace:glm
mediump_fmat4	.\glm\fwd.hpp	/^	typedef mediump_fmat4x4 mediump_fmat4;$/;"	t	namespace:glm
mediump_fmat4x2	.\glm\fwd.hpp	/^	typedef tmat4x2<f32, mediump> mediump_fmat4x2;$/;"	t	namespace:glm
mediump_fmat4x3	.\glm\fwd.hpp	/^	typedef tmat4x3<f32, mediump> mediump_fmat4x3;$/;"	t	namespace:glm
mediump_fmat4x4	.\glm\fwd.hpp	/^	typedef tmat4x4<f32, mediump> mediump_fmat4x4;$/;"	t	namespace:glm
mediump_fquat	.\glm\fwd.hpp	/^	typedef mediump_quat		mediump_fquat;$/;"	t	namespace:glm
mediump_fvec1	.\glm\fwd.hpp	/^	typedef tvec1<float, mediump> mediump_fvec1;$/;"	t	namespace:glm
mediump_fvec2	.\glm\fwd.hpp	/^	typedef tvec2<float, mediump> mediump_fvec2;$/;"	t	namespace:glm
mediump_fvec3	.\glm\fwd.hpp	/^	typedef tvec3<float, mediump> mediump_fvec3;$/;"	t	namespace:glm
mediump_fvec4	.\glm\fwd.hpp	/^	typedef tvec4<float, mediump> mediump_fvec4;$/;"	t	namespace:glm
mediump_i16	.\glm\fwd.hpp	/^	typedef detail::int16 mediump_i16;$/;"	t	namespace:glm
mediump_i16	.\glm\gtc\type_precision.hpp	/^	typedef detail::int16 mediump_i16;$/;"	t	namespace:glm
mediump_i16vec1	.\glm\fwd.hpp	/^	typedef tvec1<i16, mediump>		mediump_i16vec1;$/;"	t	namespace:glm
mediump_i16vec2	.\glm\fwd.hpp	/^	typedef tvec2<i16, mediump>		mediump_i16vec2;$/;"	t	namespace:glm
mediump_i16vec3	.\glm\fwd.hpp	/^	typedef tvec3<i16, mediump>		mediump_i16vec3;$/;"	t	namespace:glm
mediump_i16vec4	.\glm\fwd.hpp	/^	typedef tvec4<i16, mediump>		mediump_i16vec4;$/;"	t	namespace:glm
mediump_i32	.\glm\fwd.hpp	/^	typedef detail::int32 mediump_i32;$/;"	t	namespace:glm
mediump_i32	.\glm\gtc\type_precision.hpp	/^	typedef detail::int32 mediump_i32;$/;"	t	namespace:glm
mediump_i32vec1	.\glm\fwd.hpp	/^	typedef tvec1<i32, mediump>		mediump_i32vec1;$/;"	t	namespace:glm
mediump_i32vec2	.\glm\fwd.hpp	/^	typedef tvec2<i32, mediump>		mediump_i32vec2;$/;"	t	namespace:glm
mediump_i32vec3	.\glm\fwd.hpp	/^	typedef tvec3<i32, mediump>		mediump_i32vec3;$/;"	t	namespace:glm
mediump_i32vec4	.\glm\fwd.hpp	/^	typedef tvec4<i32, mediump>		mediump_i32vec4;$/;"	t	namespace:glm
mediump_i64	.\glm\fwd.hpp	/^	typedef detail::int64 mediump_i64;$/;"	t	namespace:glm
mediump_i64	.\glm\gtc\type_precision.hpp	/^	typedef detail::int64 mediump_i64;$/;"	t	namespace:glm
mediump_i64vec1	.\glm\fwd.hpp	/^	typedef tvec1<i64, mediump>		mediump_i64vec1;$/;"	t	namespace:glm
mediump_i64vec2	.\glm\fwd.hpp	/^	typedef tvec2<i64, mediump>		mediump_i64vec2;$/;"	t	namespace:glm
mediump_i64vec3	.\glm\fwd.hpp	/^	typedef tvec3<i64, mediump>		mediump_i64vec3;$/;"	t	namespace:glm
mediump_i64vec4	.\glm\fwd.hpp	/^	typedef tvec4<i64, mediump>		mediump_i64vec4;$/;"	t	namespace:glm
mediump_i8	.\glm\fwd.hpp	/^	typedef detail::int8 mediump_i8;$/;"	t	namespace:glm
mediump_i8	.\glm\gtc\type_precision.hpp	/^	typedef detail::int8 mediump_i8;$/;"	t	namespace:glm
mediump_i8vec1	.\glm\fwd.hpp	/^	typedef tvec1<i8, mediump> mediump_i8vec1;$/;"	t	namespace:glm
mediump_i8vec2	.\glm\fwd.hpp	/^	typedef tvec2<i8, mediump> mediump_i8vec2;$/;"	t	namespace:glm
mediump_i8vec3	.\glm\fwd.hpp	/^	typedef tvec3<i8, mediump> mediump_i8vec3;$/;"	t	namespace:glm
mediump_i8vec4	.\glm\fwd.hpp	/^	typedef tvec4<i8, mediump> mediump_i8vec4;$/;"	t	namespace:glm
mediump_imat2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x2<int, mediump>			mediump_imat2;$/;"	t	namespace:glm
mediump_imat2x2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x2<int, mediump>			mediump_imat2x2;$/;"	t	namespace:glm
mediump_imat2x3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x3<int, mediump>			mediump_imat2x3;$/;"	t	namespace:glm
mediump_imat2x4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x4<int, mediump>			mediump_imat2x4;$/;"	t	namespace:glm
mediump_imat3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x3<int, mediump>			mediump_imat3;$/;"	t	namespace:glm
mediump_imat3x2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x2<int, mediump>			mediump_imat3x2;$/;"	t	namespace:glm
mediump_imat3x3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x3<int, mediump>			mediump_imat3x3;$/;"	t	namespace:glm
mediump_imat3x4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x4<int, mediump>			mediump_imat3x4;$/;"	t	namespace:glm
mediump_imat4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x4<int, mediump>			mediump_imat4;$/;"	t	namespace:glm
mediump_imat4x2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x2<int, mediump>			mediump_imat4x2;$/;"	t	namespace:glm
mediump_imat4x3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x3<int, mediump>			mediump_imat4x3;$/;"	t	namespace:glm
mediump_imat4x4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x4<int, mediump>			mediump_imat4x4;$/;"	t	namespace:glm
mediump_int	.\glm\detail\type_int.hpp	/^	typedef detail::mediump_int_t			mediump_int;$/;"	t	namespace:glm
mediump_int16	.\glm\fwd.hpp	/^	typedef detail::int16 mediump_int16;$/;"	t	namespace:glm
mediump_int16	.\glm\gtc\type_precision.hpp	/^	typedef detail::int16 mediump_int16;$/;"	t	namespace:glm
mediump_int16_t	.\glm\fwd.hpp	/^	typedef detail::int16 mediump_int16_t;$/;"	t	namespace:glm
mediump_int16_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::int16 mediump_int16_t;$/;"	t	namespace:glm
mediump_int32	.\glm\fwd.hpp	/^	typedef detail::int32 mediump_int32;$/;"	t	namespace:glm
mediump_int32	.\glm\gtc\type_precision.hpp	/^	typedef detail::int32 mediump_int32;$/;"	t	namespace:glm
mediump_int32_t	.\glm\fwd.hpp	/^	typedef detail::int32 mediump_int32_t;$/;"	t	namespace:glm
mediump_int32_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::int32 mediump_int32_t;$/;"	t	namespace:glm
mediump_int64	.\glm\fwd.hpp	/^	typedef detail::int64 mediump_int64;$/;"	t	namespace:glm
mediump_int64	.\glm\gtc\type_precision.hpp	/^	typedef detail::int64 mediump_int64;$/;"	t	namespace:glm
mediump_int64_t	.\glm\fwd.hpp	/^	typedef detail::int64 mediump_int64_t;$/;"	t	namespace:glm
mediump_int64_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::int64 mediump_int64_t;$/;"	t	namespace:glm
mediump_int8	.\glm\fwd.hpp	/^	typedef detail::int8 mediump_int8;$/;"	t	namespace:glm
mediump_int8	.\glm\gtc\type_precision.hpp	/^	typedef detail::int8 mediump_int8;$/;"	t	namespace:glm
mediump_int8_t	.\glm\fwd.hpp	/^	typedef detail::int8 mediump_int8_t;$/;"	t	namespace:glm
mediump_int8_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::int8 mediump_int8_t;$/;"	t	namespace:glm
mediump_int_t	.\glm\detail\type_int.hpp	/^	typedef signed int						mediump_int_t;$/;"	t	namespace:glm::detail
mediump_ivec1	.\glm\gtc\vec1.hpp	/^	typedef mediump_ivec1_t			mediump_ivec1;$/;"	t	namespace:glm
mediump_ivec1_t	.\glm\detail\type_vec.hpp	/^	typedef tvec1<int, mediump>		mediump_ivec1_t;$/;"	t	namespace:glm
mediump_ivec2	.\glm\detail\type_vec.hpp	/^	typedef tvec2<int, mediump>		mediump_ivec2;$/;"	t	namespace:glm
mediump_ivec3	.\glm\detail\type_vec.hpp	/^	typedef tvec3<int, mediump>		mediump_ivec3;$/;"	t	namespace:glm
mediump_ivec4	.\glm\detail\type_vec.hpp	/^	typedef tvec4<int, mediump>		mediump_ivec4;$/;"	t	namespace:glm
mediump_mat2	.\glm\detail\type_mat.hpp	/^	typedef tmat2x2<float, mediump>		mediump_mat2;$/;"	t	namespace:glm
mediump_mat2	.\glm\mat2x2.hpp	/^	typedef tmat2x2<float, mediump>		mediump_mat2;$/;"	t	namespace:glm
mediump_mat2x2	.\glm\detail\type_mat.hpp	/^	typedef tmat2x2<float, mediump>		mediump_mat2x2;$/;"	t	namespace:glm
mediump_mat2x2	.\glm\mat2x2.hpp	/^	typedef tmat2x2<float, mediump>		mediump_mat2x2;$/;"	t	namespace:glm
mediump_mat2x3	.\glm\detail\type_mat.hpp	/^	typedef tmat2x3<float, mediump>		mediump_mat2x3;$/;"	t	namespace:glm
mediump_mat2x3	.\glm\mat2x3.hpp	/^	typedef tmat2x3<float, mediump>		mediump_mat2x3;$/;"	t	namespace:glm
mediump_mat2x4	.\glm\detail\type_mat.hpp	/^	typedef tmat2x4<float, mediump>		mediump_mat2x4;$/;"	t	namespace:glm
mediump_mat2x4	.\glm\mat2x4.hpp	/^	typedef tmat2x4<float, mediump>		mediump_mat2x4;$/;"	t	namespace:glm
mediump_mat3	.\glm\detail\type_mat.hpp	/^	typedef tmat3x3<float, mediump>		mediump_mat3;$/;"	t	namespace:glm
mediump_mat3	.\glm\mat3x3.hpp	/^	typedef tmat3x3<float, mediump>		mediump_mat3;$/;"	t	namespace:glm
mediump_mat3x2	.\glm\detail\type_mat.hpp	/^	typedef tmat3x2<float, mediump>		mediump_mat3x2;$/;"	t	namespace:glm
mediump_mat3x2	.\glm\mat3x2.hpp	/^	typedef tmat3x2<float, mediump>		mediump_mat3x2;$/;"	t	namespace:glm
mediump_mat3x3	.\glm\detail\type_mat.hpp	/^	typedef tmat3x3<float, mediump>		mediump_mat3x3;$/;"	t	namespace:glm
mediump_mat3x3	.\glm\mat3x3.hpp	/^	typedef tmat3x3<float, mediump>		mediump_mat3x3;$/;"	t	namespace:glm
mediump_mat3x4	.\glm\detail\type_mat.hpp	/^	typedef tmat3x4<float, mediump>		mediump_mat3x4;$/;"	t	namespace:glm
mediump_mat3x4	.\glm\mat3x4.hpp	/^	typedef tmat3x4<float, mediump>		mediump_mat3x4;$/;"	t	namespace:glm
mediump_mat4	.\glm\detail\type_mat.hpp	/^	typedef tmat4x4<float, mediump>		mediump_mat4;$/;"	t	namespace:glm
mediump_mat4	.\glm\mat4x4.hpp	/^	typedef tmat4x4<float, mediump>		mediump_mat4;$/;"	t	namespace:glm
mediump_mat4x2	.\glm\detail\type_mat.hpp	/^	typedef tmat4x2<float, mediump>		mediump_mat4x2;$/;"	t	namespace:glm
mediump_mat4x2	.\glm\mat4x2.hpp	/^	typedef tmat4x2<float, mediump>		mediump_mat4x2;$/;"	t	namespace:glm
mediump_mat4x3	.\glm\detail\type_mat.hpp	/^	typedef tmat4x3<float, mediump>		mediump_mat4x3;$/;"	t	namespace:glm
mediump_mat4x3	.\glm\mat4x3.hpp	/^	typedef tmat4x3<float, mediump>		mediump_mat4x3;$/;"	t	namespace:glm
mediump_mat4x4	.\glm\detail\type_mat.hpp	/^	typedef tmat4x4<float, mediump>		mediump_mat4x4;$/;"	t	namespace:glm
mediump_mat4x4	.\glm\mat4x4.hpp	/^	typedef tmat4x4<float, mediump>		mediump_mat4x4;$/;"	t	namespace:glm
mediump_quat	.\glm\fwd.hpp	/^	typedef tquat<float, mediump>	mediump_quat;$/;"	t	namespace:glm
mediump_u16	.\glm\fwd.hpp	/^	typedef detail::uint16 mediump_u16;$/;"	t	namespace:glm
mediump_u16	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint16 mediump_u16;$/;"	t	namespace:glm
mediump_u16vec1	.\glm\fwd.hpp	/^	typedef tvec1<u16, mediump>		mediump_u16vec1;$/;"	t	namespace:glm
mediump_u16vec2	.\glm\fwd.hpp	/^	typedef tvec2<u16, mediump>		mediump_u16vec2;$/;"	t	namespace:glm
mediump_u16vec3	.\glm\fwd.hpp	/^	typedef tvec3<u16, mediump>		mediump_u16vec3;$/;"	t	namespace:glm
mediump_u16vec4	.\glm\fwd.hpp	/^	typedef tvec4<u16, mediump>		mediump_u16vec4;$/;"	t	namespace:glm
mediump_u32	.\glm\fwd.hpp	/^	typedef detail::uint32 mediump_u32;$/;"	t	namespace:glm
mediump_u32	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint32 mediump_u32;$/;"	t	namespace:glm
mediump_u32vec1	.\glm\fwd.hpp	/^	typedef tvec1<u32, mediump>		mediump_u32vec1;$/;"	t	namespace:glm
mediump_u32vec2	.\glm\fwd.hpp	/^	typedef tvec2<u32, mediump>		mediump_u32vec2;$/;"	t	namespace:glm
mediump_u32vec3	.\glm\fwd.hpp	/^	typedef tvec3<u32, mediump>		mediump_u32vec3;$/;"	t	namespace:glm
mediump_u32vec4	.\glm\fwd.hpp	/^	typedef tvec4<u32, mediump>		mediump_u32vec4;$/;"	t	namespace:glm
mediump_u64	.\glm\fwd.hpp	/^	typedef detail::uint64 mediump_u64;$/;"	t	namespace:glm
mediump_u64	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint64 mediump_u64;$/;"	t	namespace:glm
mediump_u64vec1	.\glm\fwd.hpp	/^	typedef tvec1<u64, mediump>		mediump_u64vec1;$/;"	t	namespace:glm
mediump_u64vec2	.\glm\fwd.hpp	/^	typedef tvec2<u64, mediump>		mediump_u64vec2;$/;"	t	namespace:glm
mediump_u64vec3	.\glm\fwd.hpp	/^	typedef tvec3<u64, mediump>		mediump_u64vec3;$/;"	t	namespace:glm
mediump_u64vec4	.\glm\fwd.hpp	/^	typedef tvec4<u64, mediump>		mediump_u64vec4;$/;"	t	namespace:glm
mediump_u8	.\glm\fwd.hpp	/^	typedef detail::uint8 mediump_u8;$/;"	t	namespace:glm
mediump_u8	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint8 mediump_u8;$/;"	t	namespace:glm
mediump_u8vec1	.\glm\fwd.hpp	/^	typedef tvec1<u8, mediump> mediump_u8vec1;$/;"	t	namespace:glm
mediump_u8vec2	.\glm\fwd.hpp	/^	typedef tvec2<u8, mediump> mediump_u8vec2;$/;"	t	namespace:glm
mediump_u8vec3	.\glm\fwd.hpp	/^	typedef tvec3<u8, mediump> mediump_u8vec3;$/;"	t	namespace:glm
mediump_u8vec4	.\glm\fwd.hpp	/^	typedef tvec4<u8, mediump> mediump_u8vec4;$/;"	t	namespace:glm
mediump_uint	.\glm\detail\type_int.hpp	/^	typedef detail::mediump_uint_t			mediump_uint;$/;"	t	namespace:glm
mediump_uint16	.\glm\fwd.hpp	/^	typedef detail::uint16 mediump_uint16;$/;"	t	namespace:glm
mediump_uint16	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint16 mediump_uint16;$/;"	t	namespace:glm
mediump_uint16_t	.\glm\fwd.hpp	/^	typedef detail::uint16 mediump_uint16_t;$/;"	t	namespace:glm
mediump_uint16_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint16 mediump_uint16_t;$/;"	t	namespace:glm
mediump_uint32	.\glm\fwd.hpp	/^	typedef detail::uint32 mediump_uint32;$/;"	t	namespace:glm
mediump_uint32	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint32 mediump_uint32;$/;"	t	namespace:glm
mediump_uint32_t	.\glm\fwd.hpp	/^	typedef detail::uint32 mediump_uint32_t;$/;"	t	namespace:glm
mediump_uint32_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint32 mediump_uint32_t;$/;"	t	namespace:glm
mediump_uint64	.\glm\fwd.hpp	/^	typedef detail::uint64 mediump_uint64;$/;"	t	namespace:glm
mediump_uint64	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint64 mediump_uint64;$/;"	t	namespace:glm
mediump_uint64_t	.\glm\fwd.hpp	/^	typedef detail::uint64 mediump_uint64_t;$/;"	t	namespace:glm
mediump_uint64_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint64 mediump_uint64_t;$/;"	t	namespace:glm
mediump_uint8	.\glm\fwd.hpp	/^	typedef detail::uint8 mediump_uint8;$/;"	t	namespace:glm
mediump_uint8	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint8 mediump_uint8;$/;"	t	namespace:glm
mediump_uint8_t	.\glm\fwd.hpp	/^	typedef detail::uint8 mediump_uint8_t;$/;"	t	namespace:glm
mediump_uint8_t	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint8 mediump_uint8_t;$/;"	t	namespace:glm
mediump_uint_t	.\glm\detail\type_int.hpp	/^	typedef unsigned int					mediump_uint_t;$/;"	t	namespace:glm::detail
mediump_umat2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x2<uint, mediump>			mediump_umat2;$/;"	t	namespace:glm
mediump_umat2x2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x2<uint, mediump>			mediump_umat2x2;$/;"	t	namespace:glm
mediump_umat2x3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x3<uint, mediump>			mediump_umat2x3;$/;"	t	namespace:glm
mediump_umat2x4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat2x4<uint, mediump>			mediump_umat2x4;$/;"	t	namespace:glm
mediump_umat3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x3<uint, mediump>			mediump_umat3;$/;"	t	namespace:glm
mediump_umat3x2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x2<uint, mediump>			mediump_umat3x2;$/;"	t	namespace:glm
mediump_umat3x3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x3<uint, mediump>			mediump_umat3x3;$/;"	t	namespace:glm
mediump_umat3x4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat3x4<uint, mediump>			mediump_umat3x4;$/;"	t	namespace:glm
mediump_umat4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x4<uint, mediump>			mediump_umat4;$/;"	t	namespace:glm
mediump_umat4x2	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x2<uint, mediump>			mediump_umat4x2;$/;"	t	namespace:glm
mediump_umat4x3	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x3<uint, mediump>			mediump_umat4x3;$/;"	t	namespace:glm
mediump_umat4x4	.\glm\gtc\matrix_integer.hpp	/^	typedef tmat4x4<uint, mediump>			mediump_umat4x4;$/;"	t	namespace:glm
mediump_uvec1	.\glm\gtc\vec1.hpp	/^	typedef mediump_uvec1_t			mediump_uvec1;$/;"	t	namespace:glm
mediump_uvec1_t	.\glm\detail\type_vec.hpp	/^	typedef tvec1<uint, mediump>	mediump_uvec1_t;$/;"	t	namespace:glm
mediump_uvec2	.\glm\detail\type_vec.hpp	/^	typedef tvec2<uint, mediump>	mediump_uvec2;$/;"	t	namespace:glm
mediump_uvec3	.\glm\detail\type_vec.hpp	/^	typedef tvec3<uint, mediump>	mediump_uvec3;$/;"	t	namespace:glm
mediump_uvec4	.\glm\detail\type_vec.hpp	/^	typedef tvec4<uint, mediump>	mediump_uvec4;$/;"	t	namespace:glm
mediump_vec1	.\glm\fwd.hpp	/^	typedef tvec1<float, mediump> mediump_vec1;$/;"	t	namespace:glm
mediump_vec1	.\glm\gtc\vec1.hpp	/^	typedef mediump_vec1_t			mediump_vec1;$/;"	t	namespace:glm
mediump_vec1_t	.\glm\detail\type_vec.hpp	/^	typedef tvec1<float, mediump>	mediump_vec1_t;$/;"	t	namespace:glm
mediump_vec2	.\glm\detail\type_vec.hpp	/^	typedef tvec2<float, mediump>	mediump_vec2;$/;"	t	namespace:glm
mediump_vec2	.\glm\fwd.hpp	/^	typedef tvec2<float, mediump> mediump_vec2;$/;"	t	namespace:glm
mediump_vec3	.\glm\detail\type_vec.hpp	/^	typedef tvec3<float, mediump>	mediump_vec3;$/;"	t	namespace:glm
mediump_vec3	.\glm\fwd.hpp	/^	typedef tvec3<float, mediump> mediump_vec3;$/;"	t	namespace:glm
mediump_vec4	.\glm\detail\type_vec.hpp	/^	typedef tvec4<float, mediump>	mediump_vec4;$/;"	t	namespace:glm
mediump_vec4	.\glm\fwd.hpp	/^	typedef tvec4<float, mediump> mediump_vec4;$/;"	t	namespace:glm
min	.\glm\detail\_fixes.hpp	13;"	d
mod289	.\glm\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER T mod289(T const & x)$/;"	f	namespace:glm::detail
name	.\tinyxml\tinyxml.h	/^	TIXML_STRING name;$/;"	m	class:TiXmlAttribute
newline	.\glm\gtx\io.hpp	/^			char_type  newline;$/;"	m	class:glm::io::format_punct
next	.\tinyxml\tinyxml.h	/^	TiXmlAttribute*	next;$/;"	m	class:TiXmlAttribute
next	.\tinyxml\tinyxml.h	/^	TiXmlNode*		next;$/;"	m	class:TiXmlNode
nice	.\glm\detail\type_gentype.hpp	/^		nice,$/;"	e	enum:glm::profile
node	.\tinyxml\tinyxml.h	/^	TiXmlNode* node;$/;"	m	class:TiXmlHandle
normalize	.\util\Vector2.h	/^	void normalize() $/;"	f	class:Vector2D
npos	.\tinyxml\tinystr.cpp	/^const TiXmlString::size_type TiXmlString::npos = static_cast< TiXmlString::size_type >(-1);$/;"	m	class:TiXmlString	file:
npos	.\tinyxml\tinystr.h	/^	static const size_type npos; \/\/ = -1;$/;"	m	class:TiXmlString
null	.\glm\detail\type_gentype.hpp	/^		enum ctor{null};$/;"	e	enum:glm::detail::genType::ctor
nullrep_	.\tinyxml\tinystr.cpp	/^TiXmlString::Rep TiXmlString::nullrep_ = { 0, 0, { '\\0' } };$/;"	m	class:TiXmlString	file:
nullrep_	.\tinyxml\tinystr.h	/^	static Rep nullrep_;$/;"	m	class:TiXmlString
operator !=	.\tinyxml\tinystr.h	/^inline bool operator != (const TiXmlString & a, const TiXmlString & b) { return !(a == b); }$/;"	f
operator !=	.\tinyxml\tinystr.h	/^inline bool operator != (const TiXmlString & a, const char* b) { return !(a == b); }$/;"	f
operator !=	.\tinyxml\tinystr.h	/^inline bool operator != (const char* a, const TiXmlString & b) { return !(b == a); }$/;"	f
operator ()	.\glm\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER vecType<T, P> operator ()()  const { return vecType<T, P>(this->elem(E0), this->elem(E1)); }$/;"	f	struct:glm::detail::_swizzle_base1
operator ()	.\glm\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER vecType<T, P> operator ()()  const { return vecType<T, P>(this->elem(E0), this->elem(E1), this->elem(E2)); }$/;"	f	struct:glm::detail::_swizzle_base1
operator ()	.\glm\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER vecType<T, P> operator ()()  const { return vecType<T, P>(this->elem(E0), this->elem(E1), this->elem(E2), this->elem(E3)); }$/;"	f	struct:glm::detail::_swizzle_base1
operator *	.\util\Vector2.h	/^	Vector2D operator*(float scalar)$/;"	f	class:Vector2D
operator *=	.\glm\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator *= (vecType<T, P> const& that)$/;"	f	struct:glm::detail::_swizzle_base2
operator *=	.\util\Vector2.h	/^	Vector2D& operator*=(float scalar)$/;"	f	class:Vector2D
operator +	.\tinyxml\tinystr.cpp	/^TiXmlString operator + (const TiXmlString & a, const TiXmlString & b)$/;"	f
operator +	.\tinyxml\tinystr.cpp	/^TiXmlString operator + (const TiXmlString & a, const char* b)$/;"	f
operator +	.\tinyxml\tinystr.cpp	/^TiXmlString operator + (const char* a, const TiXmlString & b)$/;"	f
operator +	.\util\Vector2.h	/^	Vector2D operator+(const Vector2D& v2) const$/;"	f	class:Vector2D
operator +=	.\glm\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator += (vecType<T, P> const& that)$/;"	f	struct:glm::detail::_swizzle_base2
operator +=	.\tinyxml\tinystr.h	/^	TiXmlString& operator += (char single)$/;"	f	class:TiXmlString
operator +=	.\tinyxml\tinystr.h	/^	TiXmlString& operator += (const TiXmlString & suffix)$/;"	f	class:TiXmlString
operator +=	.\tinyxml\tinystr.h	/^	TiXmlString& operator += (const char * suffix)$/;"	f	class:TiXmlString
operator +=	.\util\Vector2.h	/^	friend Vector2D& operator+=(Vector2D& v1, const Vector2D& v2)$/;"	f	class:Vector2D
operator -	.\util\Vector2.h	/^	Vector2D operator-(const Vector2D& v2) const$/;"	f	class:Vector2D
operator -=	.\glm\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator -= (vecType<T, P> const& that)$/;"	f	struct:glm::detail::_swizzle_base2
operator -=	.\util\Vector2.h	/^	friend Vector2D& operator-=(Vector2D& v1, const Vector2D& v2)$/;"	f	class:Vector2D
operator /	.\util\Vector2.h	/^	Vector2D operator\/(float scalar)$/;"	f	class:Vector2D
operator /=	.\glm\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER void operator \/= (vecType<T, P> const& that)$/;"	f	struct:glm::detail::_swizzle_base2
operator /=	.\util\Vector2.h	/^	Vector2D operator\/=(float scalar)$/;"	f	class:Vector2D
operator <	.\tinyxml\tinystr.h	/^inline bool operator < (const TiXmlString & a, const TiXmlString & b)$/;"	f
operator <	.\tinyxml\tinyxml.h	/^	bool operator<( const TiXmlAttribute& rhs )	 const { return name < rhs.name; }$/;"	f	class:TiXmlAttribute
operator <<	.\tinyxml\tinystr.h	/^	TiXmlOutStream & operator << (const TiXmlString & in)$/;"	f	class:TiXmlOutStream
operator <<	.\tinyxml\tinystr.h	/^	TiXmlOutStream & operator << (const char * in)$/;"	f	class:TiXmlOutStream
operator <<	.\tinyxml\tinyxml.cpp	/^std::ostream& operator<< (std::ostream & out, const TiXmlNode & base)$/;"	f
operator <<	.\tinyxml\tinyxml.cpp	/^std::string& operator<< (std::string& out, const TiXmlNode& base )$/;"	f
operator <=	.\tinyxml\tinystr.h	/^inline bool operator <= (const TiXmlString & a, const TiXmlString & b) { return !(b < a); }$/;"	f
operator =	.\glm\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER _swizzle_base2& operator= (Stub const &) { return *this; }$/;"	f	struct:glm::detail::_swizzle_base2
operator =	.\glm\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER _swizzle_base2& operator= (const T& t)$/;"	f	struct:glm::detail::_swizzle_base2
operator =	.\glm\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER _swizzle_base2& operator= (vecType<T, P> const& that)$/;"	f	struct:glm::detail::_swizzle_base2
operator =	.\tinyxml\tinystr.h	/^	TiXmlString& operator = (const TiXmlString & copy)$/;"	f	class:TiXmlString
operator =	.\tinyxml\tinystr.h	/^	TiXmlString& operator = (const char * copy)$/;"	f	class:TiXmlString
operator =	.\tinyxml\tinyxml.cpp	/^TiXmlComment& TiXmlComment::operator=( const TiXmlComment& base )$/;"	f	class:TiXmlComment
operator =	.\tinyxml\tinyxml.cpp	/^TiXmlDeclaration& TiXmlDeclaration::operator=( const TiXmlDeclaration& copy )$/;"	f	class:TiXmlDeclaration
operator =	.\tinyxml\tinyxml.cpp	/^TiXmlDocument& TiXmlDocument::operator=( const TiXmlDocument& copy )$/;"	f	class:TiXmlDocument
operator =	.\tinyxml\tinyxml.cpp	/^TiXmlElement& TiXmlElement::operator=( const TiXmlElement& base )$/;"	f	class:TiXmlElement
operator =	.\tinyxml\tinyxml.h	/^	TiXmlHandle operator=( const TiXmlHandle& ref ) { if ( &ref != this ) this->node = ref.node; return *this; }$/;"	f	class:TiXmlHandle
operator =	.\tinyxml\tinyxml.h	/^	TiXmlText& operator=( const TiXmlText& base )							 	{ base.CopyTo( this ); return *this; }$/;"	f	class:TiXmlText
operator =	.\tinyxml\tinyxml.h	/^	TiXmlUnknown& operator=( const TiXmlUnknown& copy )										{ copy.CopyTo( this ); return *this; }$/;"	f	class:TiXmlUnknown
operator ==	.\tinyxml\tinystr.h	/^inline bool operator == (const TiXmlString & a, const TiXmlString & b)$/;"	f
operator ==	.\tinyxml\tinystr.h	/^inline bool operator == (const TiXmlString & a, const char* b) { return strcmp(a.c_str(), b) == 0; }$/;"	f
operator ==	.\tinyxml\tinystr.h	/^inline bool operator == (const char* a, const TiXmlString & b) { return b == a; }$/;"	f
operator ==	.\tinyxml\tinyxml.h	/^	bool operator==( const TiXmlAttribute& rhs ) const { return rhs.name == name; }$/;"	f	class:TiXmlAttribute
operator >	.\tinyxml\tinystr.h	/^inline bool operator >  (const TiXmlString & a, const TiXmlString & b) { return b < a; }$/;"	f
operator >	.\tinyxml\tinyxml.h	/^	bool operator>( const TiXmlAttribute& rhs )  const { return name > rhs.name; }$/;"	f	class:TiXmlAttribute
operator >=	.\tinyxml\tinystr.h	/^inline bool operator >= (const TiXmlString & a, const TiXmlString & b) { return !(a < b); }$/;"	f
operator >>	.\tinyxml\tinyxml.cpp	/^std::istream& operator>> (std::istream & in, TiXmlNode & base)$/;"	f
operator []	.\glm\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T operator[]  (size_t i) const$/;"	f	struct:glm::detail::_swizzle_base2
operator []	.\glm\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T operator[](size_t i) const$/;"	f	struct:glm::detail::_swizzle_base2
operator []	.\glm\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER T& operator[](size_t i)$/;"	f	struct:glm::detail::_swizzle_base2
operator []	.\tinyxml\tinystr.h	/^	char& operator [] (size_type index) const$/;"	f	class:TiXmlString
operator vecType<T, P>	.\glm\detail\_swizzle.hpp	/^		GLM_FUNC_QUALIFIER operator vecType<T, P> () const { return (*this)(); }$/;"	f	struct:glm::detail::_swizzle
order	.\glm\gtx\io.hpp	/^			order_type order;$/;"	m	class:glm::io::format_punct
order	.\glm\gtx\io.hpp	/^		struct order$/;"	s	namespace:glm::io
order_type	.\glm\gtx\io.hpp	/^		enum order_type { column_major, row_major};$/;"	g	namespace:glm::io
outerProduct_trait	.\glm\detail\func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec2, tvec2>$/;"	s	namespace:glm::detail
outerProduct_trait	.\glm\detail\func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec2, tvec3>$/;"	s	namespace:glm::detail
outerProduct_trait	.\glm\detail\func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec2, tvec4>$/;"	s	namespace:glm::detail
outerProduct_trait	.\glm\detail\func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec3, tvec2>$/;"	s	namespace:glm::detail
outerProduct_trait	.\glm\detail\func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec3, tvec3>$/;"	s	namespace:glm::detail
outerProduct_trait	.\glm\detail\func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec3, tvec4>$/;"	s	namespace:glm::detail
outerProduct_trait	.\glm\detail\func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec4, tvec2>$/;"	s	namespace:glm::detail
outerProduct_trait	.\glm\detail\func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec4, tvec3>$/;"	s	namespace:glm::detail
outerProduct_trait	.\glm\detail\func_matrix.hpp	/^	struct outerProduct_trait<T, P, tvec4, tvec4>$/;"	s	namespace:glm::detail
outerProduct_trait	.\glm\detail\type_mat.hpp	/^	struct outerProduct_trait{};$/;"	s	namespace:glm::detail
p	.\glm\detail\type_vec3.hpp	/^				struct{ T s, t, p; };$/;"	m	struct:glm::tvec3::__anon9::__anon12
p	.\glm\detail\type_vec3.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec3::__anon15
p	.\glm\detail\type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::tvec4::__anon16::__anon19
p	.\glm\detail\type_vec4.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec4::__anon22
packed	.\glm\detail\precision.hpp	/^		packed = packed_highp,$/;"	e	enum:glm::precision
packed_highp	.\glm\detail\precision.hpp	/^		packed_highp,$/;"	e	enum:glm::precision
packed_highp_bvec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<bool, packed_highp>		packed_highp_bvec1;$/;"	t	namespace:glm
packed_highp_dvec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<double, packed_highp>		packed_highp_dvec1;$/;"	t	namespace:glm
packed_highp_ivec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<int, packed_highp>		packed_highp_ivec1;$/;"	t	namespace:glm
packed_highp_uvec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<uint, packed_highp>		packed_highp_uvec1;$/;"	t	namespace:glm
packed_highp_vec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<float, packed_highp>		packed_highp_vec1;$/;"	t	namespace:glm
packed_lowp	.\glm\detail\precision.hpp	/^		packed_lowp,$/;"	e	enum:glm::precision
packed_lowp_bvec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<bool, packed_lowp>		packed_lowp_bvec1;$/;"	t	namespace:glm
packed_lowp_dvec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<double, packed_lowp>		packed_lowp_dvec1;$/;"	t	namespace:glm
packed_lowp_ivec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<int, packed_lowp>			packed_lowp_ivec1;$/;"	t	namespace:glm
packed_lowp_uvec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<uint, packed_lowp>		packed_lowp_uvec1;$/;"	t	namespace:glm
packed_lowp_vec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<float, packed_lowp>		packed_lowp_vec1;$/;"	t	namespace:glm
packed_mediump	.\glm\detail\precision.hpp	/^		packed_mediump,$/;"	e	enum:glm::precision
packed_mediump_bvec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<bool, packed_mediump>		packed_mediump_bvec1;$/;"	t	namespace:glm
packed_mediump_dvec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<double, packed_mediump>	packed_mediump_dvec1;$/;"	t	namespace:glm
packed_mediump_ivec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<int, packed_mediump>		packed_mediump_ivec1;$/;"	t	namespace:glm
packed_mediump_uvec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<uint, packed_mediump>		packed_mediump_uvec1;$/;"	t	namespace:glm
packed_mediump_vec1	.\glm\gtc\type_aligned.hpp	/^	typedef tvec1<float, packed_mediump>	packed_mediump_vec1;$/;"	t	namespace:glm
param_type	.\glm\detail\type_gentype.hpp	/^		typedef TYPE<VALTYPE> const & param_type;$/;"	t	struct:glm::detail::genType
parent	.\tinyxml\tinyxml.h	/^	TiXmlNode*		parent;$/;"	m	class:TiXmlNode
part_type	.\glm\gtx\dual_quaternion.hpp	/^		typedef glm::tquat<T, P> part_type;$/;"	t	struct:glm::tdualquat
permute	.\glm\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER T permute(T const & x)$/;"	f	namespace:glm::detail
permute	.\glm\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec2<T, P> permute(tvec2<T, P> const & x)$/;"	f	namespace:glm::detail
permute	.\glm\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec3<T, P> permute(tvec3<T, P> const & x)$/;"	f	namespace:glm::detail
permute	.\glm\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec4<T, P> permute(tvec4<T, P> const & x)$/;"	f	namespace:glm::detail
play	.\src\AudioEngine.cpp	/^void AudioEngine::play(int source, int buffer)$/;"	f	class:AudioEngine
pointer	.\glm\detail\type_gentype.hpp	/^		typedef TYPE<VALTYPE> * pointer;$/;"	t	struct:glm::detail::genType
pointer_const	.\glm\detail\type_gentype.hpp	/^		typedef TYPE<VALTYPE> * const pointer_const;$/;"	t	struct:glm::detail::genType
precision	.\glm\detail\precision.hpp	/^	enum precision$/;"	g	namespace:glm
precision	.\glm\gtx\io.hpp	/^			unsigned   precision;$/;"	m	class:glm::io::format_punct
precision	.\glm\gtx\io.hpp	/^		struct precision$/;"	s	namespace:glm::io
precision_	.\glm\gtx\io.hpp	/^			streamsize_type precision_;$/;"	m	class:glm::io::basic_state_saver
prev	.\tinyxml\tinyxml.h	/^	TiXmlAttribute*	prev;$/;"	m	class:TiXmlAttribute
prev	.\tinyxml\tinyxml.h	/^	TiXmlNode*		prev;$/;"	m	class:TiXmlNode
profile	.\glm\detail\type_gentype.hpp	/^	enum profile$/;"	g	namespace:glm
q	.\glm\detail\type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::tvec4::__anon16::__anon19
q	.\glm\detail\type_vec4.hpp	/^			union { T w, a, q; };$/;"	m	union:glm::tvec4::__anon23
quat	.\glm\fwd.hpp	/^	typedef highp_quat			quat;$/;"	t	namespace:glm
quat	.\glm\fwd.hpp	/^	typedef lowp_quat			quat;$/;"	t	namespace:glm
quat	.\glm\fwd.hpp	/^	typedef mediump_quat		quat;$/;"	t	namespace:glm
quit	.\tinyxml\tinystr.h	/^	void quit()$/;"	f	class:TiXmlString
qword	.\glm\gtx\raw_data.hpp	/^	typedef detail::uint64		qword;$/;"	t	namespace:glm
r	.\glm\detail\type_vec1.hpp	/^				T r;$/;"	m	union:glm::tvec1::__anon1
r	.\glm\detail\type_vec1.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec1::__anon2
r	.\glm\detail\type_vec2.hpp	/^				struct{ T r, g; };$/;"	m	struct:glm::tvec2::__anon3::__anon5
r	.\glm\detail\type_vec2.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec2::__anon7
r	.\glm\detail\type_vec3.hpp	/^				struct{ T r, g, b; };$/;"	m	struct:glm::tvec3::__anon9::__anon11
r	.\glm\detail\type_vec3.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec3::__anon13
r	.\glm\detail\type_vec4.hpp	/^				struct { T r, g, b, a; };$/;"	m	struct:glm::tvec4::__anon16::__anon18
r	.\glm\detail\type_vec4.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec4::__anon20
readFile	.\util\FileReader.h	/^  std::string readFile(const char* path)$/;"	f	namespace:FileReader
real	.\glm\gtx\dual_quaternion.hpp	/^		glm::tquat<T, P> real, dual;$/;"	m	struct:glm::tdualquat
reference	.\glm\detail\type_gentype.hpp	/^		typedef TYPE<VALTYPE> & reference;$/;"	t	struct:glm::detail::genType
rep_	.\tinyxml\tinystr.h	/^	Rep * rep_;$/;"	m	class:TiXmlString
reserve	.\tinyxml\tinystr.cpp	/^void TiXmlString::reserve (size_type cap)$/;"	f	class:TiXmlString
row	.\tinyxml\tinyxml.h	/^	int row;	\/\/ 0 based.$/;"	m	struct:TiXmlCursor
row_major	.\glm\gtx\io.hpp	/^		enum order_type { column_major, row_major};$/;"	e	enum:glm::io::order_type
row_type	.\glm\detail\type_mat2x2.hpp	/^		typedef tvec2<T, P> row_type;$/;"	t	struct:glm::tmat2x2
row_type	.\glm\detail\type_mat2x3.hpp	/^		typedef tvec2<T, P> row_type;$/;"	t	struct:glm::tmat2x3
row_type	.\glm\detail\type_mat2x4.hpp	/^		typedef tvec2<T, P> row_type;$/;"	t	struct:glm::tmat2x4
row_type	.\glm\detail\type_mat3x2.hpp	/^		typedef tvec3<T, P> row_type;$/;"	t	struct:glm::tmat3x2
row_type	.\glm\detail\type_mat3x3.hpp	/^		typedef tvec3<T, P> row_type;$/;"	t	struct:glm::tmat3x3
row_type	.\glm\detail\type_mat3x4.hpp	/^		typedef tvec3<T, P> row_type;$/;"	t	struct:glm::tmat3x4
row_type	.\glm\detail\type_mat4x2.hpp	/^		typedef tvec4<T, P> row_type;$/;"	t	struct:glm::tmat4x2
row_type	.\glm\detail\type_mat4x3.hpp	/^		typedef tvec4<T, P> row_type;$/;"	t	struct:glm::tmat4x3
row_type	.\glm\detail\type_mat4x4.hpp	/^		typedef tvec4<T, P> row_type;$/;"	t	struct:glm::tmat4x4
rows	.\glm\gtx\type_trait.hpp	/^			rows = 2$/;"	e	enum:glm::type::__anon30
rows	.\glm\gtx\type_trait.hpp	/^			rows = 2$/;"	e	enum:glm::type::__anon33
rows	.\glm\gtx\type_trait.hpp	/^			rows = 2$/;"	e	enum:glm::type::__anon36
rows	.\glm\gtx\type_trait.hpp	/^			rows = 3$/;"	e	enum:glm::type::__anon31
rows	.\glm\gtx\type_trait.hpp	/^			rows = 3$/;"	e	enum:glm::type::__anon34
rows	.\glm\gtx\type_trait.hpp	/^			rows = 3$/;"	e	enum:glm::type::__anon37
rows	.\glm\gtx\type_trait.hpp	/^			rows = 4$/;"	e	enum:glm::type::__anon32
rows	.\glm\gtx\type_trait.hpp	/^			rows = 4$/;"	e	enum:glm::type::__anon35
rows	.\glm\gtx\type_trait.hpp	/^			rows = 4$/;"	e	enum:glm::type::__anon38
rows	.\glm\gtx\type_trait.hpp	/^		static length_t const rows = 0;$/;"	m	struct:glm::type
run	.\backup\previous\Game.cpp	/^void Game::run()$/;"	f	class:Game
run	.\src\Game.cpp	/^void Game::run()$/;"	f	class:Game
s	.\glm\detail\type_vec1.hpp	/^				T s;$/;"	m	union:glm::tvec1::__anon1
s	.\glm\detail\type_vec1.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec1::__anon2
s	.\glm\detail\type_vec2.hpp	/^				struct{ T s, t; };$/;"	m	struct:glm::tvec2::__anon3::__anon6
s	.\glm\detail\type_vec2.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec2::__anon7
s	.\glm\detail\type_vec3.hpp	/^				struct{ T s, t, p; };$/;"	m	struct:glm::tvec3::__anon9::__anon12
s	.\glm\detail\type_vec3.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec3::__anon13
s	.\glm\detail\type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::tvec4::__anon16::__anon19
s	.\glm\detail\type_vec4.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec4::__anon20
saturate	.\glm\gtx\compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER T saturate(T x){return clamp(x, T(0), T(1));}														\/\/!< \\brief Returns clamp(x, 0, 1) for each component in x. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
saturate	.\glm\gtx\compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec2<T, P> saturate(const tvec2<T, P>& x){return clamp(x, T(0), T(1));}					\/\/!< \\brief Returns clamp(x, 0, 1) for each component in x. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
saturate	.\glm\gtx\compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec3<T, P> saturate(const tvec3<T, P>& x){return clamp(x, T(0), T(1));}					\/\/!< \\brief Returns clamp(x, 0, 1) for each component in x. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
saturate	.\glm\gtx\compatibility.hpp	/^	template <typename T, precision P> GLM_FUNC_QUALIFIER tvec4<T, P> saturate(const tvec4<T, P>& x){return clamp(x, T(0), T(1));}					\/\/!< \\brief Returns clamp(x, 0, 1) for each component in x. (From GLM_GTX_compatibility)$/;"	f	namespace:glm
sentinel	.\tinyxml\tinyxml.h	/^	TiXmlAttribute sentinel;$/;"	m	class:TiXmlAttributeSet
separator	.\glm\gtx\io.hpp	/^			char_type  separator;$/;"	m	class:glm::io::format_punct
setMat4	.\src\Shader.cpp	/^void Shader::setMat4(const char* uniformName, GLfloat* matrix) const$/;"	f	class:Shader
setWindowSize	.\src\GraphicsDevice.cpp	/^void GraphicsDevice::setWindowSize(unsigned int windowWidth, unsigned int windowHeight)$/;"	f	class:GraphicsDevice
setX	.\util\Vector2.h	/^	void setX(float x) { _x = x; }$/;"	f	class:Vector2D
setY	.\util\Vector2.h	/^	void setY(float y) { _y = y; }$/;"	f	class:Vector2D
set_size	.\tinyxml\tinystr.h	/^	void set_size(size_type sz) { rep_->str[ rep_->size = sz ] = '\\0'; }$/;"	f	class:TiXmlString
simd	.\glm\detail\type_gentype.hpp	/^		simd$/;"	e	enum:glm::profile
simdMat4	.\glm\gtx\simd_mat4.hpp	/^	typedef detail::fmat4x4SIMD simdMat4;$/;"	t	namespace:glm
simdQuat	.\glm\gtx\simd_quat.hpp	/^	typedef glm::detail::fquatSIMD simdQuat;$/;"	t	namespace:glm
simdVec4	.\glm\gtx\simd_vec4.hpp	/^	typedef glm::detail::fvec4SIMD simdVec4;$/;"	t	namespace:glm
simpleTextPrint	.\tinyxml\tinyxml.h	/^	bool simpleTextPrint;$/;"	m	class:TiXmlPrinter
sint	.\glm\gtx\integer.hpp	/^	typedef signed int					sint;$/;"	t	namespace:glm
size	.\tinyxml\tinystr.h	/^		size_type size, capacity;$/;"	m	struct:TiXmlString::Rep
size	.\tinyxml\tinystr.h	/^	size_type size () const { return rep_->size; }$/;"	f	class:TiXmlString
size1	.\glm\gtx\std_based_type.hpp	/^	typedef tvec1<std::size_t, defaultp>		size1;$/;"	t	namespace:glm
size1_t	.\glm\gtx\std_based_type.hpp	/^	typedef tvec1<std::size_t, defaultp>		size1_t;$/;"	t	namespace:glm
size2	.\glm\gtx\std_based_type.hpp	/^	typedef tvec2<std::size_t, defaultp>		size2;$/;"	t	namespace:glm
size2_t	.\glm\gtx\std_based_type.hpp	/^	typedef tvec2<std::size_t, defaultp>		size2_t;$/;"	t	namespace:glm
size3	.\glm\gtx\std_based_type.hpp	/^	typedef tvec3<std::size_t, defaultp>		size3;$/;"	t	namespace:glm
size3_t	.\glm\gtx\std_based_type.hpp	/^	typedef tvec3<std::size_t, defaultp>		size3_t;$/;"	t	namespace:glm
size4	.\glm\gtx\std_based_type.hpp	/^	typedef tvec4<std::size_t, defaultp>		size4;$/;"	t	namespace:glm
size4_t	.\glm\gtx\std_based_type.hpp	/^	typedef tvec4<std::size_t, defaultp>		size4_t;$/;"	t	namespace:glm
sizeType	.\glm\detail\type_gentype.hpp	/^	typedef std::size_t sizeType;$/;"	t	namespace:glm
size_type	.\glm\detail\type_gentype.hpp	/^		typedef sizeType size_type;$/;"	t	struct:glm::detail::genType
size_type	.\tinyxml\tinystr.h	/^  	typedef size_t size_type;$/;"	t	class:TiXmlString
sourcePosition	.\src\AudioEngine.cpp	/^void AudioEngine::sourcePosition(int source, float x, float y, float z)$/;"	f	class:AudioEngine
space	.\glm\gtx\io.hpp	/^			char_type  space;$/;"	m	class:glm::io::format_punct
stamp	.\tinyxml\tinyxmlparser.cpp	/^	const char*		stamp;$/;"	m	class:TiXmlParsingData	file:
standalone	.\tinyxml\tinyxml.h	/^	TIXML_STRING standalone;$/;"	m	class:TiXmlDeclaration
start	.\tinyxml\tinystr.h	/^	char* start() const { return rep_->str; }$/;"	f	class:TiXmlString
state_	.\glm\gtx\io.hpp	/^			state_type&     state_;$/;"	m	class:glm::io::basic_state_saver
state_saver	.\glm\gtx\io.hpp	/^		typedef basic_state_saver<char>     state_saver;$/;"	t	namespace:glm::io
state_type	.\glm\gtx\io.hpp	/^			typedef ::std::basic_ios<CTy,CTr>      state_type;$/;"	t	class:glm::io::basic_state_saver
std	.\glm\gtx\hash.hpp	/^namespace std$/;"	n
storage	.\glm\detail\type_vec.hpp	/^		struct storage<double, 32, true>$/;"	s	namespace:glm::detail
storage	.\glm\detail\type_vec.hpp	/^		struct storage<float, 16, true>$/;"	s	namespace:glm::detail
storage	.\glm\detail\type_vec.hpp	/^		struct storage<int, 16, true>$/;"	s	namespace:glm::detail
storage	.\glm\detail\type_vec.hpp	/^		struct storage<int64, 32, true>$/;"	s	namespace:glm::detail
storage	.\glm\detail\type_vec.hpp	/^		struct storage<uint64, 32, true>$/;"	s	namespace:glm::detail
storage	.\glm\detail\type_vec.hpp	/^		struct storage<unsigned int, 16, true>$/;"	s	namespace:glm::detail
storage	.\glm\detail\type_vec.hpp	/^	struct storage$/;"	s	namespace:glm::detail
str	.\tinyxml\tinystr.h	/^		char str[1];$/;"	m	struct:TiXmlString::Rep
str	.\tinyxml\tinyxml.h	/^		const char*     str;$/;"	m	struct:TiXmlBase::Entity
strLength	.\tinyxml\tinyxml.h	/^		unsigned int	strLength;$/;"	m	struct:TiXmlBase::Entity
streamsize_type	.\glm\gtx\io.hpp	/^			typedef ::std::streamsize              streamsize_type;$/;"	t	class:glm::io::basic_state_saver
swap	.\src\GraphicsDevice.cpp	/^void GraphicsDevice::swap()$/;"	f	class:GraphicsDevice
swap	.\tinyxml\tinystr.h	/^	void swap (TiXmlString& other)$/;"	f	class:TiXmlString
t	.\glm\detail\type_vec2.hpp	/^				struct{ T s, t; };$/;"	m	struct:glm::tvec2::__anon3::__anon6
t	.\glm\detail\type_vec2.hpp	/^			union {T y, g, t;};$/;"	m	union:glm::tvec2::__anon8
t	.\glm\detail\type_vec3.hpp	/^				struct{ T s, t, p; };$/;"	m	struct:glm::tvec3::__anon9::__anon12
t	.\glm\detail\type_vec3.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec3::__anon14
t	.\glm\detail\type_vec4.hpp	/^				struct { T s, t, p, q; };$/;"	m	struct:glm::tvec4::__anon16::__anon19
t	.\glm\detail\type_vec4.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec4::__anon21
tabsize	.\tinyxml\tinyxml.h	/^	int tabsize;$/;"	m	class:TiXmlDocument
tabsize	.\tinyxml\tinyxmlparser.cpp	/^	int				tabsize;$/;"	m	class:TiXmlParsingData	file:
taylorInvSqrt	.\glm\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER T taylorInvSqrt(T const & r)$/;"	f	namespace:glm::detail
taylorInvSqrt	.\glm\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec2<T, P> taylorInvSqrt(tvec2<T, P> const & r)$/;"	f	namespace:glm::detail
taylorInvSqrt	.\glm\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec3<T, P> taylorInvSqrt(tvec3<T, P> const & r)$/;"	f	namespace:glm::detail
taylorInvSqrt	.\glm\detail\_noise.hpp	/^	GLM_FUNC_QUALIFIER tvec4<T, P> taylorInvSqrt(tvec4<T, P> const & r)$/;"	f	namespace:glm::detail
tdualquat	.\glm\gtx\dual_quaternion.hpp	/^	struct tdualquat$/;"	s	namespace:glm
texture	.\src\Player.h	/^  Texture* texture;$/;"	m	class:Player
tmat2x2	.\glm\detail\type_mat2x2.hpp	/^	struct tmat2x2$/;"	s	namespace:glm
tmat2x3	.\glm\detail\type_mat2x3.hpp	/^	struct tmat2x3$/;"	s	namespace:glm
tmat2x4	.\glm\detail\type_mat2x4.hpp	/^	struct tmat2x4$/;"	s	namespace:glm
tmat3x2	.\glm\detail\type_mat3x2.hpp	/^	struct tmat3x2$/;"	s	namespace:glm
tmat3x3	.\glm\detail\type_mat3x3.hpp	/^	struct tmat3x3$/;"	s	namespace:glm
tmat3x4	.\glm\detail\type_mat3x4.hpp	/^	struct tmat3x4$/;"	s	namespace:glm
tmat4x2	.\glm\detail\type_mat4x2.hpp	/^	struct tmat4x2$/;"	s	namespace:glm
tmat4x3	.\glm\detail\type_mat4x3.hpp	/^	struct tmat4x3$/;"	s	namespace:glm
tmat4x4	.\glm\detail\type_mat4x4.hpp	/^	struct tmat4x4$/;"	s	namespace:glm
toMat3	.\glm\gtx\quaternion.hpp	/^	GLM_FUNC_DECL tmat3x3<T, P> toMat3($/;"	f	namespace:glm
toMat4	.\glm\gtx\quaternion.hpp	/^	GLM_FUNC_DECL tmat4x4<T, P> toMat4($/;"	f	namespace:glm
toQuat	.\glm\gtx\quaternion.hpp	/^	GLM_FUNC_DECL tquat<T, P> toQuat($/;"	f	namespace:glm
toggleFullscreen	.\src\GraphicsDevice.cpp	/^void GraphicsDevice::toggleFullscreen()$/;"	f	class:GraphicsDevice
toggleVsync	.\src\GraphicsDevice.cpp	/^void GraphicsDevice::toggleVsync()$/;"	f	class:GraphicsDevice
tquat	.\glm\gtc\quaternion.hpp	/^	struct tquat$/;"	s	namespace:glm
transpose_type	.\glm\detail\type_mat2x2.hpp	/^		typedef tmat2x2<T, P> transpose_type;$/;"	t	struct:glm::tmat2x2
transpose_type	.\glm\detail\type_mat2x3.hpp	/^		typedef tmat3x2<T, P> transpose_type;$/;"	t	struct:glm::tmat2x3
transpose_type	.\glm\detail\type_mat2x4.hpp	/^		typedef tmat4x2<T, P> transpose_type;$/;"	t	struct:glm::tmat2x4
transpose_type	.\glm\detail\type_mat3x2.hpp	/^		typedef tmat2x3<T, P> transpose_type;$/;"	t	struct:glm::tmat3x2
transpose_type	.\glm\detail\type_mat3x3.hpp	/^		typedef tmat3x3<T, P> transpose_type;$/;"	t	struct:glm::tmat3x3
transpose_type	.\glm\detail\type_mat3x4.hpp	/^		typedef tmat4x3<T, P> transpose_type;$/;"	t	struct:glm::tmat3x4
transpose_type	.\glm\detail\type_mat4x2.hpp	/^		typedef tmat2x4<T, P> transpose_type;$/;"	t	struct:glm::tmat4x2
transpose_type	.\glm\detail\type_mat4x3.hpp	/^		typedef tmat3x4<T, P> transpose_type;$/;"	t	struct:glm::tmat4x3
transpose_type	.\glm\detail\type_mat4x4.hpp	/^		typedef tmat4x4<T, P> transpose_type;$/;"	t	struct:glm::tmat4x4
tvec1	.\glm\detail\type_vec1.hpp	/^	struct tvec1$/;"	s	namespace:glm
tvec2	.\glm\detail\type_vec2.hpp	/^			GLM_FUNC_DECL tvec2(detail::_swizzle<2, T, P, glm::tvec2, E0, E1,-1,-2> const& that)$/;"	f	struct:glm::tvec2
tvec2	.\glm\detail\type_vec2.hpp	/^	struct tvec2$/;"	s	namespace:glm
tvec3	.\glm\detail\type_vec3.hpp	/^			GLM_FUNC_DECL tvec3(T const & scalar, detail::_swizzle<2, T, P, glm::tvec2, E0, E1, -1, -2> const & v)$/;"	f	struct:glm::tvec3
tvec3	.\glm\detail\type_vec3.hpp	/^			GLM_FUNC_DECL tvec3(detail::_swizzle<2, T, P, glm::tvec2, E0, E1, -1, -2> const & v, T const & scalar)$/;"	f	struct:glm::tvec3
tvec3	.\glm\detail\type_vec3.hpp	/^			GLM_FUNC_DECL tvec3(detail::_swizzle<3, T, P, glm::tvec3, E0, E1, E2, -1> const & that)$/;"	f	struct:glm::tvec3
tvec3	.\glm\detail\type_vec3.hpp	/^	struct tvec3$/;"	s	namespace:glm
tvec4	.\glm\detail\type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(T const & x, T const & y, detail::_swizzle<2, T, P, glm::tvec2, E0, E1, -1, -2> const & v)$/;"	f	struct:glm::tvec4
tvec4	.\glm\detail\type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(T const & x, detail::_swizzle<2, T, P, glm::tvec2, E0, E1, -1, -2> const & v, T const & w)$/;"	f	struct:glm::tvec4
tvec4	.\glm\detail\type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(T const & x, detail::_swizzle<3, T, P, glm::tvec3, E0, E1, E2, -1> const & v)$/;"	f	struct:glm::tvec4
tvec4	.\glm\detail\type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(detail::_swizzle<2, T, P, glm::tvec2, E0, E1, -1, -2> const & v, T const & z, T const & w)$/;"	f	struct:glm::tvec4
tvec4	.\glm\detail\type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(detail::_swizzle<2, T, P, glm::tvec2, E0, E1, -1, -2> const & v, detail::_swizzle<2, T, P, glm::tvec2, F0, F1, -1, -2> const & u)$/;"	f	struct:glm::tvec4
tvec4	.\glm\detail\type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(detail::_swizzle<3, T, P, glm::tvec3, E0, E1, E2, -1> const & v, T const & w)$/;"	f	struct:glm::tvec4
tvec4	.\glm\detail\type_vec4.hpp	/^			GLM_FUNC_DECL tvec4(detail::_swizzle<4, T, P, glm::tvec4, E0, E1, E2, E3> const & that)$/;"	f	struct:glm::tvec4
tvec4	.\glm\detail\type_vec4.hpp	/^	struct tvec4$/;"	s	namespace:glm
type	.\glm\detail\func_matrix.hpp	/^		typedef tmat2x2<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	.\glm\detail\func_matrix.hpp	/^		typedef tmat2x3<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	.\glm\detail\func_matrix.hpp	/^		typedef tmat2x4<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	.\glm\detail\func_matrix.hpp	/^		typedef tmat3x2<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	.\glm\detail\func_matrix.hpp	/^		typedef tmat3x3<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	.\glm\detail\func_matrix.hpp	/^		typedef tmat3x4<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	.\glm\detail\func_matrix.hpp	/^		typedef tmat4x2<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	.\glm\detail\func_matrix.hpp	/^		typedef tmat4x3<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	.\glm\detail\func_matrix.hpp	/^		typedef tmat4x4<T, P> type;$/;"	t	struct:glm::detail::outerProduct_trait
type	.\glm\detail\type_gentype.hpp	/^		typedef TYPE<VALTYPE> type;$/;"	t	struct:glm::detail::genType
type	.\glm\detail\type_mat2x2.hpp	/^		typedef tmat2x2<T, P> type;$/;"	t	struct:glm::tmat2x2
type	.\glm\detail\type_mat2x3.hpp	/^		typedef tmat2x3<T, P> type;$/;"	t	struct:glm::tmat2x3
type	.\glm\detail\type_mat2x4.hpp	/^		typedef tmat2x4<T, P> type;$/;"	t	struct:glm::tmat2x4
type	.\glm\detail\type_mat3x2.hpp	/^		typedef tmat3x2<T, P> type;$/;"	t	struct:glm::tmat3x2
type	.\glm\detail\type_mat3x3.hpp	/^		typedef tmat3x3<T, P> type;$/;"	t	struct:glm::tmat3x3
type	.\glm\detail\type_mat3x4.hpp	/^		typedef tmat3x4<T, P> type;$/;"	t	struct:glm::tmat3x4
type	.\glm\detail\type_mat4x2.hpp	/^		typedef tmat4x2<T, P> type;$/;"	t	struct:glm::tmat4x2
type	.\glm\detail\type_mat4x3.hpp	/^		typedef tmat4x3<T, P> type;$/;"	t	struct:glm::tmat4x3
type	.\glm\detail\type_mat4x4.hpp	/^		typedef tmat4x4<T, P> type;$/;"	t	struct:glm::tmat4x4
type	.\glm\detail\type_vec.hpp	/^			typedef glm_dvec4 type;$/;"	t	struct:glm::detail::storage
type	.\glm\detail\type_vec.hpp	/^			typedef glm_i64vec4 type;$/;"	t	struct:glm::detail::storage
type	.\glm\detail\type_vec.hpp	/^			typedef glm_ivec4 type;$/;"	t	struct:glm::detail::storage
type	.\glm\detail\type_vec.hpp	/^			typedef glm_u64vec4 type;$/;"	t	struct:glm::detail::storage
type	.\glm\detail\type_vec.hpp	/^			typedef glm_uvec4 type;$/;"	t	struct:glm::detail::storage
type	.\glm\detail\type_vec.hpp	/^			typedef glm_vec4 type;$/;"	t	struct:glm::detail::storage
type	.\glm\detail\type_vec.hpp	/^		typedef struct type {$/;"	s	struct:glm::detail::storage
type	.\glm\detail\type_vec.hpp	/^		} type;$/;"	t	struct:glm::detail::storage	typeref:struct:glm::detail::storage::type
type	.\glm\detail\type_vec1.hpp	/^		typedef tvec1<T, P> type;$/;"	t	struct:glm::tvec1
type	.\glm\detail\type_vec2.hpp	/^		typedef tvec2<T, P> type;$/;"	t	struct:glm::tvec2
type	.\glm\detail\type_vec3.hpp	/^		typedef tvec3<T, P> type;$/;"	t	struct:glm::tvec3
type	.\glm\detail\type_vec4.hpp	/^		typedef tvec4<T, P> type;$/;"	t	struct:glm::tvec4
type	.\glm\gtc\quaternion.hpp	/^		typedef tquat<T, P> type;$/;"	t	struct:glm::tquat
type	.\glm\gtx\type_trait.hpp	/^	struct type$/;"	s	namespace:glm
type	.\glm\gtx\type_trait.hpp	/^	struct type<tdualquat, T, P>$/;"	s	namespace:glm
type	.\glm\gtx\type_trait.hpp	/^	struct type<tmat2x2, T, P>$/;"	s	namespace:glm
type	.\glm\gtx\type_trait.hpp	/^	struct type<tmat2x3, T, P>$/;"	s	namespace:glm
type	.\glm\gtx\type_trait.hpp	/^	struct type<tmat2x4, T, P>$/;"	s	namespace:glm
type	.\glm\gtx\type_trait.hpp	/^	struct type<tmat3x2, T, P>$/;"	s	namespace:glm
type	.\glm\gtx\type_trait.hpp	/^	struct type<tmat3x3, T, P>$/;"	s	namespace:glm
type	.\glm\gtx\type_trait.hpp	/^	struct type<tmat3x4, T, P>$/;"	s	namespace:glm
type	.\glm\gtx\type_trait.hpp	/^	struct type<tmat4x2, T, P>$/;"	s	namespace:glm
type	.\glm\gtx\type_trait.hpp	/^	struct type<tmat4x3, T, P>$/;"	s	namespace:glm
type	.\glm\gtx\type_trait.hpp	/^	struct type<tmat4x4, T, P>$/;"	s	namespace:glm
type	.\glm\gtx\type_trait.hpp	/^	struct type<tquat, T, P>$/;"	s	namespace:glm
type	.\glm\gtx\type_trait.hpp	/^	struct type<tvec1, T, P>$/;"	s	namespace:glm
type	.\glm\gtx\type_trait.hpp	/^	struct type<tvec2, T, P>$/;"	s	namespace:glm
type	.\glm\gtx\type_trait.hpp	/^	struct type<tvec3, T, P>$/;"	s	namespace:glm
type	.\glm\gtx\type_trait.hpp	/^	struct type<tvec4, T, P>$/;"	s	namespace:glm
type	.\tinyxml\tinyxml.h	/^	NodeType		type;$/;"	m	class:TiXmlNode
u16	.\glm\fwd.hpp	/^	typedef detail::uint16 u16;$/;"	t	namespace:glm
u16	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint16 u16;$/;"	t	namespace:glm
u16vec1	.\glm\fwd.hpp	/^	typedef highp_u16vec1			u16vec1;$/;"	t	namespace:glm
u16vec1	.\glm\fwd.hpp	/^	typedef lowp_u16vec1			u16vec1;$/;"	t	namespace:glm
u16vec1	.\glm\fwd.hpp	/^	typedef mediump_u16vec1			u16vec1;$/;"	t	namespace:glm
u16vec1	.\glm\gtc\type_precision.hpp	/^	typedef tvec1<u16, defaultp> u16vec1;$/;"	t	namespace:glm
u16vec1	.\glm\gtx\number_precision.hpp	/^	typedef u16			u16vec1;    \/\/!< \\brief 16bit unsigned integer scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
u16vec2	.\glm\fwd.hpp	/^	typedef highp_u16vec2			u16vec2;$/;"	t	namespace:glm
u16vec2	.\glm\fwd.hpp	/^	typedef lowp_u16vec2			u16vec2;$/;"	t	namespace:glm
u16vec2	.\glm\fwd.hpp	/^	typedef mediump_u16vec2			u16vec2;$/;"	t	namespace:glm
u16vec2	.\glm\gtc\type_precision.hpp	/^	typedef tvec2<u16, defaultp> u16vec2;$/;"	t	namespace:glm
u16vec3	.\glm\fwd.hpp	/^	typedef highp_u16vec3			u16vec3;$/;"	t	namespace:glm
u16vec3	.\glm\fwd.hpp	/^	typedef lowp_u16vec3			u16vec3;$/;"	t	namespace:glm
u16vec3	.\glm\fwd.hpp	/^	typedef mediump_u16vec3			u16vec3;$/;"	t	namespace:glm
u16vec3	.\glm\gtc\type_precision.hpp	/^	typedef tvec3<u16, defaultp> u16vec3;$/;"	t	namespace:glm
u16vec4	.\glm\fwd.hpp	/^	typedef highp_u16vec4			u16vec4;$/;"	t	namespace:glm
u16vec4	.\glm\fwd.hpp	/^	typedef lowp_u16vec4			u16vec4;$/;"	t	namespace:glm
u16vec4	.\glm\fwd.hpp	/^	typedef mediump_u16vec4			u16vec4;$/;"	t	namespace:glm
u16vec4	.\glm\gtc\type_precision.hpp	/^	typedef tvec4<u16, defaultp> u16vec4;$/;"	t	namespace:glm
u32	.\glm\fwd.hpp	/^	typedef detail::uint32 u32;$/;"	t	namespace:glm
u32	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint32 u32;$/;"	t	namespace:glm
u32vec1	.\glm\fwd.hpp	/^	typedef highp_u32vec1			u32vec1;$/;"	t	namespace:glm
u32vec1	.\glm\fwd.hpp	/^	typedef lowp_u32vec1			u32vec1;$/;"	t	namespace:glm
u32vec1	.\glm\fwd.hpp	/^	typedef mediump_u32vec1			u32vec1;$/;"	t	namespace:glm
u32vec1	.\glm\gtc\type_precision.hpp	/^	typedef tvec1<u32, defaultp> u32vec1;$/;"	t	namespace:glm
u32vec1	.\glm\gtx\number_precision.hpp	/^	typedef u32			u32vec1;    \/\/!< \\brief 32bit unsigned integer scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
u32vec2	.\glm\fwd.hpp	/^	typedef highp_u32vec2			u32vec2;$/;"	t	namespace:glm
u32vec2	.\glm\fwd.hpp	/^	typedef lowp_u32vec2			u32vec2;$/;"	t	namespace:glm
u32vec2	.\glm\fwd.hpp	/^	typedef mediump_u32vec2			u32vec2;$/;"	t	namespace:glm
u32vec2	.\glm\gtc\type_precision.hpp	/^	typedef tvec2<u32, defaultp> u32vec2;$/;"	t	namespace:glm
u32vec3	.\glm\fwd.hpp	/^	typedef highp_u32vec3			u32vec3;$/;"	t	namespace:glm
u32vec3	.\glm\fwd.hpp	/^	typedef lowp_u32vec3			u32vec3;$/;"	t	namespace:glm
u32vec3	.\glm\fwd.hpp	/^	typedef mediump_u32vec3			u32vec3;$/;"	t	namespace:glm
u32vec3	.\glm\gtc\type_precision.hpp	/^	typedef tvec3<u32, defaultp> u32vec3;$/;"	t	namespace:glm
u32vec4	.\glm\fwd.hpp	/^	typedef highp_u32vec4			u32vec4;$/;"	t	namespace:glm
u32vec4	.\glm\fwd.hpp	/^	typedef lowp_u32vec4			u32vec4;$/;"	t	namespace:glm
u32vec4	.\glm\fwd.hpp	/^	typedef mediump_u32vec4			u32vec4;$/;"	t	namespace:glm
u32vec4	.\glm\gtc\type_precision.hpp	/^	typedef tvec4<u32, defaultp> u32vec4;$/;"	t	namespace:glm
u64	.\glm\fwd.hpp	/^	typedef detail::uint64 u64;$/;"	t	namespace:glm
u64	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint64 u64;$/;"	t	namespace:glm
u64vec1	.\glm\fwd.hpp	/^	typedef highp_u64vec1			u64vec1;$/;"	t	namespace:glm
u64vec1	.\glm\fwd.hpp	/^	typedef lowp_u64vec1			u64vec1;$/;"	t	namespace:glm
u64vec1	.\glm\fwd.hpp	/^	typedef mediump_u64vec1			u64vec1;$/;"	t	namespace:glm
u64vec1	.\glm\gtc\type_precision.hpp	/^	typedef tvec1<u64, defaultp> u64vec1;$/;"	t	namespace:glm
u64vec1	.\glm\gtx\number_precision.hpp	/^	typedef u64			u64vec1;    \/\/!< \\brief 64bit unsigned integer scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
u64vec2	.\glm\fwd.hpp	/^	typedef highp_u64vec2			u64vec2;$/;"	t	namespace:glm
u64vec2	.\glm\fwd.hpp	/^	typedef lowp_u64vec2			u64vec2;$/;"	t	namespace:glm
u64vec2	.\glm\fwd.hpp	/^	typedef mediump_u64vec2			u64vec2;$/;"	t	namespace:glm
u64vec2	.\glm\gtc\type_precision.hpp	/^	typedef tvec2<u64, defaultp> u64vec2;$/;"	t	namespace:glm
u64vec3	.\glm\fwd.hpp	/^	typedef highp_u64vec3			u64vec3;$/;"	t	namespace:glm
u64vec3	.\glm\fwd.hpp	/^	typedef lowp_u64vec3			u64vec3;$/;"	t	namespace:glm
u64vec3	.\glm\fwd.hpp	/^	typedef mediump_u64vec3			u64vec3;$/;"	t	namespace:glm
u64vec3	.\glm\gtc\type_precision.hpp	/^	typedef tvec3<u64, defaultp> u64vec3;$/;"	t	namespace:glm
u64vec4	.\glm\fwd.hpp	/^	typedef highp_u64vec4			u64vec4;$/;"	t	namespace:glm
u64vec4	.\glm\fwd.hpp	/^	typedef lowp_u64vec4			u64vec4;$/;"	t	namespace:glm
u64vec4	.\glm\fwd.hpp	/^	typedef mediump_u64vec4			u64vec4;$/;"	t	namespace:glm
u64vec4	.\glm\gtc\type_precision.hpp	/^	typedef tvec4<u64, defaultp> u64vec4;$/;"	t	namespace:glm
u8	.\glm\fwd.hpp	/^	typedef detail::uint8 u8;$/;"	t	namespace:glm
u8	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint8 u8;$/;"	t	namespace:glm
u8vec1	.\glm\fwd.hpp	/^	typedef highp_u8vec1			u8vec1;$/;"	t	namespace:glm
u8vec1	.\glm\fwd.hpp	/^	typedef lowp_u8vec1				u8vec1;$/;"	t	namespace:glm
u8vec1	.\glm\fwd.hpp	/^	typedef mediump_u8vec1			u8vec1;$/;"	t	namespace:glm
u8vec1	.\glm\gtc\type_precision.hpp	/^	typedef tvec1<u8, defaultp> u8vec1;$/;"	t	namespace:glm
u8vec1	.\glm\gtx\number_precision.hpp	/^	typedef u8			u8vec1;		\/\/!< \\brief 8bit unsigned integer scalar. (from GLM_GTX_number_precision extension)$/;"	t	namespace:glm::gtx
u8vec2	.\glm\fwd.hpp	/^	typedef highp_u8vec2			u8vec2;$/;"	t	namespace:glm
u8vec2	.\glm\fwd.hpp	/^	typedef lowp_u8vec2				u8vec2;$/;"	t	namespace:glm
u8vec2	.\glm\fwd.hpp	/^	typedef mediump_u8vec2			u8vec2;$/;"	t	namespace:glm
u8vec2	.\glm\gtc\type_precision.hpp	/^	typedef tvec2<u8, defaultp> u8vec2;$/;"	t	namespace:glm
u8vec3	.\glm\fwd.hpp	/^	typedef highp_u8vec3			u8vec3;$/;"	t	namespace:glm
u8vec3	.\glm\fwd.hpp	/^	typedef lowp_u8vec3				u8vec3;$/;"	t	namespace:glm
u8vec3	.\glm\fwd.hpp	/^	typedef mediump_u8vec3			u8vec3;$/;"	t	namespace:glm
u8vec3	.\glm\gtc\type_precision.hpp	/^	typedef tvec3<u8, defaultp> u8vec3;$/;"	t	namespace:glm
u8vec4	.\glm\fwd.hpp	/^	typedef highp_u8vec4			u8vec4;$/;"	t	namespace:glm
u8vec4	.\glm\fwd.hpp	/^	typedef lowp_u8vec4				u8vec4;$/;"	t	namespace:glm
u8vec4	.\glm\fwd.hpp	/^	typedef mediump_u8vec4			u8vec4;	$/;"	t	namespace:glm
u8vec4	.\glm\gtc\type_precision.hpp	/^	typedef tvec4<u8, defaultp> u8vec4;$/;"	t	namespace:glm
uint	.\glm\detail\type_int.hpp	/^	typedef unsigned int				uint;$/;"	t	namespace:glm
uint16	.\glm\detail\type_int.hpp	/^		typedef std::uint16_t				uint16;$/;"	t	namespace:glm::detail
uint16	.\glm\detail\type_int.hpp	/^	typedef detail::uint16					uint16;$/;"	t	namespace:glm
uint16	.\glm\fwd.hpp	/^	typedef detail::uint16 uint16;$/;"	t	namespace:glm
uint16	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint16 uint16;$/;"	t	namespace:glm
uint32	.\glm\detail\type_int.hpp	/^		typedef std::uint32_t				uint32;$/;"	t	namespace:glm::detail
uint32	.\glm\detail\type_int.hpp	/^	typedef detail::uint32					uint32;$/;"	t	namespace:glm
uint32	.\glm\fwd.hpp	/^	typedef detail::uint32 uint32;$/;"	t	namespace:glm
uint32	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint32 uint32;$/;"	t	namespace:glm
uint64	.\glm\detail\type_int.hpp	/^		typedef std::uint64_t				uint64;$/;"	t	namespace:glm::detail
uint64	.\glm\detail\type_int.hpp	/^	typedef detail::uint64					uint64;$/;"	t	namespace:glm
uint64	.\glm\fwd.hpp	/^	typedef detail::uint64 uint64;$/;"	t	namespace:glm
uint64	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint64 uint64;$/;"	t	namespace:glm
uint8	.\glm\detail\type_int.hpp	/^		typedef std::uint8_t				uint8;$/;"	t	namespace:glm::detail
uint8	.\glm\detail\type_int.hpp	/^	typedef detail::uint8					uint8;$/;"	t	namespace:glm
uint8	.\glm\fwd.hpp	/^	typedef detail::uint8 uint8;$/;"	t	namespace:glm
uint8	.\glm\gtc\type_precision.hpp	/^	typedef detail::uint8 uint8;$/;"	t	namespace:glm
uint_t	.\glm\detail\type_int.hpp	/^	typedef highp_uint					uint_t;$/;"	t	namespace:glm
uint_t	.\glm\detail\type_int.hpp	/^	typedef lowp_uint					uint_t;$/;"	t	namespace:glm
uint_t	.\glm\detail\type_int.hpp	/^	typedef mediump_uint				uint_t;$/;"	t	namespace:glm
umat2	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_umat2								umat2;$/;"	t	namespace:glm
umat2	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_umat2								umat2;$/;"	t	namespace:glm
umat2	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_umat2							umat2;$/;"	t	namespace:glm
umat2x2	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_umat2x2							umat2x2;$/;"	t	namespace:glm
umat2x2	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_umat2x2							umat2x2;$/;"	t	namespace:glm
umat2x2	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_umat2x2							umat2x2;$/;"	t	namespace:glm
umat2x3	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_umat2x3							umat2x3;$/;"	t	namespace:glm
umat2x3	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_umat2x3							umat2x3;$/;"	t	namespace:glm
umat2x3	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_umat2x3							umat2x3;$/;"	t	namespace:glm
umat2x4	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_umat2x4							umat2x4;$/;"	t	namespace:glm
umat2x4	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_umat2x4							umat2x4;$/;"	t	namespace:glm
umat2x4	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_umat2x4							umat2x4;$/;"	t	namespace:glm
umat3	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_umat3								umat3;$/;"	t	namespace:glm
umat3	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_umat3								umat3;$/;"	t	namespace:glm
umat3	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_umat3							umat3;$/;"	t	namespace:glm
umat3x2	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_umat3x2							umat3x2;$/;"	t	namespace:glm
umat3x2	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_umat3x2							umat3x2;$/;"	t	namespace:glm
umat3x2	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_umat3x2							umat3x2;$/;"	t	namespace:glm
umat3x3	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_umat3x3							umat3x3;$/;"	t	namespace:glm
umat3x3	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_umat3x3							umat3x3;$/;"	t	namespace:glm
umat3x3	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_umat3x3							umat3x3;$/;"	t	namespace:glm
umat3x4	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_umat3x4							umat3x4;$/;"	t	namespace:glm
umat3x4	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_umat3x4							umat3x4;$/;"	t	namespace:glm
umat3x4	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_umat3x4							umat3x4;$/;"	t	namespace:glm
umat4	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_umat4								umat4;$/;"	t	namespace:glm
umat4	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_umat4								umat4;$/;"	t	namespace:glm
umat4	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_umat4							umat4;$/;"	t	namespace:glm
umat4x2	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_umat4x2							umat4x2;$/;"	t	namespace:glm
umat4x2	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_umat4x2							umat4x2;$/;"	t	namespace:glm
umat4x2	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_umat4x2							umat4x2;$/;"	t	namespace:glm
umat4x3	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_umat4x3							umat4x3;$/;"	t	namespace:glm
umat4x3	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_umat4x3							umat4x3;$/;"	t	namespace:glm
umat4x3	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_umat4x3							umat4x3;$/;"	t	namespace:glm
umat4x4	.\glm\gtc\matrix_integer.hpp	/^	typedef highp_umat4x4							umat4x4;$/;"	t	namespace:glm
umat4x4	.\glm\gtc\matrix_integer.hpp	/^	typedef lowp_umat4x4							umat4x4;$/;"	t	namespace:glm
umat4x4	.\glm\gtc\matrix_integer.hpp	/^	typedef mediump_umat4x4							umat4x4;$/;"	t	namespace:glm
uninitialize	.\glm\detail\setup.hpp	/^	enum ctor{uninitialize};$/;"	e	enum:glm::ctor
update	.\backup\previous\Game.cpp	/^void Game::update()$/;"	f	class:Game
update	.\src\Game.cpp	/^void Game::update()$/;"	f	class:Game
update	.\src\Player.cpp	/^void Player::update(unsigned int gameTime)$/;"	f	class:Player
update	.\src\InputHandler.cpp	/^void InputHandler::update()$/;"	f	class:InputHandler
use	.\src\Shader.cpp	/^void Shader::use()$/;"	f	class:Shader
useMicrosoftBOM	.\tinyxml\tinyxml.h	/^	bool useMicrosoftBOM;		\/\/ the UTF-8 BOM were found when read. Note this, and try to write.$/;"	m	class:TiXmlDocument
userData	.\tinyxml\tinyxml.h	/^	void*			userData;$/;"	m	class:TiXmlBase
utf8ByteTable	.\tinyxml\tinyxml.h	/^	static const int utf8ByteTable[256];$/;"	m	class:TiXmlBase
utf8ByteTable	.\tinyxml\tinyxmlparser.cpp	/^const int TiXmlBase::utf8ByteTable[256] = $/;"	m	class:TiXmlBase	file:
uvec1	.\glm\gtc\vec1.hpp	/^	typedef highp_uvec1			uvec1;$/;"	t	namespace:glm
uvec1	.\glm\gtc\vec1.hpp	/^	typedef lowp_uvec1			uvec1;$/;"	t	namespace:glm
uvec1	.\glm\gtc\vec1.hpp	/^	typedef mediump_uvec1		uvec1;$/;"	t	namespace:glm
uvec2	.\glm\detail\type_vec.hpp	/^	typedef highp_uvec2			uvec2;$/;"	t	namespace:glm
uvec2	.\glm\detail\type_vec.hpp	/^	typedef lowp_uvec2			uvec2;$/;"	t	namespace:glm
uvec2	.\glm\detail\type_vec.hpp	/^	typedef mediump_uvec2		uvec2;$/;"	t	namespace:glm
uvec3	.\glm\detail\type_vec.hpp	/^	typedef highp_uvec3			uvec3;$/;"	t	namespace:glm
uvec3	.\glm\detail\type_vec.hpp	/^	typedef lowp_uvec3			uvec3;$/;"	t	namespace:glm
uvec3	.\glm\detail\type_vec.hpp	/^	typedef mediump_uvec3		uvec3;$/;"	t	namespace:glm
uvec4	.\glm\detail\type_vec.hpp	/^	typedef highp_uvec4			uvec4;$/;"	t	namespace:glm
uvec4	.\glm\detail\type_vec.hpp	/^	typedef lowp_uvec4			uvec4;$/;"	t	namespace:glm
uvec4	.\glm\detail\type_vec.hpp	/^	typedef mediump_uvec4		uvec4;$/;"	t	namespace:glm
value	.\glm\detail\precision.hpp	/^			static const bool value = true;$/;"	m	struct:glm::detail::is_aligned
value	.\glm\detail\precision.hpp	/^		static const bool value = false;$/;"	m	struct:glm::detail::is_aligned
value	.\glm\detail\type_mat2x2.hpp	/^		col_type value[2];$/;"	m	struct:glm::tmat2x2
value	.\glm\detail\type_mat2x3.hpp	/^		col_type value[2];$/;"	m	struct:glm::tmat2x3
value	.\glm\detail\type_mat2x4.hpp	/^		col_type value[2];$/;"	m	struct:glm::tmat2x4
value	.\glm\detail\type_mat3x2.hpp	/^		col_type value[3];$/;"	m	struct:glm::tmat3x2
value	.\glm\detail\type_mat3x3.hpp	/^		col_type value[3];$/;"	m	struct:glm::tmat3x3
value	.\glm\detail\type_mat3x4.hpp	/^		col_type value[3];$/;"	m	struct:glm::tmat3x4
value	.\glm\detail\type_mat4x2.hpp	/^		col_type value[4];$/;"	m	struct:glm::tmat4x2
value	.\glm\detail\type_mat4x3.hpp	/^		col_type value[4];$/;"	m	struct:glm::tmat4x3
value	.\glm\detail\type_mat4x4.hpp	/^		col_type value[4];$/;"	m	struct:glm::tmat4x4
value	.\glm\gtx\io.hpp	/^			CTy value[3];$/;"	m	struct:glm::io::delimeter
value	.\glm\gtx\io.hpp	/^			order_type value;$/;"	m	struct:glm::io::order
value	.\glm\gtx\io.hpp	/^			unsigned value;$/;"	m	struct:glm::io::precision
value	.\glm\gtx\io.hpp	/^			unsigned value;$/;"	m	struct:glm::io::width
value	.\tinyxml\tinyxml.h	/^	TIXML_STRING	value;$/;"	m	class:TiXmlNode
value	.\tinyxml\tinyxml.h	/^	TIXML_STRING value;$/;"	m	class:TiXmlAttribute
value_address	.\glm\detail\type_gentype.hpp	/^		value_const_pointer value_address() const{return value_pointer(this);}$/;"	f	struct:glm::detail::genType
value_address	.\glm\detail\type_gentype.hpp	/^		value_pointer value_address(){return value_pointer(this);}$/;"	f	struct:glm::detail::genType
value_const_pointer	.\glm\detail\type_gentype.hpp	/^		typedef VALTYPE const * value_const_pointer;$/;"	t	struct:glm::detail::genType
value_pointer	.\glm\detail\type_gentype.hpp	/^		typedef VALTYPE * value_pointer;$/;"	t	struct:glm::detail::genType
value_reference	.\glm\detail\type_gentype.hpp	/^		typedef VALTYPE & value_reference;$/;"	t	struct:glm::detail::genType
value_type	.\glm\detail\type_gentype.hpp	/^		typedef VALTYPE value_type;$/;"	t	struct:glm::detail::genType
value_type	.\glm\detail\type_mat2x2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat2x2
value_type	.\glm\detail\type_mat2x3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat2x3
value_type	.\glm\detail\type_mat2x4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat2x4
value_type	.\glm\detail\type_mat3x2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat3x2
value_type	.\glm\detail\type_mat3x3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat3x3
value_type	.\glm\detail\type_mat3x4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat3x4
value_type	.\glm\detail\type_mat4x2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat4x2
value_type	.\glm\detail\type_mat4x3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat4x3
value_type	.\glm\detail\type_mat4x4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tmat4x4
value_type	.\glm\detail\type_vec1.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tvec1
value_type	.\glm\detail\type_vec2.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tvec2
value_type	.\glm\detail\type_vec3.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tvec3
value_type	.\glm\detail\type_vec4.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tvec4
value_type	.\glm\gtc\quaternion.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tquat
value_type	.\glm\gtx\dual_quaternion.hpp	/^		typedef T value_type;$/;"	t	struct:glm::tdualquat
vec1	.\glm\gtc\vec1.hpp	/^	typedef highp_vec1				vec1;$/;"	t	namespace:glm
vec1	.\glm\gtc\vec1.hpp	/^	typedef lowp_vec1				vec1;$/;"	t	namespace:glm
vec1	.\glm\gtc\vec1.hpp	/^	typedef mediump_vec1			vec1;$/;"	t	namespace:glm
vec2	.\glm\detail\type_vec.hpp	/^	typedef highp_vec2			vec2;$/;"	t	namespace:glm
vec2	.\glm\detail\type_vec.hpp	/^	typedef lowp_vec2			vec2;$/;"	t	namespace:glm
vec2	.\glm\detail\type_vec.hpp	/^	typedef mediump_vec2		vec2;$/;"	t	namespace:glm
vec3	.\glm\detail\type_vec.hpp	/^	typedef highp_vec3			vec3;$/;"	t	namespace:glm
vec3	.\glm\detail\type_vec.hpp	/^	typedef lowp_vec3			vec3;$/;"	t	namespace:glm
vec3	.\glm\detail\type_vec.hpp	/^	typedef mediump_vec3		vec3;$/;"	t	namespace:glm
vec4	.\glm\detail\type_vec.hpp	/^	typedef highp_vec4			vec4;$/;"	t	namespace:glm
vec4	.\glm\detail\type_vec.hpp	/^	typedef lowp_vec4			vec4;$/;"	t	namespace:glm
vec4	.\glm\detail\type_vec.hpp	/^	typedef mediump_vec4		vec4;$/;"	t	namespace:glm
version	.\tinyxml\tinyxml.h	/^	TIXML_STRING version;$/;"	m	class:TiXmlDeclaration
vertexAttribPointer	.\src\Shader.cpp	/^void Shader::vertexAttribPointer(const char* attribName, unsigned int size, unsigned int stride, unsigned int offset)$/;"	f	class:Shader
w	.\glm\detail\type_vec4.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tvec4::__anon16::__anon17
w	.\glm\detail\type_vec4.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::tvec4
w	.\glm\detail\type_vec4.hpp	/^			union { T w, a, q; };$/;"	m	union:glm::tvec4::__anon23
w	.\glm\gtc\quaternion.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tquat::__anon24::__anon25
w	.\glm\gtc\quaternion.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::tquat
wformat_saver	.\glm\gtx\io.hpp	/^		typedef basic_format_saver<wchar_t> wformat_saver;$/;"	t	namespace:glm::io
width	.\glm\gtx\io.hpp	/^			unsigned   width;$/;"	m	class:glm::io::format_punct
width	.\glm\gtx\io.hpp	/^		struct width$/;"	s	namespace:glm::io
width	.\src\Texture.h	/^  int width() const { return _width; }$/;"	f	class:Texture
width_	.\glm\gtx\io.hpp	/^			streamsize_type width_;$/;"	m	class:glm::io::basic_state_saver
window	.\src\GraphicsDevice.h	/^  SDL_Window* window() { return _window; }$/;"	f	class:GraphicsDevice
windowHeight	.\src\GraphicsDevice.h	/^  unsigned int windowHeight() const { return _windowHeight; }$/;"	f	class:GraphicsDevice
windowWidth	.\src\GraphicsDevice.h	/^  unsigned int windowWidth()  const { return _windowWidth; }$/;"	f	class:GraphicsDevice
word	.\glm\gtx\raw_data.hpp	/^	typedef detail::uint16		word;$/;"	t	namespace:glm
wstate_saver	.\glm\gtx\io.hpp	/^		typedef basic_state_saver<wchar_t> wstate_saver;$/;"	t	namespace:glm::io
x	.\glm\detail\type_vec1.hpp	/^				T x;$/;"	m	union:glm::tvec1::__anon1
x	.\glm\detail\type_vec1.hpp	/^			T x;$/;"	m	struct:glm::tvec1
x	.\glm\detail\type_vec1.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec1::__anon2
x	.\glm\detail\type_vec2.hpp	/^				struct{ T x, y; };$/;"	m	struct:glm::tvec2::__anon3::__anon4
x	.\glm\detail\type_vec2.hpp	/^			T x, y;$/;"	m	struct:glm::tvec2
x	.\glm\detail\type_vec2.hpp	/^			union {T x, r, s;};$/;"	m	union:glm::tvec2::__anon7
x	.\glm\detail\type_vec3.hpp	/^				struct{ T x, y, z; };$/;"	m	struct:glm::tvec3::__anon9::__anon10
x	.\glm\detail\type_vec3.hpp	/^			T x, y, z;$/;"	m	struct:glm::tvec3
x	.\glm\detail\type_vec3.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec3::__anon13
x	.\glm\detail\type_vec4.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tvec4::__anon16::__anon17
x	.\glm\detail\type_vec4.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::tvec4
x	.\glm\detail\type_vec4.hpp	/^			union { T x, r, s; };$/;"	m	union:glm::tvec4::__anon20
x	.\glm\gtc\quaternion.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tquat::__anon24::__anon25
x	.\glm\gtc\quaternion.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::tquat
x	.\util\Vector2.h	/^	float x() { return _x; }$/;"	f	class:Vector2D
y	.\glm\detail\type_vec2.hpp	/^				struct{ T x, y; };$/;"	m	struct:glm::tvec2::__anon3::__anon4
y	.\glm\detail\type_vec2.hpp	/^			T x, y;$/;"	m	struct:glm::tvec2
y	.\glm\detail\type_vec2.hpp	/^			union {T y, g, t;};$/;"	m	union:glm::tvec2::__anon8
y	.\glm\detail\type_vec3.hpp	/^				struct{ T x, y, z; };$/;"	m	struct:glm::tvec3::__anon9::__anon10
y	.\glm\detail\type_vec3.hpp	/^			T x, y, z;$/;"	m	struct:glm::tvec3
y	.\glm\detail\type_vec3.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec3::__anon14
y	.\glm\detail\type_vec4.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tvec4::__anon16::__anon17
y	.\glm\detail\type_vec4.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::tvec4
y	.\glm\detail\type_vec4.hpp	/^			union { T y, g, t; };$/;"	m	union:glm::tvec4::__anon21
y	.\glm\gtc\quaternion.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tquat::__anon24::__anon25
y	.\glm\gtc\quaternion.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::tquat
y	.\util\Vector2.h	/^	float y() { return _y; }$/;"	f	class:Vector2D
z	.\glm\detail\type_vec3.hpp	/^				struct{ T x, y, z; };$/;"	m	struct:glm::tvec3::__anon9::__anon10
z	.\glm\detail\type_vec3.hpp	/^			T x, y, z;$/;"	m	struct:glm::tvec3
z	.\glm\detail\type_vec3.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec3::__anon15
z	.\glm\detail\type_vec4.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tvec4::__anon16::__anon17
z	.\glm\detail\type_vec4.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::tvec4
z	.\glm\detail\type_vec4.hpp	/^			union { T z, b, p; };$/;"	m	union:glm::tvec4::__anon22
z	.\glm\gtc\quaternion.hpp	/^				struct { T x, y, z, w;};$/;"	m	struct:glm::tquat::__anon24::__anon25
z	.\glm\gtc\quaternion.hpp	/^			T x, y, z, w;$/;"	m	struct:glm::tquat
~AudioEngine	.\src\AudioEngine.cpp	/^AudioEngine::~AudioEngine()$/;"	f	class:AudioEngine
~Game	.\backup\previous\Game.cpp	/^Game::~Game()$/;"	f	class:Game
~Game	.\src\Game.cpp	/^Game::~Game()$/;"	f	class:Game
~GameObject	.\src\GameObject.h	/^  ~GameObject() {}$/;"	f	class:GameObject
~InputHandler	.\src\InputHandler.cpp	/^InputHandler::~InputHandler()$/;"	f	class:InputHandler
~TiXmlAttributeSet	.\tinyxml\tinyxml.cpp	/^TiXmlAttributeSet::~TiXmlAttributeSet()$/;"	f	class:TiXmlAttributeSet
~TiXmlBase	.\tinyxml\tinyxml.h	/^	virtual ~TiXmlBase()			{}$/;"	f	class:TiXmlBase
~TiXmlComment	.\tinyxml\tinyxml.h	/^	virtual ~TiXmlComment()	{}$/;"	f	class:TiXmlComment
~TiXmlDeclaration	.\tinyxml\tinyxml.h	/^	virtual ~TiXmlDeclaration()	{}$/;"	f	class:TiXmlDeclaration
~TiXmlDocument	.\tinyxml\tinyxml.h	/^	virtual ~TiXmlDocument() {}$/;"	f	class:TiXmlDocument
~TiXmlElement	.\tinyxml\tinyxml.cpp	/^TiXmlElement::~TiXmlElement()$/;"	f	class:TiXmlElement
~TiXmlNode	.\tinyxml\tinyxml.cpp	/^TiXmlNode::~TiXmlNode()$/;"	f	class:TiXmlNode
~TiXmlString	.\tinyxml\tinystr.h	/^	~TiXmlString ()$/;"	f	class:TiXmlString
~TiXmlText	.\tinyxml\tinyxml.h	/^	virtual ~TiXmlText() {}$/;"	f	class:TiXmlText
~TiXmlUnknown	.\tinyxml\tinyxml.h	/^	virtual ~TiXmlUnknown() {}$/;"	f	class:TiXmlUnknown
~TiXmlVisitor	.\tinyxml\tinyxml.h	/^	virtual ~TiXmlVisitor() {}$/;"	f	class:TiXmlVisitor
